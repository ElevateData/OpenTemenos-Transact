{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create, update and manage the Standing Instructions of an Account to pay a set amount at regular intervals to another's account.",
    "version" : "v1.0.0",
    "title" : "Management of Standing Order instructions"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/standingOrders/failedTransactions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves failed transactions of standing Instructions",
        "description" : "Retrieves the list of failed Standing Instructions details such as Accounts involved, payment type & reason of failure",
        "operationId" : "getFailedTransactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "debitCustomerId",
          "in" : "query",
          "description" : "Debtor customer details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountId",
          "in" : "query",
          "description" : "Credit account identifier of the payment or transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "FailedTransactionsResponse",
            "schema" : {
              "$ref" : "#/definitions/FailedTransactionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/standingOrders" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of standing Instructions",
        "description" : "Retrieves the list of Standing Instructions details such as Instruction reference, mode of Payment, payment frequency, amount, accounts & Customers involved",
        "operationId" : "getStandingOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "debitCustomerId",
          "in" : "query",
          "description" : "Debtor customer details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "standingOrderId",
          "in" : "query",
          "description" : "The unique standing order identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrdersResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrdersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/standingOrders/{standingOrderId}" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Creates a new standing Instruction",
        "description" : "Create Standing Instructions with payment type, payment frequency, ordering customer or bank information and Accounts involved",
        "operationId" : "createStandingOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "standingOrderId",
          "in" : "path",
          "description" : "The unique standing order identifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StandingOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Updates a standing Instruction",
        "description" : "Update Standing Instructions with payment type, payment frequency, ordering customer or bank information and Accounts involved",
        "operationId" : "updateStandingOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "standingOrderId",
          "in" : "path",
          "description" : "The unique standing order identifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StandingOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Cancels a Standing Instruction",
        "description" : "Delete or Revoke Standing Instructions for a Customer",
        "operationId" : "deleteStandingOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "standingOrderId",
          "in" : "path",
          "description" : "The unique standing order identifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StandingOrderDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/standingOrders/standingOrderApprovals/{standingOrderId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Approves the standing Instruction request",
        "description" : "Approve Standing Instructions that are sent for second or third level approvals",
        "operationId" : "approveStandingOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "standingOrderId",
          "in" : "path",
          "description" : "The unique standing order identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/standingOrders/cancellations/{standingOrderId}" : {
      "delete" : {
        "tags" : [ ],
        "summary" : "Rejects a standing Instruction request",
        "description" : "Reject Standing Instructions that are sent for Approvals",
        "operationId" : "rejectStandingOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "standingOrderId",
          "in" : "path",
          "description" : "The unique standing order identifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StandingOrderDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "FailedTransactionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FailedTransactionsResponseBody"
        }
      },
      "description" : "FailedTransactionsResponse"
    },
    "FailedTransactionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "type" : "object",
              "properties" : {
                "override" : {
                  "type" : "string",
                  "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                  "maxLength" : 35
                }
              }
            }
          },
          "inwardPaymentType" : {
            "type" : "string",
            "description" : "To identify the incoming SWIFT payment received direct from Delivery, payments generated by standing orders and local clearing payments.",
            "maxLength" : 100
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 25
          },
          "transactionType" : {
            "type" : "string",
            "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
            "maxLength" : 4
          },
          "debitAccountId" : {
            "type" : "number",
            "description" : "Indicates the debit account number of the payment or transaction.",
            "maximum" : 36
          },
          "debitAccountName" : {
            "type" : "string",
            "description" : "Identifies title of the Debit account",
            "maxLength" : 36
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction",
            "maxLength" : 36
          },
          "creditAccountName" : {
            "type" : "string",
            "description" : "Account name details of the creditor",
            "maxLength" : 36
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "StandingOrdersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/StandingOrdersResponseBody"
        }
      },
      "description" : "StandingOrdersResponse"
    },
    "StandingOrdersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "type" : "object",
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes",
                  "maxLength" : 35
                }
              }
            }
          },
          "accountWithBanks" : {
            "type" : "array",
            "description" : "Identifies the bank where the beneficiary maintains his account",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountWithBank" : {
                  "type" : "string",
                  "description" : "Identifies the bank where the beneficiary maintains his account",
                  "maxLength" : 35
                }
              }
            }
          },
          "standingOrderId" : {
            "type" : "string",
            "description" : "The unique standing order identifier",
            "maxLength" : 35
          },
          "orderType" : {
            "type" : "string",
            "description" : "Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled.",
            "maxLength" : 5
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Method chosen to make the payment",
            "maxLength" : 4
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 18
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
            "maxLength" : 50
          },
          "counterPartyAccountId" : {
            "type" : "string",
            "description" : "The identifier of the counter party's account",
            "maxLength" : 35
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
            "maxLength" : 17
          },
          "percentageOverCurrentBalance" : {
            "type" : "string",
            "description" : "This is used to specify a percentage value, which would be applied on the accounts excess amount(Accounts cleared balance - CURRENT.AMOUNT) to arrive at ",
            "maxLength" : 6
          },
          "payTo" : {
            "type" : "string",
            "description" : "This field holds the reason for change in IB.STATUS field."
          },
          "currentFrequencyDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the date based on current frequency"
          },
          "currentFrequency" : {
            "type" : "string",
            "description" : "Indicates the current frequency of the standing order",
            "maxLength" : 35
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "currentEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed."
          },
          "futureNotice" : {
            "type" : "string",
            "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided.",
            "maxLength" : 10
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction"
          },
          "creditAccountName" : {
            "type" : "string",
            "description" : "Account name details of the creditor"
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. "
          },
          "stoStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "STO initiation start date"
          },
          "beneficiaryBIC" : {
            "type" : "string",
            "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
            "maxLength" : 11
          },
          "beneficiaryIBAN" : {
            "type" : "string",
            "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
            "maxLength" : 35
          },
          "beneficiaryOurCharges" : {
            "type" : "string",
            "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 3
          },
          "paymentOrderProductName" : {
            "type" : "string",
            "description" : "Indicates the name of payment order product ",
            "maxLength" : 10
          },
          "beneficiaryCountryId" : {
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU",
            "maxLength" : 2
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 6
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified.",
            "maxLength" : 50
          },
          "recordStatus" : {
            "type" : "string",
            "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
            "maxLength" : 6
          }
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "StandingOrder" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/StandingOrderBody"
        }
      },
      "description" : "StandingOrder"
    },
    "StandingOrderBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryNames" : {
          "type" : "array",
          "description" : "Short title or short name of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryName" : {
                "type" : "string",
                "description" : "Short title or short name of the beneficiary",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "accountWithBanks" : {
          "type" : "array",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithBank" : {
                "type" : "string",
                "description" : "Identifies the bank where the beneficiary maintains his account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryBICNames" : {
          "type" : "array",
          "description" : "The name of the beneficiary bank",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryBICName" : {
                "type" : "string",
                "description" : "The name of the beneficiary bank",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentMethod" : {
          "type" : "string",
          "description" : "Method chosen to make the payment",
          "minLength" : 0,
          "maxLength" : 13
        },
        "currentFrequency" : {
          "type" : "string",
          "description" : "Indicates the current frequency of the standing order",
          "minLength" : 0,
          "maxLength" : 50
        },
        "currentEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed."
        },
        "futureNotice" : {
          "type" : "string",
          "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "counterPartyAccountId" : {
          "type" : "string",
          "description" : "The identifier of the counter party's account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "frequency" : {
          "type" : "string",
          "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 17
        },
        "beneficiaryReference" : {
          "type" : "string",
          "description" : "The reference which is provided to the beneficiary by the originator of payment",
          "minLength" : 0,
          "maxLength" : 27
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 18
        },
        "bankSortCode" : {
          "type" : "string",
          "description" : "The sort code or the national clearing code of the beneficiary bank. ",
          "minLength" : 0,
          "maxLength" : 20
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBICIBAN" : {
          "type" : "string",
          "description" : "Beneficiary IBAN details",
          "minLength" : 0,
          "maxLength" : 18
        },
        "beneficiaryBICCity" : {
          "type" : "string",
          "description" : "The city associated with beneficiary bank BIC (Bank Identifier Code)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 14
        },
        "currentFrequencyDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date based on current frequency"
        },
        "paymentOrderProductName" : {
          "type" : "string",
          "description" : "Indicates the name of payment order product ",
          "minLength" : 0,
          "maxLength" : 23
        },
        "beneficiaryOurCharges" : {
          "type" : "string",
          "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 21
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCategory" : {
          "type" : "string",
          "description" : "The purpose code for the payment. Should be one of the pre-defined purpose codes in the application and information will be used for payment processing",
          "minLength" : 0,
          "maxLength" : 15
        },
        "suppressFT" : {
          "type" : "string",
          "description" : "Payment processed by details",
          "minLength" : 0,
          "maxLength" : 10
        },
        "customerSpread" : {
          "type" : "string",
          "description" : "The spread that is applied to the published internal exchange rates to derive the final exchange rate or the customer rate for the transaction",
          "minLength" : 0,
          "maxLength" : 14
        },
        "customerRate" : {
          "type" : "string",
          "description" : "The exchange rate that is actually applied for currency conversion in case of transactions involving FX conversion. ",
          "minLength" : 0,
          "maxLength" : 12
        },
        "paymentOrderVersion" : {
          "type" : "string",
          "description" : "Specifies the payment order screen which will be used when executing standing instruction",
          "minLength" : 0,
          "maxLength" : 54
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "StandingOrderResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/StandingOrderResponseBody"
        }
      },
      "description" : "StandingOrderResponse"
    },
    "StandingOrderResponseBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryNames" : {
          "type" : "array",
          "description" : "Short title or short name of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryName" : {
                "type" : "string",
                "description" : "Short title or short name of the beneficiary",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "accountWithBanks" : {
          "type" : "array",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithBank" : {
                "type" : "string",
                "description" : "Identifies the bank where the beneficiary maintains his account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryBICNames" : {
          "type" : "array",
          "description" : "The name of the beneficiary bank",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryBICName" : {
                "type" : "string",
                "description" : "The name of the beneficiary bank",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentMethod" : {
          "type" : "string",
          "description" : "Method chosen to make the payment",
          "minLength" : 0,
          "maxLength" : 13
        },
        "currentFrequency" : {
          "type" : "string",
          "description" : "Indicates the current frequency of the standing order",
          "minLength" : 0,
          "maxLength" : 50
        },
        "currentEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed."
        },
        "futureNotice" : {
          "type" : "string",
          "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "counterPartyAccountId" : {
          "type" : "string",
          "description" : "The identifier of the counter party's account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "frequency" : {
          "type" : "string",
          "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 17
        },
        "beneficiaryReference" : {
          "type" : "string",
          "description" : "The reference which is provided to the beneficiary by the originator of payment",
          "minLength" : 0,
          "maxLength" : 27
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 18
        },
        "bankSortCode" : {
          "type" : "string",
          "description" : "The sort code or the national clearing code of the beneficiary bank. ",
          "minLength" : 0,
          "maxLength" : 20
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBICIBAN" : {
          "type" : "string",
          "description" : "Beneficiary IBAN details",
          "minLength" : 0,
          "maxLength" : 18
        },
        "beneficiaryBICCity" : {
          "type" : "string",
          "description" : "The city associated with beneficiary bank BIC (Bank Identifier Code)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 14
        },
        "currentFrequencyDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date based on current frequency"
        },
        "paymentOrderProductName" : {
          "type" : "string",
          "description" : "Indicates the name of payment order product ",
          "minLength" : 0,
          "maxLength" : 23
        },
        "beneficiaryOurCharges" : {
          "type" : "string",
          "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 21
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCategory" : {
          "type" : "string",
          "description" : "The purpose code for the payment. Should be one of the pre-defined purpose codes in the application and information will be used for payment processing",
          "minLength" : 0,
          "maxLength" : 15
        },
        "suppressFT" : {
          "type" : "string",
          "description" : "Payment processed by details",
          "minLength" : 0,
          "maxLength" : 10
        },
        "customerSpread" : {
          "type" : "string",
          "description" : "The spread that is applied to the published internal exchange rates to derive the final exchange rate or the customer rate for the transaction",
          "minLength" : 0,
          "maxLength" : 14
        },
        "customerRate" : {
          "type" : "string",
          "description" : "The exchange rate that is actually applied for currency conversion in case of transactions involving FX conversion. ",
          "minLength" : 0,
          "maxLength" : 12
        },
        "paymentOrderVersion" : {
          "type" : "string",
          "description" : "Specifies the payment order screen which will be used when executing standing instruction",
          "minLength" : 0,
          "maxLength" : 54
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "StandingOrderDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "StandingOrderDelete"
    }
  }
}