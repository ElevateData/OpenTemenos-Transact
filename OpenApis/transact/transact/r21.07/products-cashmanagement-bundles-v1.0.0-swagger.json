{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create, amend and retrieve the bundle arrangement conditions",
    "version" : "v1.0.0",
    "title" : "Cash management - Bundle arrangement conditions"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/product/cashManagement/bundles/accounts/summaryAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Summary Accounts",
        "description" : "Update Debit Interest condition for Summary Accounts",
        "operationId" : "updateSummaryAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateSummaryAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Currency Accounts",
        "description" : "Update Debit Interest condition for Currency Accounts",
        "operationId" : "updateCurrencyAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCurrencyAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Transaction Accounts",
        "description" : "Update Debit Interest condition for Transaction Accounts",
        "operationId" : "updateTransactionAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateTransactionAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/goLiveDates" : {
      "post" : {
        "summary" : "Set Go-Live date for SA / CS / TR / MTR Accounts",
        "description" : "Set Go-Live date for SA / CS / TR / MTR Accounts",
        "operationId" : "updateAccountOperationalDate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateAccountOperationalDateResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/liveAccountClosures" : {
      "post" : {
        "summary" : "Closure of CS / SA / TR accounts",
        "description" : "Closure of CS / SA / TR accounts",
        "operationId" : "createBundleLiveAccountClosure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleLiveAccountClosureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/preliminaryAccountClosures" : {
      "post" : {
        "summary" : "Closure of TR / CS / SA Accounts in Prelim",
        "description" : "Closure of TR / CS / SA Accounts in Prelim",
        "operationId" : "createBundleAccountClosure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleAccountClosureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/{bundleId}/interestConditions" : {
      "get" : {
        "summary" : "List Master Arrangement static information",
        "description" : "List Master Arrangement static information",
        "operationId" : "getMasterInterestCompensation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "description" : "The field is to specify an arrangement reference which can act as a Master for the arrangement being created",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "MasterInterestCompensationResponse",
            "schema" : {
              "$ref" : "#/definitions/MasterInterestCompensationResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/drafts" : {
      "post" : {
        "summary" : "Creation of Master / Bundle Arrangement, SA / CS / TR / MTR",
        "description" : "Creation of Master / Bundle Arrangement, SA / CS / TR / MTR",
        "operationId" : "createBundleMasterArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BundleMasterArrangements"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleMasterArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleMasterArrangementsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts" : {
      "post" : {
        "summary" : "Add New accounts SA / CS / TR / MTR+J16",
        "description" : "Add New accounts SA / CS / TR / MTR+J16",
        "operationId" : "updateBundleMasterArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleMasterArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Edit / Amend Draft / Prelim structure",
        "description" : "Edit / Amend Draft / Prelim structure",
        "operationId" : "updateBundleStructureAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleStructureAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/crossPoolMovements" : {
      "post" : {
        "summary" : "Initiate Cross Pool Movement",
        "description" : "Initiate Cross Pool Movement",
        "operationId" : "updateCrossPoolAccountMovement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCrossPoolAccountMovementResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/crossPoolMovements/cancellations" : {
      "post" : {
        "summary" : "Edit / Cancel Cross Pool Movement",
        "description" : "Edit / Cancel Cross Pool Movement",
        "operationId" : "deleteCrossPoolAccountMovement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "deleteCrossPoolAccountMovementResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/restructures" : {
      "post" : {
        "summary" : "Conversion of TR accounts to Standalone Accounts",
        "description" : "Conversion of TR accounts to Standalone Accounts",
        "operationId" : "deleteAccountFromBundle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "deleteAccountFromBundleResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles" : {
      "post" : {
        "summary" : "Initiate Cashpool Restructure",
        "description" : "Initiate Cashpool Restructure",
        "operationId" : "updateBundleStructure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleStructureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/summaryAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Summary account",
        "description" : "Update Credit Interest condition for a Summary account",
        "operationId" : "updateSumaryAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateSumaryAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Summary account",
        "description" : "Update Credit Interest condition for a Summary account",
        "operationId" : "updateCurrencySummaryAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCurrencySummaryAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Transaction account",
        "description" : "Update Credit Interest condition for a Transaction account",
        "operationId" : "updateTransactionAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountDebitInterestConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateTransactionAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/summaryAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Summary accounts",
        "description" : "To Set cover control for Summary accounts",
        "operationId" : "createSummaryAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountLimitConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSummaryAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountLimitConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Currency Summary accounts",
        "description" : "To Set cover control for Currency Summary accounts",
        "operationId" : "createCurrencySummaryAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountLimitConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCurrencySummaryAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountLimitConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Transaction accounts",
        "description" : "To Set cover control for Transaction accounts",
        "operationId" : "createTransactionAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountLimitConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createTransactionAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountLimitConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/{arrangementId}/inheritanceConditions" : {
      "get" : {
        "summary" : "Retrieves the inheritance details of Master/CS/SA/CT Account",
        "description" : "Retrieves the inheritance details of Master/CS/SA/CT Account",
        "operationId" : "getSourceInheritanceDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementId",
          "in" : "path",
          "description" : "Indicates an unique identifier of an account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SourceInheritanceDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/SourceInheritanceDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/transactionAccounts/{arrangementId}/inheritanceConditions" : {
      "get" : {
        "summary" : "Retrieves the inheritance details of TR Accounts",
        "description" : "Retrieves the inheritance details of TR Accounts",
        "operationId" : "getTargetInheritanceDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementId",
          "in" : "path",
          "description" : "Indicates an unique identifier of an account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "TargetInheritanceDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/TargetInheritanceDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/{arrangementId}/childAccounts" : {
      "get" : {
        "summary" : "Retrieves the child accounts details under the SA/CS Accounts",
        "description" : "Retrieves the child accounts details under the SA/CS Accounts",
        "operationId" : "getChildAccountsDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementId",
          "in" : "path",
          "description" : "Indicates an unique identifier of an account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ChildAccountsDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/ChildAccountsDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "SummaryAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsBody"
        }
      },
      "description" : "SummaryAccountDebitInterestConditions"
    },
    "SummaryAccountDebitInterestConditionsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "drinterest" : {
          "type" : "object",
          "properties" : {
            "interest" : {
              "type" : "array",
              "description" : "Interest amount",
              "items" : {
                "type" : "object",
                "properties" : {
                  "fixed" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "spread" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 6
                  },
                  "minMaxRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "maxRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "effectiveRate" : {
                    "type" : "string",
                    "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "upTo" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "negativeRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 13
                  },
                  "orPercent" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 9
                  },
                  "margins" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "margin" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 6
                        },
                        "marginOperation" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "marginRate" : {
                          "type" : "string",
                          "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                          "minLength" : 0,
                          "maxLength" : 10
                        }
                      }
                    }
                  }
                }
              }
            },
            "attributes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "value" : {
                    "type" : "string",
                    "description" : "The value of the field on which the Alert criteria is based",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "linkedArrangement" : {
                    "type" : "string",
                    "description" : "The account which is linked for calculating interest that should be applied to this account",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "tiers" : {
              "type" : "string",
              "description" : "",
              "minLength" : 0,
              "maxLength" : 5
            },
            "linkedProperty" : {
              "type" : "string",
              "description" : "",
              "minLength" : 0,
              "maxLength" : 15
            }
          }
        }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "SummaryAccountDebitInterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponseBody"
        }
      },
      "description" : "SummaryAccountDebitInterestConditionsResponse"
    },
    "SummaryAccountDebitInterestConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "crinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "spread" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "maxRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "upTo" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "orPercent" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 6
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The account which is linked for calculating interest that should be applied to this account",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "description" : "",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "penalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundleinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhpenalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              },
              "property" : {
                "type" : "string",
                "description" : "The corresponding property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "TransactionAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsBody"
        }
      },
      "description" : "TransactionAccountDebitInterestConditions"
    },
    "TransactionAccountDebitInterestConditionsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "drinterest" : {
          "type" : "object",
          "properties" : {
            "interest" : {
              "type" : "array",
              "description" : "Interest amount",
              "items" : {
                "type" : "object",
                "properties" : {
                  "fixed" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "spread" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 6
                  },
                  "minMaxRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "maxRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "effectiveRate" : {
                    "type" : "string",
                    "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "upTo" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "negativeRate" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 13
                  },
                  "orPercent" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 9
                  },
                  "margins" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "margin" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 6
                        },
                        "marginOperation" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "marginRate" : {
                          "type" : "string",
                          "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                          "minLength" : 0,
                          "maxLength" : 10
                        }
                      }
                    }
                  }
                }
              }
            },
            "attributes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "value" : {
                    "type" : "string",
                    "description" : "The value of the field on which the Alert criteria is based",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "linkedArrangement" : {
                    "type" : "string",
                    "description" : "The account which is linked for calculating interest that should be applied to this account",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "tiers" : {
              "type" : "string",
              "description" : "",
              "minLength" : 0,
              "maxLength" : 5
            },
            "linkedProperty" : {
              "type" : "string",
              "description" : "",
              "minLength" : 0,
              "maxLength" : 15
            }
          }
        }
      }
    },
    "TransactionAccountDebitInterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponseBody"
        }
      },
      "description" : "TransactionAccountDebitInterestConditionsResponse"
    },
    "TransactionAccountDebitInterestConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "crinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "spread" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "maxRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "upTo" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "orPercent" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 6
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The account which is linked for calculating interest that should be applied to this account",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "description" : "",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "penalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundleinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhpenalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "utllimitfees" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ovdlimitfees" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundlecrinterst" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundledrinterst" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AccountOperationalDate" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AccountOperationalDateBody"
        }
      },
      "description" : "AccountOperationalDate"
    },
    "AccountOperationalDateBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "accountAliases" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountAlias" : {
                    "type" : "string",
                    "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events",
                    "minLength" : 0,
                    "maxLength" : 12
                  }
                }
              }
            },
            "accountReferences" : {
              "type" : "array",
              "description" : "Account Reference of the error account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountReference" : {
                    "type" : "string",
                    "description" : "Account Reference of the error account",
                    "minLength" : 0,
                    "maxLength" : 16
                  }
                }
              }
            },
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "accountCompanies" : {
              "type" : "array",
              "description" : "Company of the account to be created",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountCompany" : {
                    "type" : "string",
                    "description" : "Company of the account to be created",
                    "minLength" : 0,
                    "maxLength" : 14
                  }
                }
              }
            },
            "accountCurrencies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountCurrency" : {
                    "type" : "string",
                    "description" : "Currency of the account. For example: USD, GBP.",
                    "minLength" : 0,
                    "maxLength" : 15
                  }
                }
              }
            },
            "accountProducts" : {
              "type" : "array",
              "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountProduct" : {
                    "type" : "string",
                    "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                    "minLength" : 0,
                    "maxLength" : 14
                  }
                }
              }
            },
            "shortNames" : {
              "type" : "array",
              "description" : "Contains the name of the account, basically the short title of the account.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "shortName" : {
                    "type" : "string",
                    "description" : "Contains the name of the account, basically the short title of the account.",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "alternateReferences" : {
              "type" : "array",
              "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alternateReference" : {
                    "type" : "string",
                    "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "parentAccounts" : {
              "type" : "array",
              "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "parentAccount" : {
                    "type" : "string",
                    "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                    "minLength" : 0,
                    "maxLength" : 13
                  }
                }
              }
            },
            "levels" : {
              "type" : "array",
              "description" : "Captured for information purpose to render the placeholders in GUI",
              "items" : {
                "type" : "object",
                "properties" : {
                  "level" : {
                    "type" : "string",
                    "description" : "Captured for information purpose to render the placeholders in GUI",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "goLiveDates" : {
              "type" : "array",
              "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "goLiveDate" : {
                    "type" : "string",
                    "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "linkTypes" : {
              "type" : "array",
              "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "linkType" : {
                    "type" : "string",
                    "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "keepBalances" : {
              "type" : "array",
              "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "keepBalance" : {
                    "type" : "string",
                    "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                    "minLength" : 0,
                    "maxLength" : 11
                  }
                }
              }
            },
            "newMasters" : {
              "type" : "array",
              "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
              "items" : {
                "type" : "object",
                "properties" : {
                  "newMaster" : {
                    "type" : "string",
                    "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "cancelRestructures" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "cancelRestructure" : {
                    "type" : "string",
                    "description" : "Indicates a flag/field to cancel the restructure event",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "integrityCheckDay" : {
              "type" : "string",
              "description" : "Indicates the n number of days before Go Live for it to run the pool integrity validations and record the results in pool exception log",
              "minLength" : 0,
              "maxLength" : 20,
              "enum" : [ "integrityCheckDay" ]
            }
          }
        }
      }
    },
    "AccountOperationalDateResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AccountOperationalDateResponseBody"
        }
      },
      "description" : "AccountOperationalDateResponse"
    },
    "AccountOperationalDateResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountAliases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountAlias" : {
                            "type" : "string",
                            "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "accountReferences" : {
                      "type" : "array",
                      "description" : "Account Reference of the error account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountReference" : {
                            "type" : "string",
                            "description" : "Account Reference of the error account",
                            "minLength" : 0,
                            "maxLength" : 16
                          }
                        }
                      }
                    },
                    "customerIds" : {
                      "type" : "array",
                      "description" : "Identifier of the customer",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customerId" : {
                            "type" : "string",
                            "description" : "Identifier of the customer",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "accountCompanies" : {
                      "type" : "array",
                      "description" : "Company of the account to be created",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountCompany" : {
                            "type" : "string",
                            "description" : "Company of the account to be created",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "accountCurrencies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountCurrency" : {
                            "type" : "string",
                            "description" : "Currency of the account. For example: USD, GBP.",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "accountProducts" : {
                      "type" : "array",
                      "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountProduct" : {
                            "type" : "string",
                            "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "shortNames" : {
                      "type" : "array",
                      "description" : "Contains the name of the account, basically the short title of the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "shortName" : {
                            "type" : "string",
                            "description" : "Contains the name of the account, basically the short title of the account.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "alternateReferences" : {
                      "type" : "array",
                      "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateReference" : {
                            "type" : "string",
                            "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "parentAccounts" : {
                      "type" : "array",
                      "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "parentAccount" : {
                            "type" : "string",
                            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    },
                    "levels" : {
                      "type" : "array",
                      "description" : "Captured for information purpose to render the placeholders in GUI",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "level" : {
                            "type" : "string",
                            "description" : "Captured for information purpose to render the placeholders in GUI",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "goLiveDates" : {
                      "type" : "array",
                      "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "goLiveDate" : {
                            "type" : "string",
                            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "linkTypes" : {
                      "type" : "array",
                      "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "linkType" : {
                            "type" : "string",
                            "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "keepBalances" : {
                      "type" : "array",
                      "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "keepBalance" : {
                            "type" : "string",
                            "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "newMasters" : {
                      "type" : "array",
                      "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "newMaster" : {
                            "type" : "string",
                            "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "cancelRestructures" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "cancelRestructure" : {
                            "type" : "string",
                            "description" : "Indicates a flag/field to cancel the restructure event",
                            "minLength" : 0,
                            "maxLength" : 17
                          }
                        }
                      }
                    },
                    "integrityCheckDay" : {
                      "type" : "string",
                      "description" : "Indicates the n number of days before Go Live for it to run the pool integrity validations and record the results in pool exception log",
                      "minLength" : 0,
                      "maxLength" : 20,
                      "enum" : [ "integrityCheckDay" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "MasterInterestCompensationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MasterInterestCompensationResponseBody"
        }
      },
      "description" : "MasterInterestCompensationResponse"
    },
    "MasterInterestCompensationResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "recipientProduct" : {
            "type" : "string",
            "description" : "Indicates the recipient product in which interest property defined will be used as a recipient",
            "maxLength" : 30
          },
          "recipientProperty" : {
            "type" : "string",
            "description" : "Indicates the interest property which accepts the balances from the donors",
            "maxLength" : 30
          },
          "donorProduct" : {
            "type" : "string",
            "description" : "Indicates the donor product in which interest property defined will be used as a donor",
            "maxLength" : 30
          },
          "donorProperty" : {
            "type" : "string",
            "description" : "Indicates the interest property whose balances are donated to the recipient",
            "maxLength" : 30
          },
          "donorAccrual" : {
            "type" : "string",
            "description" : "Indicates whether the donor's interest accrual have to be calculated or suppressed",
            "maxLength" : 20
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "BundleMasterArrangements" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsBody"
        }
      },
      "description" : "BundleMasterArrangements"
    },
    "BundleMasterArrangementsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productBundle" : {
          "type" : "object",
          "properties" : {
            "product" : {
              "type" : "array",
              "description" : "Indicates an id or name of a product",
              "items" : {
                "type" : "object",
                "properties" : {
                  "group" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "product" : {
                    "type" : "string",
                    "description" : "Indicates an id or name of a product",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "minimum" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "maximum" : {
                    "type" : "string",
                    "description" : "",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "arrangment" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "arrangmentId" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "currency" : {
                          "type" : "string",
                          "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
                          "minLength" : 0,
                          "maxLength" : 8
                        }
                      }
                    }
                  },
                  "masterArrangement" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "arrangmentId" : {
                          "type" : "string",
                          "description" : "",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "propertyType" : {
                          "type" : "string",
                          "description" : "Values selected to determine action on condition e.g. accounting rules only changed at product level. Standard set of values to select from.",
                          "minLength" : 0,
                          "maxLength" : 12
                        }
                      }
                    }
                  }
                }
              }
            },
            "referenceCurrency" : {
              "type" : "string",
              "description" : "The reference currency",
              "minLength" : 0,
              "maxLength" : 18
            },
            "limitType" : {
              "type" : "string",
              "description" : "Defines the limit type for the trade",
              "minLength" : 0,
              "maxLength" : 10
            },
            "masterAccountName" : {
              "type" : "string",
              "description" : "",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "accountAliases" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountAlias" : {
                    "type" : "string",
                    "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events",
                    "minLength" : 0,
                    "maxLength" : 12
                  }
                }
              }
            },
            "accountReferences" : {
              "type" : "array",
              "description" : "Account Reference of the error account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountReference" : {
                    "type" : "string",
                    "description" : "Account Reference of the error account",
                    "minLength" : 0,
                    "maxLength" : 16
                  }
                }
              }
            },
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "accountCompanies" : {
              "type" : "array",
              "description" : "Company of the account to be created",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountCompany" : {
                    "type" : "string",
                    "description" : "Company of the account to be created",
                    "minLength" : 0,
                    "maxLength" : 14
                  }
                }
              }
            },
            "accountCurrencies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountCurrency" : {
                    "type" : "string",
                    "description" : "Currency of the account. For example: USD, GBP.",
                    "minLength" : 0,
                    "maxLength" : 15
                  }
                }
              }
            },
            "accountProducts" : {
              "type" : "array",
              "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "accountProduct" : {
                    "type" : "string",
                    "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                    "minLength" : 0,
                    "maxLength" : 14
                  }
                }
              }
            },
            "shortNames" : {
              "type" : "array",
              "description" : "Contains the name of the account, basically the short title of the account.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "shortName" : {
                    "type" : "string",
                    "description" : "Contains the name of the account, basically the short title of the account.",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "alternateReferences" : {
              "type" : "array",
              "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alternateReference" : {
                    "type" : "string",
                    "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "parentAccounts" : {
              "type" : "array",
              "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "parentAccount" : {
                    "type" : "string",
                    "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                    "minLength" : 0,
                    "maxLength" : 13
                  }
                }
              }
            },
            "levels" : {
              "type" : "array",
              "description" : "Captured for information purpose to render the placeholders in GUI",
              "items" : {
                "type" : "object",
                "properties" : {
                  "level" : {
                    "type" : "string",
                    "description" : "Captured for information purpose to render the placeholders in GUI",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "goLiveDates" : {
              "type" : "array",
              "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "goLiveDate" : {
                    "type" : "string",
                    "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "linkTypes" : {
              "type" : "array",
              "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "linkType" : {
                    "type" : "string",
                    "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "keepBalances" : {
              "type" : "array",
              "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "keepBalance" : {
                    "type" : "string",
                    "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                    "minLength" : 0,
                    "maxLength" : 11
                  }
                }
              }
            },
            "newMasters" : {
              "type" : "array",
              "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
              "items" : {
                "type" : "object",
                "properties" : {
                  "newMaster" : {
                    "type" : "string",
                    "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "cancelRestructures" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "cancelRestructure" : {
                    "type" : "string",
                    "description" : "Indicates a flag/field to cancel the restructure event",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "integrityCheckDay" : {
              "type" : "string",
              "description" : "Indicates the n number of days before Go Live for it to run the pool integrity validations and record the results in pool exception log",
              "minLength" : 0,
              "maxLength" : 20,
              "enum" : [ "integrityCheckDay" ]
            }
          }
        }
      }
    },
    "BundleMasterArrangementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsResponseBody"
        }
      },
      "description" : "BundleMasterArrangementsResponse"
    },
    "BundleMasterArrangementsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "productBundle" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "product" : {
                      "type" : "array",
                      "description" : "Indicates an id or name of a product",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "group" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "product" : {
                            "type" : "string",
                            "description" : "Indicates an id or name of a product",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "minimum" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "maximum" : {
                            "type" : "string",
                            "description" : "",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "arrangment" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "arrangmentId" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "currency" : {
                                  "type" : "string",
                                  "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
                                  "minLength" : 0,
                                  "maxLength" : 8
                                }
                              }
                            }
                          },
                          "masterArrangement" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "arrangmentId" : {
                                  "type" : "string",
                                  "description" : "",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "propertyType" : {
                                  "type" : "string",
                                  "description" : "Values selected to determine action on condition e.g. accounting rules only changed at product level. Standard set of values to select from.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "referenceCurrency" : {
                      "type" : "string",
                      "description" : "The reference currency",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "limitType" : {
                      "type" : "string",
                      "description" : "Defines the limit type for the trade",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "masterAccountName" : {
                      "type" : "string",
                      "description" : "",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            },
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountAliases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountAlias" : {
                            "type" : "string",
                            "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "accountReferences" : {
                      "type" : "array",
                      "description" : "Account Reference of the error account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountReference" : {
                            "type" : "string",
                            "description" : "Account Reference of the error account",
                            "minLength" : 0,
                            "maxLength" : 16
                          }
                        }
                      }
                    },
                    "customerIds" : {
                      "type" : "array",
                      "description" : "Identifier of the customer",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customerId" : {
                            "type" : "string",
                            "description" : "Identifier of the customer",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "accountCompanies" : {
                      "type" : "array",
                      "description" : "Company of the account to be created",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountCompany" : {
                            "type" : "string",
                            "description" : "Company of the account to be created",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "accountCurrencies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountCurrency" : {
                            "type" : "string",
                            "description" : "Currency of the account. For example: USD, GBP.",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "accountProducts" : {
                      "type" : "array",
                      "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountProduct" : {
                            "type" : "string",
                            "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "shortNames" : {
                      "type" : "array",
                      "description" : "Contains the name of the account, basically the short title of the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "shortName" : {
                            "type" : "string",
                            "description" : "Contains the name of the account, basically the short title of the account.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "alternateReferences" : {
                      "type" : "array",
                      "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateReference" : {
                            "type" : "string",
                            "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "parentAccounts" : {
                      "type" : "array",
                      "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "parentAccount" : {
                            "type" : "string",
                            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    },
                    "levels" : {
                      "type" : "array",
                      "description" : "Captured for information purpose to render the placeholders in GUI",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "level" : {
                            "type" : "string",
                            "description" : "Captured for information purpose to render the placeholders in GUI",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "goLiveDates" : {
                      "type" : "array",
                      "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "goLiveDate" : {
                            "type" : "string",
                            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated.",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "linkTypes" : {
                      "type" : "array",
                      "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "linkType" : {
                            "type" : "string",
                            "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "keepBalances" : {
                      "type" : "array",
                      "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "keepBalance" : {
                            "type" : "string",
                            "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "newMasters" : {
                      "type" : "array",
                      "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "newMaster" : {
                            "type" : "string",
                            "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool..",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "cancelRestructures" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "cancelRestructure" : {
                            "type" : "string",
                            "description" : "Indicates a flag/field to cancel the restructure event",
                            "minLength" : 0,
                            "maxLength" : 17
                          }
                        }
                      }
                    },
                    "integrityCheckDay" : {
                      "type" : "string",
                      "description" : "Indicates the n number of days before Go Live for it to run the pool integrity validations and record the results in pool exception log",
                      "minLength" : 0,
                      "maxLength" : 20,
                      "enum" : [ "integrityCheckDay" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "SummaryAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountLimitConditionsBody"
        }
      },
      "description" : "SummaryAccountLimitConditions"
    },
    "SummaryAccountLimitConditionsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "limit" : {
          "type" : "object",
          "properties" : {
            "isCreditCheckCondition" : {
              "type" : "string",
              "description" : "To decide if credit check processing to be performed for the account based on the conditions defined in the field CREDIT.CHK.TXN.TYPE.",
              "minLength" : 0,
              "maxLength" : 22
            },
            "creditCheckTransactionType" : {
              "type" : "string",
              "description" : "To define credit checking conditions in conjunction with the field CREDIT.CHK.CONDITION.",
              "minLength" : 0,
              "maxLength" : 26
            },
            "internalCreditFacility" : {
              "type" : "string",
              "description" : "To define Secondary Limit Amount to be used for the purpose of Secondary Limit Check.The Secondary Limit Amount defined in this field will be represented in respective account currency",
              "minLength" : 0,
              "maxLength" : 22
            }
          }
        }
      }
    },
    "SummaryAccountLimitConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountLimitConditionsResponseBody"
        }
      },
      "description" : "SummaryAccountLimitConditionsResponse"
    },
    "SummaryAccountLimitConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "isCreditCheckCondition" : {
                      "type" : "string",
                      "description" : "To decide if credit check processing to be performed for the account based on the conditions defined in the field CREDIT.CHK.TXN.TYPE.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "creditCheckTransactionType" : {
                      "type" : "string",
                      "description" : "To define credit checking conditions in conjunction with the field CREDIT.CHK.CONDITION.",
                      "minLength" : 0,
                      "maxLength" : 26
                    },
                    "internalCreditFacility" : {
                      "type" : "string",
                      "description" : "To define Secondary Limit Amount to be used for the purpose of Secondary Limit Check.The Secondary Limit Amount defined in this field will be represented in respective account currency",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TransactionAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountLimitConditionsBody"
        }
      },
      "description" : "TransactionAccountLimitConditions"
    },
    "TransactionAccountLimitConditionsBody" : {
      "type" : "object",
      "properties" : {
        "arrangementCustomerIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementCustomerId" : {
                "type" : "string",
                "description" : "Customer id details of the specific arrangement",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "limit" : {
          "type" : "object",
          "properties" : {
            "isCreditCheckCondition" : {
              "type" : "string",
              "description" : "To decide if credit check processing to be performed for the account based on the conditions defined in the field CREDIT.CHK.TXN.TYPE.",
              "minLength" : 0,
              "maxLength" : 22
            },
            "creditCheckTransactionType" : {
              "type" : "string",
              "description" : "To define credit checking conditions in conjunction with the field CREDIT.CHK.CONDITION.",
              "minLength" : 0,
              "maxLength" : 26
            },
            "internalCreditFacility" : {
              "type" : "string",
              "description" : "To define Secondary Limit Amount to be used for the purpose of Secondary Limit Check.The Secondary Limit Amount defined in this field will be represented in respective account currency",
              "minLength" : 0,
              "maxLength" : 22
            }
          }
        }
      }
    },
    "TransactionAccountLimitConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountLimitConditionsResponseBody"
        }
      },
      "description" : "TransactionAccountLimitConditionsResponse"
    },
    "TransactionAccountLimitConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementCustomerIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "arrangementCustomerId" : {
                    "type" : "string",
                    "description" : "Customer id details of the specific arrangement",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "isCreditCheckCondition" : {
                      "type" : "string",
                      "description" : "To decide if credit check processing to be performed for the account based on the conditions defined in the field CREDIT.CHK.TXN.TYPE.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "creditCheckTransactionType" : {
                      "type" : "string",
                      "description" : "To define credit checking conditions in conjunction with the field CREDIT.CHK.CONDITION.",
                      "minLength" : 0,
                      "maxLength" : 26
                    },
                    "internalCreditFacility" : {
                      "type" : "string",
                      "description" : "To define Secondary Limit Amount to be used for the purpose of Secondary Limit Check.The Secondary Limit Amount defined in this field will be represented in respective account currency",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "SourceInheritanceDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SourceInheritanceDetailsResponseBody"
        }
      },
      "description" : "SourceInheritanceDetailsResponse"
    },
    "SourceInheritanceDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "sourceProperty" : {
            "type" : "string",
            "description" : "Indicates the property of source product from which to inherit the property. It will be defined at source side of inheritance condition",
            "maxLength" : 30
          },
          "sourceCurrency" : {
            "type" : "string",
            "description" : "Indicates the property with the given currency can only be inherited. It will be defined at source side inheritance condition",
            "maxLength" : 3
          },
          "sourceInheritance" : {
            "type" : "string",
            "description" : "Indicates a flag to check the property inheritance from a source arrangement",
            "maxLength" : 3
          }
        }
      }
    },
    "TargetInheritanceDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TargetInheritanceDetailsResponseBody"
        }
      },
      "description" : "TargetInheritanceDetailsResponse"
    },
    "TargetInheritanceDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "targetProperty" : {
            "type" : "string",
            "description" : "Indicates the property of the source product from which the target property is inherited",
            "maxLength" : 30
          },
          "targetInheritance" : {
            "type" : "string",
            "description" : "Indicates the target property which will be inherited from the source",
            "maxLength" : 3
          }
        }
      }
    },
    "ChildAccountsDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ChildAccountsDetailsResponseBody"
        }
      },
      "description" : "ChildAccountsDetailsResponse"
    },
    "ChildAccountsDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition."
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 17
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "parentAccount" : {
            "type" : "string",
            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
            "maxLength" : 19
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 40
          },
          "accountStatus" : {
            "type" : "string",
            "description" : "Specifies the current status of the account, which is either active, inactive or closed."
          },
          "liveDate" : {
            "type" : "string",
            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure."
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "bookedBalance" : {
            "type" : "string",
            "description" : "Balances of the account as per the Booking dated."
          },
          "valueDatedBalance" : {
            "type" : "string",
            "description" : "Balances of the account as per the value dated. Contains the value dated Balance of the Account."
          },
          "workingBalance" : {
            "type" : "string",
            "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries."
          }
        }
      }
    }
  }
}