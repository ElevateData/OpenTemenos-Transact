{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to manage the Payments settings related to local clearing payments",
    "version" : "v1.0.0",
    "title" : "Payments Configuration"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/payments/localClearings/{systemId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update local clearing parameters",
        "description" : "Update the parameters required by Funds Transfer for control of local clearing payments. This parameters will be used for BC, BI and BD transaction types within FUNDS.TRANSFER.",
        "operationId" : "updateLocalClearing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "path",
          "description" : "The system application identifier that could be used as entry reference or used as prefix in unique transaction identifiers",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocalClearing"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "LocalClearingResponse",
            "schema" : {
              "$ref" : "#/definitions/LocalClearingResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/parameters/{companyId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the payment order parameter",
        "description" : "Update the parameter which connects Payment Order and Payment System - This API is deprecated and moved to the following URL :/settings/configuration/payments/paymentOrders/{paymentOrderId}",
        "operationId" : "updatePaymentOrderParameter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrderParameter"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderParameterResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderParameterResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/order/payments/products/{productId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the payment order product",
        "description" : "Update the Payment features that are specific to a product - This API is deprecated and moved to the following URL:/settings/configuration/payments/products/{productId}",
        "operationId" : "updatePaymentOrderProduct",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrderProduct"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderProductResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderProductResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "LocalClearing" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LocalClearingBody"
        }
      },
      "description" : "LocalClearing"
    },
    "LocalClearingBody" : {
      "type" : "object",
      "properties" : {
        "clearingTypes" : {
          "type" : "array",
          "description" : "Defines the clearing type. Values can be RTGS,  non-RTGS and instant payments.",
          "items" : {
            "type" : "object",
            "properties" : {
              "transactionType" : {
                "type" : "string",
                "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "inOutType" : {
                "type" : "string",
                "description" : "Defines whether the associated transaction type is used for inward or outward payments",
                "minLength" : 0,
                "maxLength" : 9
              },
              "debitCreditId" : {
                "type" : "string",
                "description" : "Determines whether the associated transaction type processes debits, credits or both to the customer account",
                "minLength" : 0,
                "maxLength" : 13
              }
            }
          }
        },
        "clearingSystem" : {
          "type" : "string",
          "description" : "The clearing system defined here will customize the funds transfer field specifications for BC transactions",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "LocalClearingResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LocalClearingResponseBody"
        }
      },
      "description" : "LocalClearingResponse"
    },
    "LocalClearingResponseBody" : {
      "type" : "object",
      "properties" : {
        "clearingTypes" : {
          "type" : "array",
          "description" : "Defines the clearing type. Values can be RTGS,  non-RTGS and instant payments.",
          "items" : {
            "type" : "object",
            "properties" : {
              "transactionType" : {
                "type" : "string",
                "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "inOutType" : {
                "type" : "string",
                "description" : "Defines whether the associated transaction type is used for inward or outward payments",
                "minLength" : 0,
                "maxLength" : 9
              },
              "debitCreditId" : {
                "type" : "string",
                "description" : "Determines whether the associated transaction type processes debits, credits or both to the customer account",
                "minLength" : 0,
                "maxLength" : 13
              }
            }
          }
        },
        "clearingSystem" : {
          "type" : "string",
          "description" : "The clearing system defined here will customize the funds transfer field specifications for BC transactions",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PaymentOrderParameter" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderParameterBody"
        }
      },
      "description" : "PaymentOrderParameter"
    },
    "PaymentOrderParameterBody" : {
      "type" : "object",
      "properties" : {
        "poParam" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "type" : "object",
            "properties" : {
              "apiSystem" : {
                "type" : "string",
                "description" : "Indicates the API that is used to call the published 3rd party API domain",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "apiSystem" ]
              },
              "apiUrlPath" : {
                "type" : "string",
                "description" : "Indicates the exact name of the actual local-api-domain",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "apiUrlPath" ]
              },
              "Lookup" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "apiLookupName" : {
                      "type" : "string",
                      "description" : "Indicates the value to be located by TPH to retrieve the named end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiLookupName" ]
                    },
                    "apiCallName" : {
                      "type" : "string",
                      "description" : "Indicates the value of the actual API name to be called in the 3rd party Published domain",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiCallName" ]
                    }
                  }
                }
              },
              "Text" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "apiParamName" : {
                      "type" : "string",
                      "description" : "Indicates the name-value pair which is used to define other parameters such as Http Headers which are required to access the given end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiParamName" ]
                    },
                    "apiParamValue" : {
                      "type" : "string",
                      "description" : "Indicates the name-value pair which is used to define other parameters such as Http Headers and its value which are required to access the given end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiParamValue" ]
                    }
                  }
                }
              }
            }
          }
        },
        "paymentConnectionMethod" : {
          "type" : "string",
          "description" : "Groups the payment currency and country details",
          "minLength" : 0,
          "maxLength" : 70
        },
        "warehouseRequired" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 70
        },
        "archiveDays" : {
          "type" : "string",
          "description" : "Indicates the number of days that an order will remain in live status before moving to history",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "archiveDays" ]
        },
        "mappingRoutine" : {
          "type" : "string",
          "description" : "Used to attach any local routine to map any additional fields from payment order table to Temenos Payment System",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "mappingRoutine" ]
        },
        "mappingRecord" : {
          "type" : "string",
          "description" : "Indicates the EB.MAPPING record that would map any additional fields from payment order table to temenos payments system",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "mappingRecord" ]
        },
        "connectionRule" : {
          "type" : "string",
          "description" : "Specifies the evaluating rule in the T24 rules engine which will return which connection method is to be used. Values supported are EXTERNAL meaning that a payment order message will be generated through integration framework and TPS meaning that the payment order message will be generated directly through Temenos Payment System",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "connectionRule" ]
        },
        "connectionApi" : {
          "type" : "string",
          "description" : "Field containing ID of a local that can be executed to determine whether the connection method to be used is EXTERNAL meaning that a payment order message will be generated through integration framework and TPS meaning that the payment order message will be generated directly through TPS",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "connectionApi" ]
        },
        "simulationExpiryTime" : {
          "type" : "string",
          "description" : "Used to set Elapse time until which simulated payment order transactions are valid",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "simulationExpiryTime" ]
        },
        "purgeAwaitSubmitPrd" : {
          "type" : "string",
          "description" : "Indicates Archive process to be done for payments un-authorised after elapsed simulation time",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "purgeAwaitSubmitPrd" ]
        },
        "defaultProductRule" : {
          "type" : "string",
          "description" : "Used to Default product rule evaluator",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultProductRule" ]
        },
        "defaultProductApi" : {
          "type" : "string",
          "description" : "Used to default payment order product",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultProductApi" ]
        },
        "fraudRoutine" : {
          "type" : "string",
          "description" : "Used to identify which  local Fraud checking routine can be attached.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "fraudRoutine" ]
        },
        "accountLocatorApi" : {
          "type" : "string",
          "description" : "Indicates the  name of the account locator api used to determine whether the account is in T24, in another bank system or external.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "accountLocatorApi" ]
        },
        "accountLocatorRule" : {
          "type" : "string",
          "description" : "Indicates the  name of the account locator rule used to determine whether the account is in T24, in another bank system or external.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "accountLocatorRule" ]
        },
        "offlineExternalAccountVerification" : {
          "type" : "string",
          "description" : "The name of the local routine which will be triggered when the account is located in the bank but not within the T24 financial company. This routine can verify if the external account lookup is required or not and if required, will trigger the Account Lookup request and will handle its response .",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "offlineExternalAccountVerification" ]
        },
        "defaultTransactionCode" : {
          "type" : "string",
          "description" : "The default transaction code to be used by the Protection Limit is obtained from this field and it is checked if this transaction code is allowed, using the transaction type field of the Protection Limit.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultTransactionCode" ]
        },
        "fraudCheckWaitResponse" : {
          "type" : "string",
          "description" : "Indicates the time that the system must wait for a fraud check response",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "fraudCheckWaitResponse" ]
        },
        "productCacheRead" : {
          "type" : "string",
          "description" : "Indicates whether the payment order products need to be cache read or not.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "productCacheRead" ]
        },
        "gsrpRequestMessageType" : {
          "type" : "string",
          "description" : "Indicates the method through which the bank would initiate a global stop and recall payments request. Possible Values: MT199, MT196 and API",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpRequestMessageType" ]
        },
        "gsrpRequestOverdueDays" : {
          "type" : "string",
          "description" : "Indicates the number of calendar days within which a global stop and recall payments request can be sent to the swift GPI Tracker from the original payment date for Outgoing gsRP request",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpRequestOverdueDays" ]
        },
        "gsrpResponseMessageType" : {
          "type" : "string",
          "description" : "Indicates the method through which the bank would respond to a global stop and recall payments request. Possible Values: MT199, MT196 and API",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpResponseMessageType" ]
        },
        "gsrpResponseOverdueDays" : {
          "type" : "string",
          "description" : "Indicates the number of calendar days within which a final response must be sent to the swift GPI Tracker for an incoming global stop and recall payments request",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpResponseOverdueDays" ]
        },
        "gpiConfirmation" : {
          "type" : "string",
          "description" : "If gpi message type is set as MT, TPH will utilise MT199 messages to communicate with the gpi Tracker. If set as API, TPH will push/consume API messages.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiConfirmation" ]
        },
        "gpiExchangeBic" : {
          "type" : "string",
          "description" : "Indicates the active SWIFT gpi Tracker Exchange BIC",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiExchangeBic" ]
        },
        "gpiAlertBic" : {
          "type" : "string",
          "description" : "Indicates the active SWIFT gpi Tracker Alert BIC",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiAlertBic" ]
        },
        "publishSpecialEvent" : {
          "type" : "string",
          "description" : "Indicates whether special events must be published.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "publishSpecialEvent" ]
        },
        "preApprovedPayment" : {
          "type" : "string",
          "description" : "Indicates if the payment request is pre-approved and funds reservation can be skipped in Temenos Payments",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preApprovedPayment" ]
        },
        "preValidatedAccount" : {
          "type" : "string",
          "description" : "Indicates if the payment has been initiated with the main account pre-validated by the payment initiating system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preValidatedAccount" ]
        },
        "preDeterminedFx" : {
          "type" : "string",
          "description" : "Indicates if the payment is initiated with a pre-determined forex and forex calculation in the system can be skipped.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preDeterminedFx" ]
        }
      }
    },
    "PaymentOrderParameterResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderParameterResponseBody"
        }
      },
      "description" : "PaymentOrderParameterResponse"
    },
    "PaymentOrderParameterResponseBody" : {
      "type" : "object",
      "properties" : {
        "poParam" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "type" : "object",
            "properties" : {
              "apiSystem" : {
                "type" : "string",
                "description" : "Indicates the API that is used to call the published 3rd party API domain",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "apiSystem" ]
              },
              "apiUrlPath" : {
                "type" : "string",
                "description" : "Indicates the exact name of the actual local-api-domain",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "apiUrlPath" ]
              },
              "Lookup" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "apiLookupName" : {
                      "type" : "string",
                      "description" : "Indicates the value to be located by TPH to retrieve the named end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiLookupName" ]
                    },
                    "apiCallName" : {
                      "type" : "string",
                      "description" : "Indicates the value of the actual API name to be called in the 3rd party Published domain",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiCallName" ]
                    }
                  }
                }
              },
              "Text" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "apiParamName" : {
                      "type" : "string",
                      "description" : "Indicates the name-value pair which is used to define other parameters such as Http Headers which are required to access the given end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiParamName" ]
                    },
                    "apiParamValue" : {
                      "type" : "string",
                      "description" : "Indicates the name-value pair which is used to define other parameters such as Http Headers and its value which are required to access the given end point",
                      "minLength" : 0,
                      "maxLength" : 70,
                      "enum" : [ "apiParamValue" ]
                    }
                  }
                }
              }
            }
          }
        },
        "paymentConnectionMethod" : {
          "type" : "string",
          "description" : "Groups the payment currency and country details",
          "minLength" : 0,
          "maxLength" : 70
        },
        "warehouseRequired" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 70
        },
        "archiveDays" : {
          "type" : "string",
          "description" : "Indicates the number of days that an order will remain in live status before moving to history",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "archiveDays" ]
        },
        "mappingRoutine" : {
          "type" : "string",
          "description" : "Used to attach any local routine to map any additional fields from payment order table to Temenos Payment System",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "mappingRoutine" ]
        },
        "mappingRecord" : {
          "type" : "string",
          "description" : "Indicates the EB.MAPPING record that would map any additional fields from payment order table to temenos payments system",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "mappingRecord" ]
        },
        "connectionRule" : {
          "type" : "string",
          "description" : "Specifies the evaluating rule in the T24 rules engine which will return which connection method is to be used. Values supported are EXTERNAL meaning that a payment order message will be generated through integration framework and TPS meaning that the payment order message will be generated directly through Temenos Payment System",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "connectionRule" ]
        },
        "connectionApi" : {
          "type" : "string",
          "description" : "Field containing ID of a local that can be executed to determine whether the connection method to be used is EXTERNAL meaning that a payment order message will be generated through integration framework and TPS meaning that the payment order message will be generated directly through TPS",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "connectionApi" ]
        },
        "simulationExpiryTime" : {
          "type" : "string",
          "description" : "Used to set Elapse time until which simulated payment order transactions are valid",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "simulationExpiryTime" ]
        },
        "purgeAwaitSubmitPrd" : {
          "type" : "string",
          "description" : "Indicates Archive process to be done for payments un-authorised after elapsed simulation time",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "purgeAwaitSubmitPrd" ]
        },
        "defaultProductRule" : {
          "type" : "string",
          "description" : "Used to Default product rule evaluator",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultProductRule" ]
        },
        "defaultProductApi" : {
          "type" : "string",
          "description" : "Used to default payment order product",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultProductApi" ]
        },
        "fraudRoutine" : {
          "type" : "string",
          "description" : "Used to identify which  local Fraud checking routine can be attached.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "fraudRoutine" ]
        },
        "accountLocatorApi" : {
          "type" : "string",
          "description" : "Indicates the  name of the account locator api used to determine whether the account is in T24, in another bank system or external.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "accountLocatorApi" ]
        },
        "accountLocatorRule" : {
          "type" : "string",
          "description" : "Indicates the  name of the account locator rule used to determine whether the account is in T24, in another bank system or external.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "accountLocatorRule" ]
        },
        "offlineExternalAccountVerification" : {
          "type" : "string",
          "description" : "The name of the local routine which will be triggered when the account is located in the bank but not within the T24 financial company. This routine can verify if the external account lookup is required or not and if required, will trigger the Account Lookup request and will handle its response .",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "offlineExternalAccountVerification" ]
        },
        "defaultTransactionCode" : {
          "type" : "string",
          "description" : "The default transaction code to be used by the Protection Limit is obtained from this field and it is checked if this transaction code is allowed, using the transaction type field of the Protection Limit.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "defaultTransactionCode" ]
        },
        "fraudCheckWaitResponse" : {
          "type" : "string",
          "description" : "Indicates the time that the system must wait for a fraud check response",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "fraudCheckWaitResponse" ]
        },
        "productCacheRead" : {
          "type" : "string",
          "description" : "Indicates whether the payment order products need to be cache read or not.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "productCacheRead" ]
        },
        "gsrpRequestMessageType" : {
          "type" : "string",
          "description" : "Indicates the method through which the bank would initiate a global stop and recall payments request. Possible Values: MT199, MT196 and API",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpRequestMessageType" ]
        },
        "gsrpRequestOverdueDays" : {
          "type" : "string",
          "description" : "Indicates the number of calendar days within which a global stop and recall payments request can be sent to the swift GPI Tracker from the original payment date for Outgoing gsRP request",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpRequestOverdueDays" ]
        },
        "gsrpResponseMessageType" : {
          "type" : "string",
          "description" : "Indicates the method through which the bank would respond to a global stop and recall payments request. Possible Values: MT199, MT196 and API",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpResponseMessageType" ]
        },
        "gsrpResponseOverdueDays" : {
          "type" : "string",
          "description" : "Indicates the number of calendar days within which a final response must be sent to the swift GPI Tracker for an incoming global stop and recall payments request",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gsrpResponseOverdueDays" ]
        },
        "gpiConfirmation" : {
          "type" : "string",
          "description" : "If gpi message type is set as MT, TPH will utilise MT199 messages to communicate with the gpi Tracker. If set as API, TPH will push/consume API messages.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiConfirmation" ]
        },
        "gpiExchangeBic" : {
          "type" : "string",
          "description" : "Indicates the active SWIFT gpi Tracker Exchange BIC",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiExchangeBic" ]
        },
        "gpiAlertBic" : {
          "type" : "string",
          "description" : "Indicates the active SWIFT gpi Tracker Alert BIC",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "gpiAlertBic" ]
        },
        "publishSpecialEvent" : {
          "type" : "string",
          "description" : "Indicates whether special events must be published.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "publishSpecialEvent" ]
        },
        "preApprovedPayment" : {
          "type" : "string",
          "description" : "Indicates if the payment request is pre-approved and funds reservation can be skipped in Temenos Payments",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preApprovedPayment" ]
        },
        "preValidatedAccount" : {
          "type" : "string",
          "description" : "Indicates if the payment has been initiated with the main account pre-validated by the payment initiating system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preValidatedAccount" ]
        },
        "preDeterminedFx" : {
          "type" : "string",
          "description" : "Indicates if the payment is initiated with a pre-determined forex and forex calculation in the system can be skipped.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "preDeterminedFx" ]
        }
      }
    },
    "PaymentOrderProduct" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderProductBody"
        }
      },
      "description" : "PaymentOrderProduct"
    },
    "PaymentOrderProductBody" : {
      "type" : "object",
      "properties" : {
        "payments" : {
          "type" : "array",
          "description" : "Indicates the transfer of money between two or more parties or accounts",
          "items" : {
            "type" : "object",
            "properties" : {
              "currencyId" : {
                "type" : "string",
                "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "orders" : {
          "type" : "array",
          "description" : "Groups the order currency and country details",
          "items" : {
            "type" : "object",
            "properties" : {
              "currencyId" : {
                "type" : "string",
                "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "chargeOptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeOption" : {
                "type" : "string",
                "description" : "This field will hold the charge applicable for the order",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "clearingChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "clearingChannelId" : {
                "type" : "string",
                "description" : "Indicates the clearing channel details to be used",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Additional Information provided to add context",
          "items" : {
            "type" : "object",
            "properties" : {
              "additionalInformation" : {
                "type" : "string",
                "description" : "Additional Information provided to add context",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "weblinks" : {
          "type" : "array",
          "description" : "The web link for additional information",
          "items" : {
            "type" : "object",
            "properties" : {
              "weblink" : {
                "type" : "string",
                "description" : "The web link for additional information",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "payThroughBeneficiary" : {
          "type" : "string",
          "description" : "Defines whether payment initiation can be done by providing beneficiary details. This is applicable when beneficiary is not within the same bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "futureDate" : {
          "type" : "string",
          "description" : "Indicates if a future dated instruction can be inputted for the specific payment order product",
          "minLength" : 0,
          "maxLength" : 15
        },
        "defaultChargeOption" : {
          "type" : "string",
          "description" : "Indicates the charge option which will be defaulted at the time of payment initiation for specific payment order product i.e. Recipient To Pay All Charges, Pay My Bank's Charges or Pay My Bank Charges Only.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "allowFx" : {
          "type" : "string",
          "description" : "Indicates if foreign currency exchange is allowed for the specific payment order product i.e. debit and credit accounts can be in different currency or not",
          "minLength" : 0,
          "maxLength" : 7
        },
        "FXRate" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 11
        },
        "IBAN" : {
          "type" : "string",
          "description" : "International Bank Account number, an identifier of the account. E.g. GB29 NWBK 6016 1331 9268 19",
          "minLength" : 0,
          "maxLength" : 9
        },
        "BIC" : {
          "type" : "string",
          "description" : "The BIC code of the Beneficiary bank",
          "minLength" : 0,
          "maxLength" : 8
        },
        "sortCode" : {
          "type" : "string",
          "description" : "Contains bank sort code or iban branch identifier for the account",
          "minLength" : 0,
          "maxLength" : 13
        },
        "warehouseRequired" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 17
        },
        "checkTransparency" : {
          "type" : "string",
          "description" : "Used to set if simulation is required or not",
          "minLength" : 0,
          "maxLength" : 17
        },
        "fraudCheckRequired" : {
          "type" : "string",
          "description" : "Field will decide whether Fraud check is required or not",
          "minLength" : 0,
          "maxLength" : 18
        }
      }
    },
    "PaymentOrderProductResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderProductResponseBody"
        }
      },
      "description" : "PaymentOrderProductResponse"
    },
    "PaymentOrderProductResponseBody" : {
      "type" : "object",
      "properties" : {
        "payments" : {
          "type" : "array",
          "description" : "Indicates the transfer of money between two or more parties or accounts",
          "items" : {
            "type" : "object",
            "properties" : {
              "currencyId" : {
                "type" : "string",
                "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "orders" : {
          "type" : "array",
          "description" : "Groups the order currency and country details",
          "items" : {
            "type" : "object",
            "properties" : {
              "currencyId" : {
                "type" : "string",
                "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "chargeOptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeOption" : {
                "type" : "string",
                "description" : "This field will hold the charge applicable for the order",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "clearingChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "clearingChannelId" : {
                "type" : "string",
                "description" : "Indicates the clearing channel details to be used",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Additional Information provided to add context",
          "items" : {
            "type" : "object",
            "properties" : {
              "additionalInformation" : {
                "type" : "string",
                "description" : "Additional Information provided to add context",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "weblinks" : {
          "type" : "array",
          "description" : "The web link for additional information",
          "items" : {
            "type" : "object",
            "properties" : {
              "weblink" : {
                "type" : "string",
                "description" : "The web link for additional information",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "payThroughBeneficiary" : {
          "type" : "string",
          "description" : "Defines whether payment initiation can be done by providing beneficiary details. This is applicable when beneficiary is not within the same bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "futureDate" : {
          "type" : "string",
          "description" : "Indicates if a future dated instruction can be inputted for the specific payment order product",
          "minLength" : 0,
          "maxLength" : 15
        },
        "defaultChargeOption" : {
          "type" : "string",
          "description" : "Indicates the charge option which will be defaulted at the time of payment initiation for specific payment order product i.e. Recipient To Pay All Charges, Pay My Bank's Charges or Pay My Bank Charges Only.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "allowFx" : {
          "type" : "string",
          "description" : "Indicates if foreign currency exchange is allowed for the specific payment order product i.e. debit and credit accounts can be in different currency or not",
          "minLength" : 0,
          "maxLength" : 7
        },
        "FXRate" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 11
        },
        "IBAN" : {
          "type" : "string",
          "description" : "International Bank Account number, an identifier of the account. E.g. GB29 NWBK 6016 1331 9268 19",
          "minLength" : 0,
          "maxLength" : 9
        },
        "BIC" : {
          "type" : "string",
          "description" : "The BIC code of the Beneficiary bank",
          "minLength" : 0,
          "maxLength" : 8
        },
        "sortCode" : {
          "type" : "string",
          "description" : "Contains bank sort code or iban branch identifier for the account",
          "minLength" : 0,
          "maxLength" : 13
        },
        "warehouseRequired" : {
          "type" : "string",
          "description" : "To define if warehouse is required at Payment order level or not",
          "minLength" : 0,
          "maxLength" : 17
        },
        "checkTransparency" : {
          "type" : "string",
          "description" : "Used to set if simulation is required or not",
          "minLength" : 0,
          "maxLength" : 17
        },
        "fraudCheckRequired" : {
          "type" : "string",
          "description" : "Field will decide whether Fraud check is required or not",
          "minLength" : 0,
          "maxLength" : 18
        }
      }
    }
  }
}