{
  "swagger" : "2.0",
  "info" : {
    "description" : "Allows the creation, viewing and management of payments and transfers",
    "version" : "v2.0.0",
    "title" : "Payments Management"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v2.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/payments/fees" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment fee and charge details",
        "description" : "Retrieves the payment fee details",
        "operationId" : "getPaymentFeesAndCharges",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentFeesAndChargesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentFeesAndChargesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/transactionLog" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment tracking details from initial payment mapping state to payment end state",
        "description" : "Retrieves the payment tracking status",
        "operationId" : "getAllPaymentsTransactionLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllPaymentsTransactionLogsResponse",
            "schema" : {
              "$ref" : "#/definitions/AllPaymentsTransactionLogsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/{paymentId}/transactionLog" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment tracking details from initial payment mapping state to payment end state for the given payment id",
        "description" : "Retrieves the payment tracking status for the given payment id",
        "operationId" : "getPaymentTransactionLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentTransactionLogResponse",
            "schema" : {
              "$ref" : "#/definitions/AllPaymentsTransactionLogsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/cutoffs" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the Channel cutoff and Currency cutoff based payment details",
        "description" : "Retrieves the cutoff based payment details ",
        "operationId" : "getPaymentCutoffs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "company",
          "in" : "query",
          "description" : "The company code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentCutoffsResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentCutoffsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/transactions/status/itemCount" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment transactions count for various payment types",
        "description" : "Retrieves the payment transactions count",
        "operationId" : "getPaymentsCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tabView",
          "in" : "query",
          "description" : "Indicates the payment tab view",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentsCountResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentsCountResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/{paymentId}/errors" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment transaction content for a payment",
        "description" : "Retrieves the payment transaction content",
        "operationId" : "getPaymentsInError",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentsInErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentsInErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/{paymentId}/sepaPayments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the sepa payment transaction content for a given payment",
        "description" : "Retrieves the sepa payment transaction content",
        "operationId" : "getSepaPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SepaPaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/SepaPaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/{paymentId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment transaction without the extended details",
        "description" : "Retrieves the payment transaction ",
        "operationId" : "getPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/instantPayments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the instant payment transactions along with timed out details",
        "description" : "Retrieves the instant payment transactions",
        "operationId" : "getInstantPayments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageType",
          "in" : "query",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerReference",
          "in" : "query",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partySendersReferenceIncoming",
          "in" : "query",
          "description" : "Debtor payment reference details of incoming",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentType",
          "in" : "query",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "InstantPaymentsResponse",
            "schema" : {
              "$ref" : "#/definitions/InstantPaymentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/transactions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment transactions by using the query filters retrieved from meta api queryFilters",
        "description" : "Retrieves all type of payment transactions",
        "operationId" : "getPendingAndProcessedPayments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "companyName",
          "in" : "query",
          "description" : "The company in which payment is processed",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentType",
          "in" : "query",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clearingId",
          "in" : "query",
          "description" : "Clearing channel specific details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "processingDate",
          "in" : "query",
          "description" : "The date when payment instruction is processed in system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionCurrency",
          "in" : "query",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionAmount",
          "in" : "query",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusCode",
          "in" : "query",
          "description" : "Status code, as defined by the institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageType",
          "in" : "query",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitCurrency",
          "in" : "query",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountCompany",
          "in" : "query",
          "description" : "Contains the company of the credit party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCurrency",
          "in" : "query",
          "description" : "Currency of the account which funds will be transferred to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountId",
          "in" : "query",
          "description" : "Credit account identifier of the payment or transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channel",
          "in" : "query",
          "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSource",
          "in" : "query",
          "description" : "Indicates the source from where the payment is originated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partySendersReferenceIncoming",
          "in" : "query",
          "description" : "Debtor payment reference details of incoming",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partySendersReferenceOutgoing",
          "in" : "query",
          "description" : "Debtor payment reference details of outgoing",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerReference",
          "in" : "query",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entryReference",
          "in" : "query",
          "description" : "It is the transaction reference. This is the identifier of the transaction on Temenos Core Banking system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerOrBankTransfer",
          "in" : "query",
          "description" : "Indicates if the payment was initiated by Customer or the financial institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditValueDate",
          "in" : "query",
          "description" : "Reference quoted by the credit account for a payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitValueDate",
          "in" : "query",
          "description" : "Date on which the amount will be debited for settlement",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endToEndReference",
          "in" : "query",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionType",
          "in" : "query",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tabView",
          "in" : "query",
          "description" : "Indicates the payment tab view",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PendingAndProcessedPaymentsResponse",
            "schema" : {
              "$ref" : "#/definitions/PendingAndProcessedPaymentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/swiftQueries" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of sent swift queries",
        "description" : "Retrieves the list of sent swift queries",
        "operationId" : "getSwiftQueries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entryReference",
          "in" : "query",
          "description" : "It is the transaction reference. This is the identifier of the transaction on Temenos Core Banking system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beneficiaryBank",
          "in" : "query",
          "description" : "Bank for the beneficiary",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "SwiftQueriesResponse",
            "schema" : {
              "$ref" : "#/definitions/SwiftQueriesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/status" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payments based on status",
        "description" : "Retrieves the payments based on status. status can be \"completed\", \"excludingCompleted\", \"repair\" or \"all\"",
        "operationId" : "getPaymentsStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Indicates the business date from when the balance reservation event is active.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the early maturity request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitCustomerId",
          "in" : "query",
          "description" : "Debtor customer details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCustomerId",
          "in" : "query",
          "description" : "Creditor customer id details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountId",
          "in" : "query",
          "description" : "Credit account identifier of the payment or transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "outputChannel",
          "in" : "query",
          "description" : "Contains the channel that will be used to send the outward payment message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSource",
          "in" : "query",
          "description" : "Indicates the source from where the payment is originated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fileSendersReference",
          "in" : "query",
          "description" : "Indicates the sender reference that comes from the inward payment file",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fundsTransferId",
          "in" : "query",
          "description" : "Identifier of the Funds Transfer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusCode",
          "in" : "query",
          "description" : "Status code, as defined by the institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "Indicates the business date until when the balance reservation event is active.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beneficiaryId",
          "in" : "query",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountId",
          "in" : "query",
          "description" : "Unique account identifier of the beneficiary account number.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionAmount",
          "in" : "query",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageType",
          "in" : "query",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "processingDate",
          "in" : "query",
          "description" : "The date when payment instruction is processed in system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerReference",
          "in" : "query",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitCurrency",
          "in" : "query",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountCompany",
          "in" : "query",
          "description" : "Contains the company of the debit party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCurrency",
          "in" : "query",
          "description" : "Currency of the account which funds will be transferred to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountCompany",
          "in" : "query",
          "description" : "Contains the company of the credit party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partySendersReferenceIncoming",
          "in" : "query",
          "description" : "Debtor payment reference details of incoming",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sendersCorrespondentAddress",
          "in" : "query",
          "description" : "Contains additional address lines of the sender correspondent institution.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "receiversCorrespondentAddress",
          "in" : "query",
          "description" : "Contains additional address lines of the receiver correspondent institution.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulkReference",
          "in" : "query",
          "description" : "Contains bulk master reference for the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerOrBankTransfer",
          "in" : "query",
          "description" : "Indicates if the payment was initiated by Customer or the financial institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditValueDate",
          "in" : "query",
          "description" : "Reference quoted by the credit account for a payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitValueDate",
          "in" : "query",
          "description" : "Date on which the amount will be debited for settlement",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementTransactionIndicator",
          "in" : "query",
          "description" : "Indicates whether the payment is settlement transaction or not",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementClaimId",
          "in" : "query",
          "description" : "Indicates the settlement claim reference of the payment transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entryDateTime",
          "in" : "query",
          "description" : "Contains the payment creation time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "approvedDateTime",
          "in" : "query",
          "description" : "Contains the time when payment got approved",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clearingNatureCode",
          "in" : "query",
          "description" : "Contains the nature of the payment transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentsStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentsStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/bankInitiations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Creates a recall request initiated by bank",
        "description" : "Creates bank initiated recall or cancellation request for a payment with transaction reference and the reason for cancellation. This request would be processed and responded by the Beneficiary Bank",
        "operationId" : "createBankInitiatedPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BankInitiatedPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BankInitiatedPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/BankInitiatedPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/customerInitiations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Creates a recall request initiated by customer",
        "description" : "Creates customer initiated recall or cancellation request for a payment with transaction reference and the reason for cancellation. This request would be processed and responded by the Beneficiary Bank",
        "operationId" : "createCustomerInitiatedPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerInitiatedPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerInitiatedPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerInitiatedPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/{recallId}/responses" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Updates response to recall request initiated by bank or customer",
        "description" : "Updates response for the recall request provided by beneficiary bank. The response can be either Acceptance or Rejection along with the reason. The response to the recall request should be recorded in the cancellation request record for further action.",
        "operationId" : "updateResponseToPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recallId",
          "in" : "path",
          "description" : "Defines the ID to identify the payment which has to be recalled",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResponseToPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ResponseToPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/ResponseToPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/swiftPayments/{swiftPaymentId}/acknowledgements" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update payment status based on the acknowledgement from SWIFT",
        "description" : "Update payment status based on the acknowledgement or negative acknowledgement received from SWIFT",
        "operationId" : "updatePaymentSwiftOutTransaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "swiftPaymentId",
          "in" : "path",
          "description" : "Contains the swift payment reference as generated by the system",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentSwiftOutTransaction"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSwiftOutTransactionResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSwiftOutTransactionResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/logs/sentMessages/{sentMessageId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the payment sent details on payment sent message file",
        "description" : "Update the details like acknowledgement status, negative acknowledgement reason and time stamp on the payment sent message file",
        "operationId" : "updatePaymentSentMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sentMessageId",
          "in" : "path",
          "description" : "Contains the sent message reference as generated by the system",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentSentMessage"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSentMessageResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSentMessageResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/sepaPayments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the sepa payment transactions such as status, transaction amount, transaction currency, etc ",
        "description" : "Retrieves the sepa payment transactions",
        "operationId" : "getSepaPayments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clearingId",
          "in" : "query",
          "description" : "Clearing channel specific details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "originalTransactionReference",
          "in" : "query",
          "description" : "Identifies the Original Transaction Reference that created the Funds Authorisation request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionAmount",
          "in" : "query",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionCurrency",
          "in" : "query",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusCode",
          "in" : "query",
          "description" : "Status code, as defined by the institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "SepaPaymentsResponse",
            "schema" : {
              "$ref" : "#/definitions/SepaPaymentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "PaymentFeesAndChargesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentFeesAndChargesResponseBody"
        }
      },
      "description" : "PaymentFeesAndChargesResponse"
    },
    "PaymentFeesAndChargesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "feeType" : {
            "type" : "string",
            "description" : "Indicates the type of fee which is applied for payment instruction",
            "maxLength" : 35
          },
          "feeName" : {
            "type" : "string",
            "description" : "Indicates the description for type of fee which is applied for payment instruction",
            "maxLength" : 35
          },
          "chargeType" : {
            "type" : "string",
            "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
            "maxLength" : 1
          },
          "feeCurrency" : {
            "type" : "string",
            "description" : "Indicates the fee currency in which fee amount is applied for the payment instruction",
            "maxLength" : 3
          },
          "feeAmount" : {
            "type" : "string",
            "description" : "Indicates the fee amount which is applied for the payment instruction",
            "maxLength" : 15
          },
          "chargeCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency code of the charge account from where the fee is deducted",
            "maxLength" : 3
          },
          "chargeAmount" : {
            "type" : "string",
            "description" : "Retrieves the Charge Amount after redeem",
            "maxLength" : 15
          },
          "chargeBearer" : {
            "type" : "string",
            "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 1
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "AllPaymentsTransactionLogsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AllPaymentsTransactionLogsResponseBody"
        }
      },
      "description" : "AllPaymentsTransactionLogsResponse"
    },
    "AllPaymentsTransactionLogsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "string",
            "description" : "Event identifier",
            "maxLength" : 3
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name that is displayed for the event"
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Indicates the error code which is encountered during payment processing as returned by payment system ",
            "maxLength" : 10
          },
          "additionalInformation" : {
            "type" : "string",
            "description" : "Additional Information provided to add context",
            "maxLength" : 128
          },
          "dateTime" : {
            "type" : "string",
            "description" : "Contains the date and time separated by '-'",
            "maxLength" : 11
          }
        }
      }
    },
    "PaymentCutoffsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentCutoffsResponseBody"
        }
      },
      "description" : "PaymentCutoffsResponse"
    },
    "PaymentCutoffsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "thresholdLevelLow" : {
            "type" : "string",
            "description" : "Indicates the payment amount not exceeded the threshold limit"
          },
          "thresholdLevelHigh" : {
            "type" : "string",
            "description" : "Indicates the payment amount exceeded the threshold limit"
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "thresholdLevelMedium" : {
            "type" : "string",
            "description" : "Indicates the payment amount about to reach the threshold limit"
          },
          "cutOffTime" : {
            "type" : "string",
            "description" : "The Cut off time when all executions for the day are consolidated to create a trade",
            "maxLength" : 65
          },
          "channel" : {
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
            "maxLength" : 2
          },
          "message" : {
            "type" : "string",
            "description" : "The actual t24 error message ",
            "maxLength" : 65
          },
          "currency" : {
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "maxLength" : 2
          },
          "totalAmount" : {
            "type" : "string",
            "description" : "Total amount"
          },
          "localCurrencyAmount" : {
            "type" : "string",
            "description" : "Transaction Amount in USD for deposit or withdrawal."
          },
          "numberOfPayments" : {
            "type" : "string",
            "description" : "Specifies the number of coupon or interest payments a year"
          },
          "recordId" : {
            "type" : "string",
            "description" : "record Id name for NOFILE enquiry for online upgrade"
          }
        }
      }
    },
    "PaymentsCountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentsCountResponseBody"
        }
      },
      "description" : "PaymentsCountResponse"
    },
    "PaymentsCountResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Short title for the Account to be created"
          },
          "countOfRecords" : {
            "type" : "string",
            "description" : "Total count of records information for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "type" : {
            "type" : "string",
            "description" : "The product condition has an activity type associated that drives an action."
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "PaymentsInErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentsInErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "PaymentsInErrorResponse"
    },
    "PaymentsInErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "fatalError" : {
          "type" : "string",
          "description" : "Indicates the fatal error that stopped the payment transaction",
          "minLength" : 0,
          "maxLength" : 10
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the early maturity request",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Status" ]
        },
        "companyName" : {
          "type" : "string",
          "description" : "The company in which payment is processed",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Processing Company" ]
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "FT Number" ]
        },
        "processingDate" : {
          "type" : "string",
          "description" : "The date when payment instruction is processed in system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Processing Date" ]
        },
        "processingDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the processing date is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for processing date will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "sendersReference" : {
          "type" : "string",
          "description" : "Indicates the incoming sender's reference i.e. tag 20 of incoming SWIFT or in case when transaction is received from other system/ application, this can also indicate the reference number of that system/ application",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender's Reference Number" ]
        },
        "partySendersReferenceOutgoing" : {
          "type" : "string",
          "description" : "Debtor payment reference details of outgoing",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender's Reference Outgoing" ]
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Priority" ]
        },
        "relatedReference" : {
          "type" : "string",
          "description" : "An external reference id for the transaction.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Related Reference" ]
        },
        "product" : {
          "type" : "string",
          "description" : "Indicates an id or name of a product",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Product" ]
        },
        "paymentSource" : {
          "type" : "string",
          "description" : "Indicates the source from where the payment is originated",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Source" ]
        },
        "outputChannel" : {
          "type" : "string",
          "description" : "Contains the channel that will be used to send the outward payment message",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Output Channel" ]
        },
        "outputChannelImposed" : {
          "type" : "string",
          "description" : "Indicates whether the channel is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for channel will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Output Channel Imposed Flag" ]
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Direction" ]
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transaction Currency" ]
        },
        "instructedCurrencyCode" : {
          "type" : "string",
          "description" : "Instructed currency code details",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Instructed Currency" ]
        },
        "paymentType" : {
          "type" : "string",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transfer Type" ]
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transaction Amount" ]
        },
        "instructedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount which is allocated or instructed for the account reference included in the selection for a specific transaction.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Incoming Message Type" ]
        },
        "chargeOption" : {
          "type" : "string",
          "description" : "This field will hold the charge applicable for the order",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Charge Option" ]
        },
        "balanceReservation" : {
          "type" : "string",
          "description" : "Contains the nature of the balance reservation received from channel. For example, C (Channel has already done the reservation), S (Skipped).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation" ]
        },
        "balanceReservationReference" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference received from channel or an external system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation Number" ]
        },
        "balanceReservationChargeAccount" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation Debit Chg Acct" ]
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Pre-Authorization Number" ]
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 40
        },
        "accountWithBank" : {
          "type" : "string",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "minLength" : 0,
          "maxLength" : 40
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender Clearing System Code" ]
        },
        "receiverInstitution" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of receiver institution.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Receiver Institution BIC" ]
        },
        "receiverInstitutionNcc" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) of receiver institution.",
          "minLength" : 0,
          "maxLength" : 22,
          "enum" : [ "Receiver Institution NCC" ]
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Receiver Clearing System Code" ]
        },
        "intraCompanyPayment" : {
          "type" : "string",
          "description" : "Indicates whether the transaction is for first party payment.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "UETR" ]
        },
        "debitAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the debit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the credit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderPartyTagOptionImposed" : {
          "type" : "string",
          "description" : "Indicates whether the system imposes tag option 50F or 50K for outgoing credit transfer payments.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit account number is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for debit account number will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "partyCompanyBIC" : {
          "type" : "string",
          "description" : "Debtor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryCompanyBIC" : {
          "type" : "string",
          "description" : "Creditor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCurrency" : {
          "type" : "string",
          "description" : "Currency of the account which funds will be transferred to.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAmount" : {
          "type" : "string",
          "description" : "Amount to be debited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAmount" : {
          "type" : "string",
          "description" : "Amount to be credited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerRate" : {
          "type" : "string",
          "description" : "This field identifies the account currency where funds are to be received from under this drawing.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit exchange rate is imposed.",
          "minLength" : 0,
          "maxLength" : 28
        },
        "creditCustomerRate" : {
          "type" : "string",
          "description" : "Contains the exchange rate that is used to convert the credit amount into the transaction amount (or transaction amount into debit amount) in case the credit account currency is different from the transaction currency.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit exchange rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "debitCustomerSpread" : {
          "type" : "string",
          "description" : "Contains customers exchange spread which is applied to the treasury rate to generate the applicable exchange rate.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "creditCustomerSpread" : {
          "type" : "string",
          "description" : "Contains the customer exchange spread to be applied.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for credit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 31
        },
        "debitTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which the treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for debit treasury rate is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 28
        },
        "creditTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit treasury rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "debitExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDate" : {
          "type" : "string",
          "description" : "Date on which the amount will be debited for settlement",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "orderingAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingBIC" : {
          "type" : "string",
          "description" : "Contains the Business Identfier Code (BIC) of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingName" : {
          "type" : "string",
          "description" : "Ordering customer name details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitInstruction" : {
          "type" : "string",
          "description" : "Contains any debit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditInstruction" : {
          "type" : "string",
          "description" : "Contains any credit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "returnOrRejectDescription" : {
          "type" : "string",
          "description" : "Contains short additional information on the reason why the payment was returned, refunded or rejected.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelDescription" : {
          "type" : "string",
          "description" : "Contains the reason for cancellation of a payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "returnOrRejectPayment" : {
          "type" : "string",
          "description" : "Identifies whether the payment should be returned or rejected. Possible values are return, reject and blank.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "returnOrRejectOriginatedBy" : {
          "type" : "string",
          "description" : "Identifies whether the return or rejection was originated by the bank or by the debtor.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "information" : {
          "type" : "string",
          "description" : "Contains informational errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "warning" : {
          "type" : "string",
          "description" : "Contains warning errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "acceptWarning" : {
          "type" : "string",
          "description" : "Indicates whether any warning type of errors encountered by the system have to be mandatorily accepted for further payment processing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "functionalError" : {
          "type" : "string",
          "description" : "Contains functional errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "technicalError" : {
          "type" : "string",
          "description" : "Contains technical errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveDebitCharges" : {
          "type" : "string",
          "description" : "Indicates whether the debit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "repairFee" : {
          "type" : "string",
          "description" : "Indicates whether there are any repair fees associated with this payment.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be debited. Multiple charges can be debited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be debited.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "debitChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be debited.",
          "minLength" : 0,
          "maxLength" : 28
        },
        "debitChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the debit charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeAccount" : {
          "type" : "string",
          "description" : "The account from which the Charges will be debited",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit charge account number is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "debitChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "outgoingReceiverCharge" : {
          "type" : "string",
          "description" : "Contains the outgoing receiver charge value.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitReceiverChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether the outgoing receiver charge is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "waiveCreditCharges" : {
          "type" : "string",
          "description" : "Indicates whether the credit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided  to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be collected. Multiple charges can be credited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be collected.",
          "minLength" : 0,
          "maxLength" : 31
        },
        "creditChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be collected.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "creditChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeAccount" : {
          "type" : "string",
          "description" : "Contains the account number where the charges will be credited.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit charge account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "creditChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 23
        },
        "orderingInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Account" ]
        },
        "orderingInstitutionClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of ordering institution.",
          "minLength" : 0,
          "maxLength" : 31,
          "enum" : [ "Ordering Institution Clearing System Code" ]
        },
        "orderingInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains any additional address lines of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Address" ]
        },
        "sendersCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "sendersCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Account" ]
        },
        "sendersCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of sender corresponding institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Sender Correspondent Clearing System Code" ]
        },
        "sendersCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Address" ]
        },
        "receiversCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains Business Identfier Code (BIC) of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "receiversCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Account" ]
        },
        "receiversCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of receiver corresponding institution.",
          "minLength" : 0,
          "maxLength" : 34,
          "enum" : [ "Receiver Correspondent Clearing System Code" ]
        },
        "receiversCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Address" ]
        },
        "thirdReimburseInstitutionCode" : {
          "type" : "string",
          "description" : "Contains Business Identifier Code (BIC) of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "thirdReimburseInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Account" ]
        },
        "thirdReimburseClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Third Reimbursement Inst Clearing System Code" ]
        },
        "thirdReimburseInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Address" ]
        },
        "intermediaryInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "intermediaryInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the intermediate account which will be used to hold the funds if the bulk processing is set to receive only single debit or credit.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Account" ]
        },
        "intermediaryClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of intermediary institution.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Intermediary Inst Clearing System Code" ]
        },
        "intermediaryInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Address" ]
        },
        "accountWithInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the account with institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "accountWithInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Account" ]
        },
        "accountWithClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the account with institution.",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Account With Inst Clearing System Code" ]
        },
        "accountWithInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains the additional address lines of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Address" ]
        },
        "instructionCode" : {
          "type" : "string",
          "description" : "Contains the instruction code for the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Instruction Code" ]
        },
        "paymentDetail" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Payment Details" ]
        },
        "categoryPurposeCode" : {
          "type" : "string",
          "description" : "Contains the category purpose in the form of the clearing system identification code.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Category Purpose Code" ]
        },
        "categoryPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary category purpose.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Category Purpose Proprietary" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Transaction Purpose Code" ]
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "override" : {
          "type" : "string",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 25
        },
        "currNo" : {
          "type" : "string",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "inputterId" : {
          "type" : "string",
          "description" : "The user identifier Id who input the transaction",
          "minLength" : 0,
          "maxLength" : 25
        },
        "dateTime" : {
          "type" : "string",
          "description" : "Contains the date and time separated by '-'",
          "minLength" : 0,
          "maxLength" : 25
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "fieldPrompt" : {
          "type" : "string",
          "description" : "Contains name of the field which has been updated.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "oldValue" : {
          "type" : "string",
          "description" : "Contains the old value of the field before update.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "newValue" : {
          "type" : "string",
          "description" : "Contains the new value of the field after update.",
          "minLength" : 0,
          "maxLength" : 8
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "SepaPaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaPaymentResponseBody"
        }
      },
      "description" : "SepaPaymentResponse"
    },
    "SepaPaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "fatalError" : {
          "type" : "string",
          "description" : "Indicates the fatal error that stopped the payment transaction",
          "minLength" : 0,
          "maxLength" : 10
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the early maturity request",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Status" ]
        },
        "companyName" : {
          "type" : "string",
          "description" : "The company in which payment is processed",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Processing Company" ]
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "FT Number" ]
        },
        "processingDate" : {
          "type" : "string",
          "description" : "The date when payment instruction is processed in system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Processing Date" ]
        },
        "processingDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the processing date is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for processing date will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "sendersReference" : {
          "type" : "string",
          "description" : "Indicates the incoming sender's reference i.e. tag 20 of incoming SWIFT or in case when transaction is received from other system/ application, this can also indicate the reference number of that system/ application",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender's Reference Number" ]
        },
        "partySendersReferenceOutgoing" : {
          "type" : "string",
          "description" : "Debtor payment reference details of outgoing",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender's Reference Outgoing" ]
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Priority" ]
        },
        "relatedReference" : {
          "type" : "string",
          "description" : "An external reference id for the transaction.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Related Reference" ]
        },
        "product" : {
          "type" : "string",
          "description" : "Indicates an id or name of a product",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Product" ]
        },
        "paymentSource" : {
          "type" : "string",
          "description" : "Indicates the source from where the payment is originated",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Source" ]
        },
        "outputChannel" : {
          "type" : "string",
          "description" : "Contains the channel that will be used to send the outward payment message",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Output Channel" ]
        },
        "outputChannelImposed" : {
          "type" : "string",
          "description" : "Indicates whether the channel is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for channel will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Output Channel Imposed Flag" ]
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Direction" ]
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transaction Currency" ]
        },
        "paymentType" : {
          "type" : "string",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transfer Type" ]
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Transaction Amount" ]
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Incoming Message Type" ]
        },
        "chargeOption" : {
          "type" : "string",
          "description" : "This field will hold the charge applicable for the order",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Charge Option" ]
        },
        "balanceReservation" : {
          "type" : "string",
          "description" : "Contains the nature of the balance reservation received from channel. For example, C (Channel has already done the reservation), S (Skipped).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation" ]
        },
        "balanceReservationReference" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference received from channel or an external system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation Number" ]
        },
        "balanceReservationChargeAccount" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Balance Reservation Debit Chg Acct" ]
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Pre-Authorization Number" ]
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Beneficiary ID" ]
        },
        "receiverInstitution" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of receiver institution.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Receiver Institution BIC" ]
        },
        "receiverInstitutionNcc" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) of receiver institution.",
          "minLength" : 0,
          "maxLength" : 22,
          "enum" : [ "Receiver Institution NCC" ]
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Receiver Clearing System Code" ]
        },
        "intraCompanyPayment" : {
          "type" : "string",
          "description" : "Indicates whether the transaction is for first party payment.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "nickName" : {
          "type" : "string",
          "description" : "Nickname of the beneficiary",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Nick Name" ]
        },
        "auditDateTime" : {
          "type" : "string",
          "description" : "Contains the date and time of last audit.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the debit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the credit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit account number is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for debit account number will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "partyCompanyBIC" : {
          "type" : "string",
          "description" : "Debtor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryCompanyBIC" : {
          "type" : "string",
          "description" : "Creditor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCurrency" : {
          "type" : "string",
          "description" : "Currency of the account which funds will be transferred to.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAmount" : {
          "type" : "string",
          "description" : "Amount to be debited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAmount" : {
          "type" : "string",
          "description" : "Amount to be credited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerRate" : {
          "type" : "string",
          "description" : "This field identifies the account currency where funds are to be received from under this drawing.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit exchange rate is imposed.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "creditCustomerRate" : {
          "type" : "string",
          "description" : "Contains the exchange rate that is used to convert the credit amount into the transaction amount (or transaction amount into debit amount) in case the credit account currency is different from the transaction currency.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit exchange rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitCustomerSpread" : {
          "type" : "string",
          "description" : "Contains customers exchange spread which is applied to the treasury rate to generate the applicable exchange rate.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "creditCustomerSpread" : {
          "type" : "string",
          "description" : "Contains the customer exchange spread to be applied.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for credit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which the treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for debit treasury rate is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "creditTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit treasury rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDate" : {
          "type" : "string",
          "description" : "Date on which the amount will be debited for settlement",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 21
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "orderingAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingBIC" : {
          "type" : "string",
          "description" : "Contains the Business Identfier Code (BIC) of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingName" : {
          "type" : "string",
          "description" : "Ordering customer name details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 40
        },
        "vatDebitMainAmountIndicator" : {
          "type" : "string",
          "description" : "Indicates whether the value for Value Added Tax (VAT) debit main amount percentage will overwrite the defined or derived value from the payment engine. Possibe values are yes and blank.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "vatCreditMainAmountIndicator" : {
          "type" : "string",
          "description" : "Indicates whether the value for Value Added Tax (VAT) credit main amount percentage will overwrite the defined or derived value from the payment engine. Possible values are yes and blank.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "vatDebitMainAmountPercentage" : {
          "type" : "string",
          "description" : "Contains the Value Added Tax (VAT) percentage on debit main amount.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "vatCreditMainAmountPercentage" : {
          "type" : "string",
          "description" : "Contains the Value Added Tax (VAT) percentage on credit main amount.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "returnOrRejectDescription" : {
          "type" : "string",
          "description" : "Contains short additional information on the reason why the payment was returned, refunded or rejected.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelDescription" : {
          "type" : "string",
          "description" : "Contains the reason for cancellation of a payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "returnOrRejectPayment" : {
          "type" : "string",
          "description" : "Identifies whether the payment should be returned or rejected. Possible values are return, reject and blank.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitInstruction" : {
          "type" : "string",
          "description" : "Contains any debit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditInstruction" : {
          "type" : "string",
          "description" : "Contains any credit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "information" : {
          "type" : "string",
          "description" : "Contains informational errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "warning" : {
          "type" : "string",
          "description" : "Contains warning errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "acceptWarning" : {
          "type" : "string",
          "description" : "Indicates whether any warning type of errors encountered by the system have to be mandatorily accepted for further payment processing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "functionalError" : {
          "type" : "string",
          "description" : "Contains functional errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "technicalError" : {
          "type" : "string",
          "description" : "Contains technical errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveDebitCharges" : {
          "type" : "string",
          "description" : "Indicates whether the debit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be debited. Multiple charges can be debited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be debited.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be debited.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the debit charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeAccount" : {
          "type" : "string",
          "description" : "The account from which the Charges will be debited",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debit Charge Account" ]
        },
        "debitChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit charge account number is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "debitChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "outgoingReceiverCharge" : {
          "type" : "string",
          "description" : "Contains the outgoing receiver charge value.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitReceiverChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether the outgoing receiver charge is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "waiveCreditCharges" : {
          "type" : "string",
          "description" : "Indicates whether the credit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided  to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be collected. Multiple charges can be credited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be collected.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "creditChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be collected.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "creditChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeAccount" : {
          "type" : "string",
          "description" : "Contains the account number where the charges will be credited.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Credit Charge Account" ]
        },
        "creditChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit charge account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "creditChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "incomingReceiverCharge" : {
          "type" : "string",
          "description" : "Contains incoming receivers charge.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 23
        },
        "orderingInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Account" ]
        },
        "orderingInstitutionClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of ordering institution.",
          "minLength" : 0,
          "maxLength" : 31,
          "enum" : [ "Ordering Institution Clearing System Code" ]
        },
        "orderingInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains any additional address lines of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Address" ]
        },
        "sendersCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "sendersCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Account" ]
        },
        "sendersCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of sender corresponding institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Sender Correspondent Clearing System Code" ]
        },
        "sendersCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Address" ]
        },
        "receiversCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains Business Identfier Code (BIC) of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "receiversCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Account" ]
        },
        "receiversCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of receiver corresponding institution.",
          "minLength" : 0,
          "maxLength" : 34,
          "enum" : [ "Receiver Correspondent Clearing System Code" ]
        },
        "receiversCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Address" ]
        },
        "thirdReimburseInstitutionCode" : {
          "type" : "string",
          "description" : "Contains Business Identifier Code (BIC) of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "thirdReimburseInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Account" ]
        },
        "thirdReimburseClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Third Reimbursement Inst Clearing System Code" ]
        },
        "thirdReimburseInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Address" ]
        },
        "intermediaryInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "intermediaryInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the intermediate account which will be used to hold the funds if the bulk processing is set to receive only single debit or credit.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Account" ]
        },
        "intermediaryClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of intermediary institution.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Intermediary Inst Clearing System Code" ]
        },
        "intermediaryInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Address" ]
        },
        "accountWithInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the account with institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "accountWithInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Account" ]
        },
        "accountWithClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the account with institution.",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Account With Inst Clearing System Code" ]
        },
        "accountWithInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains the additional address lines of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Address" ]
        },
        "localInstrumentName" : {
          "type" : "string",
          "description" : "Contains proprietary name of the local instrument.",
          "minLength" : 0,
          "maxLength" : 36,
          "enum" : [ "Local Instrument Proprietary" ]
        },
        "instructionCode" : {
          "type" : "string",
          "description" : "Contains the instruction code for the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Instruction Code" ]
        },
        "paymentDetail" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Payment Details" ]
        },
        "categoryPurposeCode" : {
          "type" : "string",
          "description" : "Contains the category purpose in the form of the clearing system identification code.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Category Purpose Code" ]
        },
        "categoryPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary category purpose.",
          "minLength" : 0,
          "maxLength" : 36,
          "enum" : [ "Category Purpose Proprietary" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Transaction Purpose Code" ]
        },
        "transactionPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary underlying reason for the transaction.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "Transaction Purpose Proprietary" ]
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Action" ]
        },
        "ultimateDebtorName" : {
          "type" : "string",
          "description" : "Contains the name of the ultimate debit party that owes an amount of money to the ultimate creditor.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Debtor Name" ]
        },
        "ultimateDebtorBIC" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the ultimate debit party in case the ultimate debit party is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Debtor BIC" ]
        },
        "ultimateDebtorOrganisationId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the organisation, as assigned by the institution, using an identification scheme when the ultimate debit party is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtrr Org IdOther Id" ]
        },
        "ultimateDebtorOrganisationSchemeCode" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the ultimate debit party in a coded format when the ultimate debit party is an organisation. For example, BANK (bank party identification), EMPL (employer identification number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Org Id Other SchCode" ]
        },
        "ultimateDebtorOrganisationSchemeName" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the ultimate debit party in a free text format when the ultimate debit party is an organisation.",
          "minLength" : 0,
          "maxLength" : 43,
          "enum" : [ "Ultimate Dbtr Org Id Other SchProp" ]
        },
        "ultimateDebtorOrganisationIssuer" : {
          "type" : "string",
          "description" : "Contains the entity of the ultimate debit party who assigns the identification when the ultimate debit party is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Org IdOther Issuer" ]
        },
        "ultimateDebtorBirthDate" : {
          "type" : "string",
          "description" : "Contains the birth date of the ultimate debit party in case the party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Debtor BirthDate" ]
        },
        "ultimateDebtorProvinceOfBirth" : {
          "type" : "string",
          "description" : "Contains the province of birth of the ultimate debit party in case the party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Province Of Birth" ]
        },
        "ultimateDebtorCityOfBirth" : {
          "type" : "string",
          "description" : "Contains the city of birth of the ultimate debit party in case the party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr City Of Birth" ]
        },
        "ultimateDebtorCountryOfBirth" : {
          "type" : "string",
          "description" : "Contains the country of birth of the ultimate debit party in case the party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Country Of Birth" ]
        },
        "ultimateDebtorPrivateReference" : {
          "type" : "string",
          "description" : "Contains the unique identification of the ultimate debit party as a person, as assigned by his institution, using identificaiton scheme. For example, the identification could be passport number or driving license number issued by the government of a country.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr PrvId OtherId" ]
        },
        "ultimateDebtorPrivateSchemeCode" : {
          "type" : "string",
          "description" : "Contains the external person identification scheme name code of the ultimate debit party as a person. For example, CCPT (passport number), DRLC (drivers license number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr PrvIdOther SchCode" ]
        },
        "ultimateDebtorPrivateSchemeName" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the ultimate debit party as an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr PrvIdOther SchProp" ]
        },
        "ultimateDebtorPrivateIssuer" : {
          "type" : "string",
          "description" : "Contains the entity of the ultimate debit party who assigns the identification when the ultimate debit party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Prv IdOther Issuer" ]
        },
        "ultimateDebtorAddressLine" : {
          "type" : "string",
          "description" : "Contains the address line of ultimate debit party.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Address Line" ]
        },
        "ultimateDebtorCountry" : {
          "type" : "string",
          "description" : "Contains the country of ultimate debit party.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Dbtr Country" ]
        },
        "ultimateCreditorDisplayName" : {
          "type" : "string",
          "description" : "It specifies the name of the ultimate creditor of the payment",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Creditor Name" ]
        },
        "ultimateCreditorBIC" : {
          "type" : "string",
          "description" : "It specifies the BIC code of Ultimate creditor of payment",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Creditor BIC" ]
        },
        "ultimateCreditorOtherId" : {
          "type" : "string",
          "description" : "This is the other identifier of ultimate creditor, e.g. could be a Social Security Number, a Tax Identification Number, Passport Number, a Clearing Id etc.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr Org IdOther Id" ]
        },
        "ultimateCreditorSchemeCode" : {
          "type" : "string",
          "description" : "This indicates the scheme code for the ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr Org IdOther SchCode" ]
        },
        "ultimateCreditorSchemeProprietary" : {
          "type" : "string",
          "description" : "The proprietary code of the scheme which issued the identifier for the ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr Org IdOther SchProp" ]
        },
        "ultimateCreditorSchemeIssuer" : {
          "type" : "string",
          "description" : "Indicates the issuer of other id of the ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr OrgId OtherIssuer" ]
        },
        "ultimateCreditorDOB" : {
          "type" : "string",
          "description" : "It indicates the Date Of Birth of ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Creditor BirthDate" ]
        },
        "ultimateCreditorBirthProvince" : {
          "type" : "string",
          "description" : "It indicates the place of birth for ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr ProvinceOfBirth" ]
        },
        "ultimateCreditorBirthCity" : {
          "type" : "string",
          "description" : "It indicates the birth city of ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr CityOfBirth" ]
        },
        "ultimateCreditorBirthCountry" : {
          "type" : "string",
          "description" : "It indicates the country of birth for the ultimate creditor",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr CountryOfBirth" ]
        },
        "ultimateCreditorPrivateId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the ultimate credit party as a person, as assigned by his institution, using identificaiton scheme.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr PrvIdOtherId" ]
        },
        "ultimateCreditorPrivateSchemeCode" : {
          "type" : "string",
          "description" : "Contains the external person identification scheme name code of the ultimate credit party as a person.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr PrvIdOther SchCode" ]
        },
        "ultimateCreditorPrivateSchemeName" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the ultimate credit party as an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr PrvIdOther SchProp" ]
        },
        "ultimateCreditorPrivateIssuer" : {
          "type" : "string",
          "description" : "Contains the entity which assigns the identification for ultimate credit party when the ultimate credit party is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr PrvIdOtherIssuer" ]
        },
        "ultimateCreditorAddressLine" : {
          "type" : "string",
          "description" : "It specifies the address fields to be used for the Ultimate creditor of payment",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr Address Line" ]
        },
        "ultimateCreditorCountry" : {
          "type" : "string",
          "description" : "It specifies the Country of Ultimate creditor of payment",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Ultimate Cdtr Country" ]
        },
        "debtorOrganisationId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the organisation of the debtor when the debtor is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Org IdOther Id" ]
        },
        "debtorOrganisationSchemeId" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the debtor in a coded format when the debtor is an organisation. For example, BANK (bank party identification), EMPL (employer identification number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Org IdOther SchCode" ]
        },
        "debtorOrganisationSchemeName" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the debtor in a free text format when the debtor is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Org IdOther SchProp" ]
        },
        "debtorOrganisationIssuer" : {
          "type" : "string",
          "description" : "Contains the entity of the debtor which assigns the identification in case debtor is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Org IdOther Issuer" ]
        },
        "debtorBirthDate" : {
          "type" : "string",
          "description" : "Contains the birth date of the debtor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Birth Date" ]
        },
        "debtorProvinceOfBirth" : {
          "type" : "string",
          "description" : "Contains the province of birth of the debtor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Province Of Birth" ]
        },
        "debtorCityOfBirth" : {
          "type" : "string",
          "description" : "Contains the city of birth of the debtor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor City Of Birth" ]
        },
        "debtorCountryOfBirth" : {
          "type" : "string",
          "description" : "Contains the country of birth of the debtor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Country Of Birth" ]
        },
        "debtorPrivateId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the debtor as a person, as assigned by his institution, using identificaiton scheme. For example, the identification could be passport number or driving license number issued by the government of a country.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Prv IdOther Id" ]
        },
        "debtorPrivateSchemeCode" : {
          "type" : "string",
          "description" : "Contains the external person identification scheme name code of the debtor as a person. For example, CCPT (passport number), DRLC (drivers license number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Prv IdOther SchCode" ]
        },
        "debtorPrivateSchemeName" : {
          "type" : "string",
          "description" : "Contains name of the identification scheme of the debtor as an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Prv IdOther SchProp" ]
        },
        "debtorPrivateIssuer" : {
          "type" : "string",
          "description" : "Contains entity of the debtor which assigns the identification when the debtor is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debtor Prv IdOther Issuer" ]
        },
        "creditorOrganisationId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the organisation of the creditor.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Org IdOther Id" ]
        },
        "creditorOrganisationSchemeCode" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the creditor in coded format. For example, BANK (bank party identification), EMPL (employer identification number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Org IdOther SchCode" ]
        },
        "creditorOrganisationSchemeName" : {
          "type" : "string",
          "description" : "Contains the name of the identification scheme of the creditor in a free text format when the creditor is an organisation.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Cdtr Org IdOther SchProp" ]
        },
        "creditorOrganisationIssuer" : {
          "type" : "string",
          "description" : "Contains the entity of the creditor which assigns the identification when creditor is an organization.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Cdtr Org IdOther Issuer" ]
        },
        "creditorBirthDate" : {
          "type" : "string",
          "description" : "Contains the birth date of the creditor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Birth Date" ]
        },
        "creditorProvinceOfBirth" : {
          "type" : "string",
          "description" : "Contains the province of birth of the creditor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Province Of Birth" ]
        },
        "creditorCityOfBirth" : {
          "type" : "string",
          "description" : "Contains the city of birth of the creditor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor City Of Birth" ]
        },
        "creditorCountryOfBirth" : {
          "type" : "string",
          "description" : "Contains the country of birth of the creditor in case the person is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor CountryOfBirth" ]
        },
        "creditorPrivateId" : {
          "type" : "string",
          "description" : "Contains the unique identification of the creditor as a person, as assigned by his institution. For example, the identification could be passport number or driving license number issued by the government of a country.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Prv IdOther Id" ]
        },
        "creditorPrivateSchemeCode" : {
          "type" : "string",
          "description" : "Contains the external person identification scheme code of the creditor as a person. For example, CCPT (passport number), DRLC (drivers license number).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Prv IdOther SchCode" ]
        },
        "creditorPrivateSchemeName" : {
          "type" : "string",
          "description" : "Contains the proprietary name of the identification scheme of the creditor as an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor Prv IdOther SchProp" ]
        },
        "creditorPrivateIssuer" : {
          "type" : "string",
          "description" : "Contains the creditor entity which assigns the identification when the creditor is an individual.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Creditor PrvIdOther Issuer" ]
        },
        "creditorReferenceCode" : {
          "type" : "string",
          "description" : "Contains the reference information code provided by the creditor to identify underlying documents.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Cdtr Reference Info TypeCode" ]
        },
        "creditorReferenceIssuer" : {
          "type" : "string",
          "description" : "Contains a reference to the entity which assigns the credit reference type in credit transfer payments.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Cdtr Reference Info TypeIssuer" ]
        },
        "creditorReference" : {
          "type" : "string",
          "description" : "1) The real or unique creditor reference for which the structured creditor reference need to be generated if the refOption is GENERATE. 2) The structured creditor reference for which the validation should happen, if the refOption is VALIDATE.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Cdtr Reference Info Reference" ]
        },
        "override" : {
          "type" : "string",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 25
        },
        "currNo" : {
          "type" : "string",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "inputterId" : {
          "type" : "string",
          "description" : "The user identifier Id who input the transaction",
          "minLength" : 0,
          "maxLength" : 25
        },
        "dateTime" : {
          "type" : "string",
          "description" : "Contains the date and time separated by '-'",
          "minLength" : 0,
          "maxLength" : 25
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "fieldPrompt" : {
          "type" : "string",
          "description" : "Contains name of the field which has been updated.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "oldValue" : {
          "type" : "string",
          "description" : "Contains the old value of the field before update.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "newValue" : {
          "type" : "string",
          "description" : "Contains the new value of the field after update.",
          "minLength" : 0,
          "maxLength" : 8
        }
      }
    },
    "PaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentResponseBody"
        }
      },
      "description" : "PaymentResponse"
    },
    "PaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The status of the early maturity request",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Status" ]
        },
        "companyName" : {
          "type" : "string",
          "description" : "The company in which payment is processed",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "processingCompany" ]
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "FT Number" ]
        },
        "processingDate" : {
          "type" : "string",
          "description" : "The date when payment instruction is processed in system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "processingDate" ]
        },
        "processingDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the processing date is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for processing date will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "sendersReference" : {
          "type" : "string",
          "description" : "Indicates the incoming sender's reference i.e. tag 20 of incoming SWIFT or in case when transaction is received from other system/ application, this can also indicate the reference number of that system/ application",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender's Reference Number" ]
        },
        "partySendersReferenceOutgoing" : {
          "type" : "string",
          "description" : "Debtor payment reference details of outgoing",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "sender'sReferenceOutgoing" ]
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "priority" ]
        },
        "relatedReference" : {
          "type" : "string",
          "description" : "An external reference id for the transaction.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "relatedReference" ]
        },
        "product" : {
          "type" : "string",
          "description" : "Indicates an id or name of a product",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "product" ]
        },
        "paymentSource" : {
          "type" : "string",
          "description" : "Indicates the source from where the payment is originated",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "source" ]
        },
        "instructedCurrencyCode" : {
          "type" : "string",
          "description" : "Instructed currency code details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "outputChannel" : {
          "type" : "string",
          "description" : "Contains the channel that will be used to send the outward payment message",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "outputChannel" ]
        },
        "outputChannelImposed" : {
          "type" : "string",
          "description" : "Indicates whether the channel is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for channel will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Output Channel Imposed Flag" ]
        },
        "direction" : {
          "type" : "string",
          "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "direction" ]
        },
        "instructedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount which is allocated or instructed for the account reference included in the selection for a specific transaction.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "transactionCurrency" ]
        },
        "paymentType" : {
          "type" : "string",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "transferType" ]
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "transactionAmount" ]
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "incomingMessageType" ]
        },
        "chargeOption" : {
          "type" : "string",
          "description" : "This field will hold the charge applicable for the order",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "chargeOption" ]
        },
        "balanceReservation" : {
          "type" : "string",
          "description" : "Contains the nature of the balance reservation received from channel. For example, C (Channel has already done the reservation), S (Skipped).",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "balanceReservation" ]
        },
        "balanceReservationReference" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference received from channel or an external system.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "balanceReservationNumber" ]
        },
        "balanceReservationChargeAccount" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "balanceReservationDebitChgAcct" ]
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "preAuthorizationNumber" ]
        },
        "accountWithBank" : {
          "type" : "string",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "minLength" : 0,
          "maxLength" : 40
        },
        "senderInstitutionNcc" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) of the sender institution.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Sender Clearing System Code" ]
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Beneficiary ID" ]
        },
        "receiverInstitutionNcc" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) of receiver institution.",
          "minLength" : 0,
          "maxLength" : 22,
          "enum" : [ "Receiver Institution NCC" ]
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "receiverClearingSystemCode" ]
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "UETR" ]
        },
        "auditDateTime" : {
          "type" : "string",
          "description" : "Contains the date and time of last audit.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the debit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company of the credit party",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderPartyTagOption" : {
          "type" : "string",
          "description" : "Indicates order entry mode for outgoing credit transfer payments.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit account number is imposed on the payment engine. Possible values are yes and blank. If yes, the field value for debit account number will not be overriden by the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAccountNumberImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "partyCompanyBIC" : {
          "type" : "string",
          "description" : "Debtor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryCompanyBIC" : {
          "type" : "string",
          "description" : "Creditor company BIC details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCurrency" : {
          "type" : "string",
          "description" : "Currency of the account which funds will be transferred to.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitAmount" : {
          "type" : "string",
          "description" : "Amount to be debited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditAmount" : {
          "type" : "string",
          "description" : "Amount to be credited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerRate" : {
          "type" : "string",
          "description" : "This field identifies the account currency where funds are to be received from under this drawing.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit exchange rate is imposed.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "creditCustomerRate" : {
          "type" : "string",
          "description" : "Contains the exchange rate that is used to convert the credit amount into the transaction amount (or transaction amount into debit amount) in case the credit account currency is different from the transaction currency.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit exchange rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitCustomerSpread" : {
          "type" : "string",
          "description" : "Contains customers exchange spread which is applied to the treasury rate to generate the applicable exchange rate.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "creditCustomerSpread" : {
          "type" : "string",
          "description" : "Contains the customer exchange spread to be applied.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditCustomerSpreadImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for credit customer spread is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which the treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the value for debit treasury rate is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "creditTreasuryRate" : {
          "type" : "string",
          "description" : "Contains the rate at which treasury unit will buy or sell foreign currency from or to the marketing units. Final customer rate will be determined by the addition or subtraction of the appropriate customer spread to or from the treasury buy or sell rate. This value can only be imposed if the exchange or customer rate is not imposed.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditTreasuryRateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit treasury rate is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "debitExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditExchangeRateReference" : {
          "type" : "string",
          "description" : "Contains the treasury contract number which relates to the buy of a foreign currency by the treasury department.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDate" : {
          "type" : "string",
          "description" : "Date on which the amount will be debited for settlement",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 21
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditValueDateImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit value date is imposed or can be overwritten by the payment engine.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "orderingAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingBIC" : {
          "type" : "string",
          "description" : "Contains the Business Identfier Code (BIC) of the ordering party.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingName" : {
          "type" : "string",
          "description" : "Ordering customer name details",
          "minLength" : 0,
          "maxLength" : 40
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 40
        },
        "returnOrRejectDescription" : {
          "type" : "string",
          "description" : "Contains short additional information on the reason why the payment was returned, refunded or rejected.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelDescription" : {
          "type" : "string",
          "description" : "Contains the reason for cancellation of a payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "returnOrRejectPayment" : {
          "type" : "string",
          "description" : "Identifies whether the payment should be returned or rejected. Possible values are return, reject and blank.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitInstruction" : {
          "type" : "string",
          "description" : "Contains any debit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditInstruction" : {
          "type" : "string",
          "description" : "Contains any credit instructions to process the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "information" : {
          "type" : "string",
          "description" : "Contains informational errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "warning" : {
          "type" : "string",
          "description" : "Contains warning errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "acceptWarning" : {
          "type" : "string",
          "description" : "Indicates whether any warning type of errors encountered by the system have to be mandatorily accepted for further payment processing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "functionalError" : {
          "type" : "string",
          "description" : "Contains functional errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "technicalError" : {
          "type" : "string",
          "description" : "Contains technical errors if any.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveDebitCharges" : {
          "type" : "string",
          "description" : "Indicates whether the debit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be debited. Multiple charges can be debited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be debited.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be debited.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "debitChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the debit charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitChargeAccount" : {
          "type" : "string",
          "description" : "The account from which the Charges will be debited",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Debit Charge Account" ]
        },
        "debitChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the debit charge account number is imposed on payment engine.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "debitChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the debit charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "outgoingReceiverCharge" : {
          "type" : "string",
          "description" : "Contains the outgoing receiver charge value.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "debitReceiverChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether the outgoing receiver charge is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "waiveCreditCharges" : {
          "type" : "string",
          "description" : "Indicates whether the credit side charges or fees can be waived or not.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeImposed" : {
          "type" : "string",
          "description" : "Indicates whether a charge has been provided  to skip calculation of default charges.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeComponent" : {
          "type" : "string",
          "description" : "Contains the type of charge that is to be collected. Multiple charges can be credited. For example, transaction fee, repair fee, etc.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge that is to be collected.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "creditChargeAmount" : {
          "type" : "string",
          "description" : "Contains the charge amount that is to be collected.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "creditChargeAccountCompany" : {
          "type" : "string",
          "description" : "Contains the company code where the charge account is maintained.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "creditChargeAccount" : {
          "type" : "string",
          "description" : "Contains the account number where the charges will be credited.",
          "minLength" : 0,
          "maxLength" : 40,
          "enum" : [ "Credit Charge Account" ]
        },
        "creditChargeAccountImposed" : {
          "type" : "string",
          "description" : "Indicates whether the credit charge account number is imposed on the payment engine.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "creditChargeAccountCurrency" : {
          "type" : "string",
          "description" : "Contains the currency code of the charge account.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "incomingReceiverCharge" : {
          "type" : "string",
          "description" : "Contains incoming receivers charge.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "orderingInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 23
        },
        "orderingInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Account" ]
        },
        "orderingInstitutionClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of ordering institution.",
          "minLength" : 0,
          "maxLength" : 31,
          "enum" : [ "Ordering Institution Clearing System Code" ]
        },
        "orderingInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains any additional address lines of the ordering institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Ordering Institution Address" ]
        },
        "sendersCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 24
        },
        "sendersCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Account" ]
        },
        "sendersCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of sender corresponding institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Sender Correspondent Clearing System Code" ]
        },
        "sendersCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the sender correspondent institution.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Sender's Correspondent Address" ]
        },
        "receiversCorrespondentCode" : {
          "type" : "string",
          "description" : "Contains Business Identfier Code (BIC) of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "receiversCorrespondentAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Account" ]
        },
        "receiversCorrespondentClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of receiver corresponding institution.",
          "minLength" : 0,
          "maxLength" : 34,
          "enum" : [ "Receiver Correspondent Clearing System Code" ]
        },
        "receiversCorrespondentAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the receiver correspondent institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Receiver Correspondent Address" ]
        },
        "thirdReimburseInstitutionCode" : {
          "type" : "string",
          "description" : "Contains Business Identifier Code (BIC) of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 29
        },
        "thirdReimburseInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains National Clearing Code (NCC) or account number of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Account" ]
        },
        "thirdReimburseClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 26,
          "enum" : [ "Third Reimbursement Inst Clearing System Code" ]
        },
        "thirdReimburseInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the third reimbursement institution.",
          "minLength" : 0,
          "maxLength" : 32,
          "enum" : [ "Third Reimbursement Institution Address" ]
        },
        "intermediaryInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "intermediaryInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the intermediate account which will be used to hold the funds if the bulk processing is set to receive only single debit or credit.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Account" ]
        },
        "intermediaryClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of intermediary institution.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Intermediary Inst Clearing System Code" ]
        },
        "intermediaryInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains additional address lines of the intermediary institution.",
          "minLength" : 0,
          "maxLength" : 30,
          "enum" : [ "Intermediary Institution Address" ]
        },
        "accountWithInstitutionCode" : {
          "type" : "string",
          "description" : "Contains the Business Identifier Code (BIC) of the account with institution.",
          "minLength" : 0,
          "maxLength" : 26
        },
        "accountWithInstitutionAccount" : {
          "type" : "string",
          "description" : "Contains the National Clearing Code (NCC) or account number of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Account" ]
        },
        "accountWithClearingCode" : {
          "type" : "string",
          "description" : "Contains the ISO clearing system code of the account with institution.",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Account With Inst Clearing System Code" ]
        },
        "accountWithInstitutionAddress" : {
          "type" : "string",
          "description" : "Contains the additional address lines of the account with institution.",
          "minLength" : 0,
          "maxLength" : 29,
          "enum" : [ "Account With Institution Address" ]
        },
        "localInstrumentName" : {
          "type" : "string",
          "description" : "Contains proprietary name of the local instrument.",
          "minLength" : 0,
          "maxLength" : 36,
          "enum" : [ "Local Instrument Proprietary" ]
        },
        "instructionCode" : {
          "type" : "string",
          "description" : "Contains the instruction code for the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Instruction Code" ]
        },
        "paymentDetail" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Payment Details" ]
        },
        "categoryPurposeCode" : {
          "type" : "string",
          "description" : "Contains the category purpose in the form of the clearing system identification code.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Category Purpose Code" ]
        },
        "categoryPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary category purpose.",
          "minLength" : 0,
          "maxLength" : 36,
          "enum" : [ "Category Purpose Proprietary" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Transaction Purpose Code" ]
        },
        "transactionPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary underlying reason for the transaction.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "Transaction Purpose Proprietary" ]
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Action" ]
        },
        "override" : {
          "type" : "string",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 25
        },
        "currNo" : {
          "type" : "string",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "inputterId" : {
          "type" : "string",
          "description" : "The user identifier Id who input the transaction",
          "minLength" : 0,
          "maxLength" : 25
        },
        "dateTime" : {
          "type" : "string",
          "description" : "Contains the date and time separated by '-'",
          "minLength" : 0,
          "maxLength" : 25
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "fieldPrompt" : {
          "type" : "string",
          "description" : "Contains name of the field which has been updated.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "oldValue" : {
          "type" : "string",
          "description" : "Contains the old value of the field before update.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "newValue" : {
          "type" : "string",
          "description" : "Contains the new value of the field after update.",
          "minLength" : 0,
          "maxLength" : 8
        }
      }
    },
    "InstantPaymentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstantPaymentsResponseBody"
        }
      },
      "description" : "InstantPaymentsResponse"
    },
    "InstantPaymentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "type" : "string",
            "description" : "The company code",
            "maxLength" : 3
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 16
          },
          "currency" : {
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "string",
            "description" : "This is the payment amount"
          },
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 1
          },
          "accountCompany" : {
            "type" : "string",
            "description" : "Company of the account to be created"
          },
          "channel" : {
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
            "maxLength" : 10
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "accountCurrency" : {
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP."
          },
          "processingDate" : {
            "type" : "string",
            "description" : "The date when payment instruction is processed in system.",
            "maxLength" : 10
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "sendersReference" : {
            "type" : "string",
            "description" : "Indicates the incoming sender's reference i.e. tag 20 of incoming SWIFT or in case when transaction is received from other system/ application, this can also indicate the reference number of that system/ application",
            "maxLength" : 16
          },
          "partySendersReferenceOutgoing" : {
            "type" : "string",
            "description" : "Debtor payment reference details of outgoing",
            "maxLength" : 16
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code, as defined by the institution",
            "maxLength" : 3
          },
          "exitStatusDescription" : {
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status"
          },
          "entryDateTime" : {
            "type" : "string",
            "description" : "Contains the payment creation time",
            "maxLength" : 17
          },
          "cancelRequest" : {
            "type" : "string",
            "description" : "Flag to cancel the request which is under process",
            "maxLength" : 2
          },
          "timeOut" : {
            "type" : "string",
            "description" : "Indicates whether the transaction is timed out or not"
          },
          "tabName" : {
            "type" : "string",
            "description" : "Contains the tab name of the retrieved payment"
          },
          "tabLine" : {
            "type" : "string",
            "description" : "Contains the tab line of the retrieved payment"
          },
          "screen" : {
            "type" : "string",
            "description" : "Contains the screen details"
          },
          "additionalDetail" : {
            "type" : "string",
            "description" : "Additional details provided to add context. Closure notes for closed accounts, positing restriction details for restricted accounts & joint holder notes or account title for active accounts"
          }
        }
      }
    },
    "PendingAndProcessedPaymentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PendingAndProcessedPaymentsResponseBody"
        }
      },
      "description" : "PendingAndProcessedPaymentsResponse"
    },
    "PendingAndProcessedPaymentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "type" : "string",
            "description" : "The company code",
            "maxLength" : 3
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 16
          },
          "currency" : {
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "string",
            "description" : "This is the payment amount"
          },
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 1
          },
          "accountCompany" : {
            "type" : "string",
            "description" : "Company of the account to be created"
          },
          "channel" : {
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
            "maxLength" : 10
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "accountCurrency" : {
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP."
          },
          "processingDate" : {
            "type" : "string",
            "description" : "The date when payment instruction is processed in system.",
            "maxLength" : 10
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "partySendersReferenceIncoming" : {
            "type" : "string",
            "description" : "Debtor payment reference details of incoming",
            "maxLength" : 16
          },
          "partySendersReferenceOutgoing" : {
            "type" : "string",
            "description" : "Debtor payment reference details of outgoing",
            "maxLength" : 16
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code, as defined by the institution",
            "maxLength" : 3
          },
          "exitStatusDescription" : {
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status",
            "maxLength" : 30
          },
          "cancelRequest" : {
            "type" : "string",
            "description" : "Flag to cancel the request which is under process",
            "maxLength" : 2
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Indicates the error code which is encountered during payment processing as returned by payment system "
          },
          "paymentBatchType" : {
            "type" : "string",
            "description" : "Indicates whether the type of the payment is bulk or single",
            "maxLength" : 1
          },
          "tabName" : {
            "type" : "string",
            "description" : "Contains the tab name of the retrieved payment"
          },
          "tabLine" : {
            "type" : "string",
            "description" : "Contains the tab line of the retrieved payment"
          },
          "screen" : {
            "type" : "string",
            "description" : "Contains the screen details"
          },
          "additionalDetail" : {
            "type" : "string",
            "description" : "Additional details provided to add context. Closure notes for closed accounts, positing restriction details for restricted accounts & joint holder notes or account title for active accounts"
          }
        }
      }
    },
    "SwiftQueriesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SwiftQueriesResponseBody"
        }
      },
      "description" : "SwiftQueriesResponse"
    },
    "SwiftQueriesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "entryReference" : {
            "type" : "string",
            "description" : "It is the transaction reference. This is the identifier of the transaction on Temenos Core Banking system.",
            "maxLength" : 25
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "messageType" : {
            "type" : "string",
            "description" : "Defines the type of swift messages that are sent or received for a transaction",
            "maxLength" : 20
          },
          "referenceNumber" : {
            "type" : "string",
            "description" : "Specifies the reference for the document, if any.",
            "maxLength" : 16
          },
          "receiver" : {
            "type" : "string",
            "description" : "Identifies the receiver of the message",
            "maxLength" : 30
          },
          "tabName" : {
            "type" : "string",
            "description" : "Contains the tab name of the retrieved payment"
          },
          "tabLine" : {
            "type" : "string",
            "description" : "Contains the tab line of the retrieved payment"
          }
        }
      }
    },
    "PaymentsStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentsStatusResponseBody"
        }
      },
      "description" : "PaymentsStatusResponse"
    },
    "PaymentsStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 5
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "debitAccountId" : {
            "type" : "string",
            "description" : "Indicates the debit account number of the payment or transaction.",
            "maxLength" : 25
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction",
            "maxLength" : 25
          },
          "transactionCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
            "maxLength" : 10
          },
          "transactionAmount" : {
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
            "maximum" : 10
          },
          "messageType" : {
            "type" : "string",
            "description" : "Defines the type of swift messages that are sent or received for a transaction",
            "maxLength" : 10
          },
          "fileSendersReference" : {
            "type" : "string",
            "description" : "Indicates the sender reference that comes from the inward payment file",
            "maxLength" : 10
          },
          "chargeBearer" : {
            "type" : "string",
            "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 10
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code, as defined by the institution",
            "maxLength" : 5
          },
          "description" : {
            "type" : "string",
            "description" : "Contains the description of purpose of the payment.",
            "maxLength" : 20
          },
          "processingDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when payment instruction is processed in system."
          },
          "outputChannel" : {
            "type" : "string",
            "description" : "Contains the channel that will be used to send the outward payment message",
            "maxLength" : 5
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
            "maxLength" : 15
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
            "maxLength" : 15
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary",
            "maxLength" : 20
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number.",
            "maxLength" : 10
          },
          "beneficiaryCountryId" : {
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU",
            "maxLength" : 10
          },
          "beneficiaryAddressCity" : {
            "type" : "string",
            "description" : "City of the beneficiary account. For example: London, Dallas etc.",
            "maxLength" : 10
          },
          "beneficiaryAddress" : {
            "type" : "string",
            "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
            "maxLength" : 20
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer",
            "maxLength" : 10
          },
          "orderingAccount" : {
            "type" : "string",
            "description" : "Contains the National Clearing Code (NCC) or account number of the ordering party.",
            "maxLength" : 15
          },
          "orderingPartyCountry" : {
            "type" : "string",
            "description" : "Contains the country of the ordering party",
            "maxLength" : 10
          },
          "orderingPartyCity" : {
            "type" : "string",
            "description" : "Contains the city/town of the ordering party",
            "maxLength" : 10
          },
          "orderingCustomerAddress" : {
            "type" : "string",
            "description" : "Debit account customer address details",
            "maxLength" : 20
          },
          "beneficiaryBank" : {
            "type" : "string",
            "description" : "Bank for the beneficiary",
            "maxLength" : 10
          },
          "orderingBank" : {
            "type" : "string",
            "description" : "Bank which intiates the transaction",
            "maxLength" : 10
          },
          "fundsTransferId" : {
            "type" : "string",
            "description" : "Identifier of the Funds Transfer",
            "maxLength" : 15
          },
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
            "maxLength" : 10
          },
          "creditAccountCompany" : {
            "type" : "string",
            "description" : "Contains the company of the credit party",
            "maxLength" : 10
          },
          "debitAccountCompany" : {
            "type" : "string",
            "description" : "Contains the company of the debit party",
            "maxLength" : 10
          },
          "creditCurrency" : {
            "type" : "string",
            "description" : "Currency of the account which funds will be transferred to.",
            "maxLength" : 10
          },
          "debitCurrency" : {
            "type" : "string",
            "description" : "Currency of the debit account. For example: USD, EUR etc.",
            "maxLength" : 10
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 15
          },
          "partySendersReferenceIncoming" : {
            "type" : "string",
            "description" : "Debtor payment reference details of incoming",
            "maxLength" : 15
          },
          "entryDateTime" : {
            "type" : "string",
            "description" : "Contains the payment creation time",
            "maxLength" : 10
          },
          "clearingNatureCode" : {
            "type" : "string",
            "description" : "Contains the nature of the payment transaction",
            "maxLength" : 10
          }
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "BankInitiatedPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BankInitiatedPaymentRecallBody"
        }
      },
      "description" : "BankInitiatedPaymentRecall"
    },
    "BankInitiatedPaymentRecallBody" : {
      "type" : "object",
      "required" : [ "transactionReference" ],
      "properties" : {
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "BankInitiatedPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BankInitiatedPaymentRecallResponseBody"
        }
      },
      "description" : "BankInitiatedPaymentRecallResponse"
    },
    "BankInitiatedPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "originatingBic" : {
          "type" : "string",
          "description" : "Indicates the BIC code of the institution where the originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originatorClearingCode" : {
          "type" : "string",
          "description" : "Indicates the national clearing code or sort code where originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "applicationId" : {
          "type" : "string",
          "description" : "Contains the application id of the service that has crashed due to error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originalMessageType" : {
          "type" : "string",
          "description" : "Indicates the outgoing message type of the payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "CustomerInitiatedPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerInitiatedPaymentRecallBody"
        }
      },
      "description" : "CustomerInitiatedPaymentRecall"
    },
    "CustomerInitiatedPaymentRecallBody" : {
      "type" : "object",
      "required" : [ "transactionReference" ],
      "properties" : {
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerInitiatedPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerInitiatedPaymentRecallResponseBody"
        }
      },
      "description" : "CustomerInitiatedPaymentRecallResponse"
    },
    "CustomerInitiatedPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "receivers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "receiver" : {
                "type" : "string",
                "description" : "Identifies the receiver of the message",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "applicationId" : {
          "type" : "string",
          "description" : "Contains the application id of the service that has crashed due to error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originalMessageType" : {
          "type" : "string",
          "description" : "Indicates the outgoing message type of the payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "ResponseToPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ResponseToPaymentRecallBody"
        }
      },
      "description" : "ResponseToPaymentRecall"
    },
    "ResponseToPaymentRecallBody" : {
      "type" : "object",
      "properties" : {
        "rejectAdditionalInfos" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rejectAdditionalInfo" : {
                "type" : "string",
                "description" : "Indicates any additional information that user wishes to supply during rejection of an inward recall",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acceptOrReject" : {
          "type" : "string",
          "description" : "Indicates the flag to accept or reject the inward recall",
          "minLength" : 1,
          "maxLength" : 35
        },
        "acceptedReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for acceptance of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "authorisationReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoRejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ResponseToPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ResponseToPaymentRecallResponseBody"
        }
      },
      "description" : "ResponseToPaymentRecallResponse"
    },
    "ResponseToPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "receivers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "receiver" : {
                "type" : "string",
                "description" : "Identifies the receiver of the message",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "rejectAdditionalInfos" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rejectAdditionalInfo" : {
                "type" : "string",
                "description" : "Indicates any additional information that user wishes to supply during rejection of an inward recall",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "originatingBic" : {
          "type" : "string",
          "description" : "Indicates the BIC code of the institution where the originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "acceptOrReject" : {
          "type" : "string",
          "description" : "Indicates the flag to accept or reject the inward recall",
          "minLength" : 1,
          "maxLength" : 35
        },
        "acceptedReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for acceptance of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "authorisationReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoRejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "partyCompanyBIC" : {
          "type" : "string",
          "description" : "Debtor company BIC details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccount" : {
          "type" : "string",
          "description" : " Identifier of the debitAccounts.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditAccount" : {
          "type" : "string",
          "description" : "Identifier of the creditAccounts.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Contains the description of the error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "recallDate" : {
          "type" : "string",
          "description" : "Date when recall or cancellation is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "PaymentSwiftOutTransaction" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSwiftOutTransactionBody"
        }
      },
      "description" : "PaymentSwiftOutTransaction"
    },
    "PaymentSwiftOutTransactionBody" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "type" : "string",
          "description" : "The company code",
          "minLength" : 0,
          "maxLength" : 7
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "statusCode" : {
          "type" : "string",
          "description" : "Status code, as defined by the institution",
          "minLength" : 0,
          "maxLength" : 13
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        },
        "statusChangeReason" : {
          "type" : "string",
          "description" : "Customer status update with respective reasons",
          "minLength" : 0,
          "maxLength" : 18
        },
        "override" : {
          "type" : "string",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength" : 0,
          "maxLength" : 8
        }
      }
    },
    "PaymentSwiftOutTransactionResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSwiftOutTransactionResponseBody"
        }
      },
      "description" : "PaymentSwiftOutTransactionResponse"
    },
    "PaymentSwiftOutTransactionResponseBody" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "type" : "string",
          "description" : "The company code",
          "minLength" : 0,
          "maxLength" : 7
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "statusCode" : {
          "type" : "string",
          "description" : "Status code, as defined by the institution",
          "minLength" : 0,
          "maxLength" : 13
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        },
        "statusChangeReason" : {
          "type" : "string",
          "description" : "Customer status update with respective reasons",
          "minLength" : 0,
          "maxLength" : 18
        },
        "override" : {
          "type" : "string",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength" : 0,
          "maxLength" : 8
        }
      }
    },
    "PaymentSentMessage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSentMessageBody"
        }
      },
      "description" : "PaymentSentMessage"
    },
    "PaymentSentMessageBody" : {
      "type" : "object",
      "properties" : {
        "ackDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "acknowledgementStatus" : {
                "type" : "string",
                "description" : "Contains the code for ack/nack - accepted or rejected by the clearing. For example: 0 - success acknowledegement , 1 - failure negative acknowledgement",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReason" : {
                "type" : "string",
                "description" : "Contains the  ISO reason code received in technical ack/nack messages",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReasonDescription" : {
                "type" : "string",
                "description" : "Contains the reason description received in technical ack/nack message",
                "minLength" : 0,
                "maxLength" : 40
              },
              "acknowledgementType" : {
                "type" : "string",
                "description" : "Contains the ack/nack message type name. For example: admi.007.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "sentAt" : {
                "type" : "string",
                "description" : "The time on which the message was sent.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 30
        },
        "messageId" : {
          "type" : "string",
          "description" : "The holds the record key of the message ID.",
          "minLength" : 0,
          "maxLength" : 30
        }
      }
    },
    "PaymentSentMessageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSentMessageResponseBody"
        }
      },
      "description" : "PaymentSentMessageResponse"
    },
    "PaymentSentMessageResponseBody" : {
      "type" : "object",
      "properties" : {
        "ackDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "acknowledgementStatus" : {
                "type" : "string",
                "description" : "Contains the code for ack/nack - accepted or rejected by the clearing. For example: 0 - success acknowledegement , 1 - failure negative acknowledgement",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReason" : {
                "type" : "string",
                "description" : "Contains the  ISO reason code received in technical ack/nack messages",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReasonDescription" : {
                "type" : "string",
                "description" : "Contains the reason description received in technical ack/nack message",
                "minLength" : 0,
                "maxLength" : 40
              },
              "acknowledgementType" : {
                "type" : "string",
                "description" : "Contains the ack/nack message type name. For example: admi.007.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "sentAt" : {
                "type" : "string",
                "description" : "The time on which the message was sent.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 30
        },
        "messageId" : {
          "type" : "string",
          "description" : "The holds the record key of the message ID.",
          "minLength" : 0,
          "maxLength" : 30
        }
      }
    },
    "SepaPaymentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaPaymentsResponseBody"
        }
      },
      "description" : "SepaPaymentsResponse"
    },
    "SepaPaymentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "originalTransactionReference" : {
            "type" : "string",
            "description" : "Identifies the Original Transaction Reference that created the Funds Authorisation request",
            "maxLength" : 35
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code, as defined by the institution",
            "maxLength" : 18
          },
          "zeroNoRecords" : {
            "type" : "string",
            "description" : "zero records display for NOFILE (an enquiry does not exist in a single file) enquiry for online upgrade"
          },
          "clearingId" : {
            "type" : "string",
            "description" : "Clearing channel specific details",
            "maxLength" : 8
          },
          "transactionAmount" : {
            "type" : "string",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
            "maxLength" : 19
          },
          "transactionCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
            "maxLength" : 3
          },
          "tabName" : {
            "type" : "string",
            "description" : "Contains the tab name of the retrieved payment",
            "maxLength" : 30
          },
          "tabLine" : {
            "type" : "string",
            "description" : "Contains the tab line of the retrieved payment",
            "maxLength" : 30
          }
        }
      }
    }
  }
}