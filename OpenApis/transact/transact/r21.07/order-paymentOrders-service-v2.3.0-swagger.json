{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for the creation, viewing and management of payment orders",
    "version" : "v2.3.0",
    "title" : "Payment Orders"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v2.3.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/paymentOrders/purposes" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment order purposes details",
        "description" : "Retrieves the list of payment order purpose code details",
        "operationId" : "getPaymentOrderPurposes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderPurposeCodeId",
          "in" : "query",
          "description" : "Indicates the Id of payment purpose code i.e. purpose of the instruction based on a set of pre-defined categories.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderPurposesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderPurposesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/products" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment order products details",
        "description" : "Retrieves the list of payment order product details",
        "operationId" : "getPaymentOrderProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentProductGroupId",
          "in" : "query",
          "description" : "Payment method group details of the payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderProductId",
          "in" : "query",
          "description" : "Indicates the payment order product for which payment is initiated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderProductsResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderProductsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/countryRules" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment order country rules details",
        "description" : "Retrieves the list of payment order country rule details",
        "operationId" : "getPaymentOrderCountryRules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderCountryRulesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderCountryRulesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/sepaInstantPayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create sepa instant payment",
        "description" : "Creates a new Sepa Instant payment record",
        "operationId" : "createSepaInstantPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SepaInstantPayment"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SepaInstantPaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/SepaInstantPaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/sepaInstantTransfers" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create sepa instant transfer",
        "description" : "Creates a new Sepa instant transfer record",
        "operationId" : "createSepaInstantTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SepaInstantTransfer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SepaInstantTransferResponse",
            "schema" : {
              "$ref" : "#/definitions/SepaInstantTransferResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/sepaPayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create sepa payment",
        "description" : "Creates a new Sepa payment record for an external account",
        "operationId" : "createSepaPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SepaPayment"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SepaPaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/SepaPaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/swiftPayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create swift payment",
        "description" : "Creates a new Swift payment record for an external account",
        "operationId" : "createSwiftPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SwiftPayment"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SwiftPaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/SwiftPaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/fasterPayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create faster payment",
        "description" : "Creates a new fast payment record for an external account",
        "operationId" : "createFasterPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FasterPayment"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "FasterPaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/FasterPaymentResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/{paymentOrderId}/cancellations" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Cancel external payment order",
        "description" : "Cancel the existing payment order for external account",
        "operationId" : "cancelExternalPaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExternalPaymentOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ExternalPaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/ExternalPaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Reject payment order",
        "description" : "Reject an initiated payment order",
        "operationId" : "rejectPaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrderDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/isoClearingCodes" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves ISO clearing codes details",
        "description" : "Retrieves the list of ISO clearing codes",
        "operationId" : "getISOClearingCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ISOClearingCodesResponse",
            "schema" : {
              "$ref" : "#/definitions/ISOClearingCodesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/gpi/payments/{paymentId}/status" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create GPI payment status",
        "description" : "Create a GPI payment status with unique transaction reference",
        "operationId" : "createGPIPaymentStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GPIPaymentStatus"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "GPIPaymentStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/GPIPaymentStatusResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update GPI payment status",
        "description" : "Update GPI payment status with unique transaction reference",
        "operationId" : "updateGPIPaymentStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "Indicates the unique reference number of the payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GPIPaymentStatus"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "GPIPaymentStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/GPIPaymentStatusResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/gpi/trackedPayments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the GPI tracking details",
        "description" : "Retrieves the GPI Tracking information",
        "operationId" : "getGpiPaymentTracking",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "query",
          "description" : "Indicates the unique reference number of the payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentMethod",
          "in" : "query",
          "description" : "Method chosen to make the payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "GpiPaymentTrackingResponse",
            "schema" : {
              "$ref" : "#/definitions/GpiPaymentTrackingResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/recalls/eligibleOrders" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the completed payment orders which are available for recall initiation",
        "description" : "Retrieves the payment orders for recall",
        "operationId" : "getPaymentOrdersForRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderId",
          "in" : "query",
          "description" : "The unique reference number of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderProductId",
          "in" : "query",
          "description" : "Indicates the payment order product for which payment is initiated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Contains the date on which the transaction or payment gets initiated.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrdersForRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrdersForRecallResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/trackedPayments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment order in order to track the payment order based on the given order reference or system reference",
        "description" : "Retrieves the payment order for the given order reference",
        "operationId" : "getTrackedPaymentOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "query",
          "description" : "The unique reference number of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSystemId",
          "in" : "query",
          "description" : "Payment system id details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "TrackedPaymentOrdersResponse",
            "schema" : {
              "$ref" : "#/definitions/TrackedPaymentOrdersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/transactions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment order details",
        "description" : "Retrieves the list of payment order details",
        "operationId" : "getPaymentOrderTransactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentDirection",
          "in" : "query",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endToEndReference",
          "in" : "query",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endToEndReferenceNotEqual",
          "in" : "query",
          "description" : "Contains the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment which implies the not equals operand",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "serviceIdentifier",
          "in" : "query",
          "description" : "Contains the reference number in the user header block of the payment message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "serviceIdentifierNotEqual",
          "in" : "query",
          "description" : "Contains the reference number in the user header block of the payment message which implies the not equals operand",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitCustomerId",
          "in" : "query",
          "description" : "Debtor customer details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCustomerId",
          "in" : "query",
          "description" : "Creditor customer id details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountId",
          "in" : "query",
          "description" : "Credit account identifier of the payment or transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderTransactionsResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderTransactionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/instantPayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create Instant Payment Order",
        "description" : "Create Instant Payment Order",
        "operationId" : "createInstantPaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstantPaymentOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "InstantPaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/InstantPaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/recalls/status" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieve the recall status of the payment order for which the recall has been initiated",
        "description" : "Retrieve the recall status of the payment order",
        "operationId" : "getPaymentOrderRecallStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "query",
          "description" : "The unique reference number of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderProductId",
          "in" : "query",
          "description" : "Indicates the payment order product for which payment is initiated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Contains the date on which the transaction or payment gets initiated.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderRecallStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderRecallStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/{paymentOrderId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment order details",
        "description" : "Retrieves the details of a payment order",
        "operationId" : "getPaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "currentState",
          "in" : "query",
          "description" : "Contains the current state of the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentStatus",
          "in" : "query",
          "description" : "Describes the current status of the payment order in the payment system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderProductId",
          "in" : "query",
          "description" : "Indicates the payment order product for which payment is initiated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "uniqueTransactionReference",
          "in" : "query",
          "description" : "Unique transaction reference details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "executionDate",
          "in" : "query",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulkReference",
          "in" : "query",
          "description" : "Contains bulk master reference for the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSource",
          "in" : "query",
          "description" : "Indicates the source from where the payment is originated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrdersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update payment order details",
        "description" : "Updates an existing payment order",
        "operationId" : "updatePaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Cancel payment order",
        "description" : "Cancel an existing payment order",
        "operationId" : "deletePaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrderDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment orders",
        "description" : "Retrieves the list of payment orders",
        "operationId" : "getPaymentOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "query",
          "description" : "The unique reference number of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currentState",
          "in" : "query",
          "description" : "Contains the current state of the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentStatus",
          "in" : "query",
          "description" : "Describes the current status of the payment order in the payment system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentOrderProductId",
          "in" : "query",
          "description" : "Indicates the payment order product for which payment is initiated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "uniqueTransactionReference",
          "in" : "query",
          "description" : "Unique transaction reference details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "executionDate",
          "in" : "query",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulkReference",
          "in" : "query",
          "description" : "Contains bulk master reference for the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSource",
          "in" : "query",
          "description" : "Indicates the source from where the payment is originated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrdersResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrdersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create payment order",
        "description" : "Creates a new payment order",
        "operationId" : "createPaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentOrder"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/paymentOrderApprovals/{paymentOrderId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Approve payment order",
        "description" : " Approve an initiated payment order",
        "operationId" : "approvePaymentOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentOrderId",
          "in" : "path",
          "description" : "The unique reference number of payment",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentOrderResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentOrderResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/paymentOrders/orderSimulation" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Creates transparency check",
        "description" : "Creates transparency check details from payment order to infinity",
        "operationId" : "createTransparency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transparency"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "TransparencyResponse",
            "schema" : {
              "$ref" : "#/definitions/TransparencyResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "PaymentOrderPurposesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderPurposesResponseBody"
        }
      },
      "description" : "PaymentOrderPurposesResponse"
    },
    "PaymentOrderPurposesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentOrderPurposeCodeId" : {
            "type" : "string",
            "description" : "Indicates the Id of payment purpose code i.e. purpose of the instruction based on a set of pre-defined categories.",
            "maxLength" : 4
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 70
          },
          "classification" : {
            "type" : "string",
            "description" : "This indicates a high-level classification of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
            "maxLength" : 70
          },
          "definition" : {
            "type" : "string",
            "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
            "maxLength" : 120
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PaymentOrderProductsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderProductsResponseBody"
        }
      },
      "description" : "PaymentOrderProductsResponse"
    },
    "PaymentOrderProductsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentProductGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentProductGroupId" : {
                  "type" : "string",
                  "description" : "Payment method group details of the payment",
                  "maxLength" : 35
                }
              }
            }
          },
          "paymentCurrencyIds" : {
            "type" : "array",
            "description" : "The currency of payment.",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentCurrencyId" : {
                  "type" : "string",
                  "description" : "The currency of payment.",
                  "maxLength" : 3
                }
              }
            }
          },
          "orderingCurrencyIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "orderingCurrencyId" : {
                  "type" : "string",
                  "description" : "Debit Account currency specific details",
                  "maxLength" : 3
                }
              }
            }
          },
          "countryIds" : {
            "type" : "array",
            "description" : "ISO country code of the financial institution. ",
            "items" : {
              "type" : "object",
              "properties" : {
                "countryId" : {
                  "type" : "string",
                  "description" : "ISO country code of the financial institution. ",
                  "maxLength" : 2
                }
              }
            }
          },
          "clearingChannelIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "clearingChannelId" : {
                  "type" : "string",
                  "description" : "Indicates the clearing channel details to be used",
                  "maxLength" : 35
                }
              }
            }
          },
          "additionalInformations" : {
            "type" : "array",
            "description" : "Additional Information provided to add context",
            "items" : {
              "type" : "object",
              "properties" : {
                "additionalInformation" : {
                  "type" : "string",
                  "description" : "Additional Information provided to add context",
                  "maxLength" : 120
                }
              }
            }
          },
          "paymentOrderProductId" : {
            "type" : "string",
            "description" : "Indicates the payment order product for which payment is initiated",
            "maxLength" : 10
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "rank" : {
            "type" : "string",
            "description" : "Indicates the rank of the payment order product within the group.",
            "maxLength" : 10
          },
          "payThroughBeneficiary" : {
            "type" : "string",
            "description" : "Defines whether payment initiation can be done by providing beneficiary details. This is applicable when beneficiary is not within the same bank",
            "maxLength" : 35
          },
          "futureDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates if a future dated instruction can be inputted for the specific payment order product"
          },
          "requiredCreditValue" : {
            "type" : "string",
            "description" : "Indicates if required credit value date can be inputted for the specific payment order product while initiating a payment",
            "maxLength" : 35
          },
          "IBANSupport" : {
            "type" : "string",
            "description" : "Check for payment support for IBAN or not",
            "maxLength" : 35
          },
          "BICSupport" : {
            "type" : "string",
            "description" : "Check for payment support for BIC or not",
            "maxLength" : 35
          },
          "sortCodeSupport" : {
            "type" : "string",
            "description" : "Check for payment support for sortCode or not",
            "maxLength" : 35
          },
          "narrative" : {
            "type" : "string",
            "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
            "maxLength" : 65
          },
          "weblink" : {
            "type" : "string",
            "description" : "The web link for additional information",
            "maxLength" : 70
          },
          "forexSupport" : {
            "type" : "string",
            "description" : "Check for payment support for forex or not",
            "maxLength" : 3
          },
          "defaultChargeOption" : {
            "type" : "string",
            "description" : "Indicates the charge option which will be defaulted at the time of payment initiation for specific payment order product i.e. Recipient To Pay All Charges, Pay My Bank's Charges or Pay My Bank Charges Only.",
            "maxLength" : 35
          },
          "checkTransparency" : {
            "type" : "string",
            "description" : "Used to set if simulation is required or not",
            "maxLength" : 35
          },
          "awaitExternalSubmit" : {
            "type" : "string",
            "description" : "External payment request for approval details",
            "maxLength" : 35
          }
        }
      }
    },
    "PaymentOrderCountryRulesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderCountryRulesResponseBody"
        }
      },
      "description" : "PaymentOrderCountryRulesResponse"
    },
    "PaymentOrderCountryRulesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "clearingChannelIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "clearingChannelId" : {
                  "type" : "string",
                  "description" : "Indicates the clearing channel details to be used",
                  "maxLength" : 35
                }
              }
            }
          },
          "paymentCurrencyIds" : {
            "type" : "array",
            "description" : "The currency of payment.",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentCurrencyId" : {
                  "type" : "string",
                  "description" : "The currency of payment.",
                  "maxLength" : 3
                }
              }
            }
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 9
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 65
          },
          "IBANSupport" : {
            "type" : "string",
            "description" : "Check for payment support for IBAN or not",
            "maxLength" : 35
          },
          "BICSupport" : {
            "type" : "string",
            "description" : "Check for payment support for BIC or not",
            "maxLength" : 35
          },
          "sortCodeSupport" : {
            "type" : "string",
            "description" : "Check for payment support for sortCode or not",
            "maxLength" : 35
          }
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "SepaInstantPayment" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaInstantPaymentBody"
        }
      },
      "description" : "SepaInstantPayment"
    },
    "SepaInstantPaymentBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "SepaInstantPaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaInstantPaymentResponseBody"
        }
      },
      "description" : "SepaInstantPaymentResponse"
    },
    "SepaInstantPaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "SepaInstantTransfer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaInstantTransferBody"
        }
      },
      "description" : "SepaInstantTransfer"
    },
    "SepaInstantTransferBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "SepaInstantTransferResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaInstantTransferResponseBody"
        }
      },
      "description" : "SepaInstantTransferResponse"
    },
    "SepaInstantTransferResponseBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "SepaPayment" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaPaymentBody"
        }
      },
      "description" : "SepaPayment"
    },
    "SepaPaymentBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "orderingPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "SepaPaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SepaPaymentResponseBody"
        }
      },
      "description" : "SepaPaymentResponse"
    },
    "SepaPaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "orderingPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "SwiftPayment" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SwiftPaymentBody"
        }
      },
      "description" : "SwiftPayment"
    },
    "SwiftPaymentBody" : {
      "type" : "object",
      "properties" : {
        "orderingPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditorAgentId" : {
          "type" : "string",
          "description" : "Clearing system identifier for the beneficiary institution. Contains a valid ISO code for the clearing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorBankCountryCode" : {
          "type" : "string",
          "description" : "Creditor bank country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "SwiftPaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SwiftPaymentResponseBody"
        }
      },
      "description" : "SwiftPaymentResponse"
    },
    "SwiftPaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "orderingPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditorAgentId" : {
          "type" : "string",
          "description" : "Clearing system identifier for the beneficiary institution. Contains a valid ISO code for the clearing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorBankCountryCode" : {
          "type" : "string",
          "description" : "Creditor bank country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "FasterPayment" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FasterPaymentBody"
        }
      },
      "description" : "FasterPayment"
    },
    "FasterPaymentBody" : {
      "type" : "object",
      "properties" : {
        "orderingPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debtorSortCode" : {
          "type" : "string",
          "description" : "Debtor sort code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditorSortCode" : {
          "type" : "string",
          "description" : "Creditor sort code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorAgentId" : {
          "type" : "string",
          "description" : "Clearing system identifier for the beneficiary institution. Contains a valid ISO code for the clearing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorBankCountryCode" : {
          "type" : "string",
          "description" : "Creditor bank country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "FasterPaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FasterPaymentResponseBody"
        }
      },
      "description" : "FasterPaymentResponse"
    },
    "FasterPaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "orderingPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "benPostSwiftAddress" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorAddress" : {
                "type" : "string",
                "description" : "Address of the creditor or beneficiary account",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acctWithBankPostAddrLn" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditorBankAddress" : {
                "type" : "string",
                "description" : "Creditor bank address details",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contexts" : {
          "type" : "array",
          "description" : "Contains the context details in which context names and context values are defined. It defines the specific contexts that needs to be passed in addition to the amount or currency for pricing calculation. Pricing calculation means fee or interest amount calculated based on the predefined rules applied for the contract.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 35
              },
              "chargeCurrencyId" : {
                "type" : "string",
                "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "debtorSortCode" : {
          "type" : "string",
          "description" : "Debtor sort code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debtorCountryCode" : {
          "type" : "string",
          "description" : "Debtor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 45
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 45
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditorSortCode" : {
          "type" : "string",
          "description" : "Creditor sort code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorAgentId" : {
          "type" : "string",
          "description" : "Clearing system identifier for the beneficiary institution. Contains a valid ISO code for the clearing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditorBankCountryCode" : {
          "type" : "string",
          "description" : "Creditor bank country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "priority" : {
          "type" : "string",
          "description" : "Defines the Campaign priority",
          "minLength" : 0,
          "maxLength" : 35
        },
        "consent" : {
          "type" : "string",
          "description" : "This field indicates if Ordering customer has provided consent for this payment order to be initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentScheme" : {
          "type" : "string",
          "description" : "Payment scheme details",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ExternalPaymentOrder" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalPaymentOrderBody"
        }
      },
      "description" : "ExternalPaymentOrder"
    },
    "ExternalPaymentOrderBody" : {
      "type" : "object",
      "properties" : {
        "internalStatus" : {
          "type" : "string",
          "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "cancellationReason" : {
          "type" : "string",
          "description" : "The reason for the cancellation",
          "minLength" : 0,
          "maxLength" : 35
        },
        "remarks" : {
          "type" : "string",
          "description" : "General comments / notes.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "initiator" : {
          "type" : "string",
          "description" : "Initiator details of the payment",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ExternalPaymentOrderResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalPaymentOrderResponseBody"
        }
      },
      "description" : "ExternalPaymentOrderResponse"
    },
    "ExternalPaymentOrderResponseBody" : {
      "type" : "object",
      "properties" : {
        "internalStatus" : {
          "type" : "string",
          "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "cancellationReason" : {
          "type" : "string",
          "description" : "The reason for the cancellation",
          "minLength" : 0,
          "maxLength" : 35
        },
        "remarks" : {
          "type" : "string",
          "description" : "General comments / notes.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "initiator" : {
          "type" : "string",
          "description" : "Initiator details of the payment",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ISOClearingCodesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ISOClearingCodesResponseBody"
        }
      },
      "description" : "ISOClearingCodesResponse"
    },
    "ISOClearingCodesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "clearingId" : {
            "type" : "string",
            "description" : "Clearing channel specific details",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 65
          },
          "swiftPrefix" : {
            "type" : "string",
            "description" : "Prefix of country specific details in payments method",
            "maxLength" : 6
          },
          "countryShortName" : {
            "type" : "string",
            "description" : "Short name of country details",
            "maxLength" : 2
          }
        }
      }
    },
    "GPIPaymentStatus" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/GPIPaymentStatusBody"
        }
      },
      "description" : "GPIPaymentStatus"
    },
    "GPIPaymentStatusBody" : {
      "type" : "object",
      "properties" : {
        "UETRId" : {
          "type" : "string",
          "description" : "Unique transaction reference details for payments",
          "minLength" : 0,
          "maxLength" : 6
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "requestMessage" : {
          "type" : "string",
          "description" : "User requested message details",
          "minLength" : 0,
          "maxLength" : 14
        },
        "responseMessage" : {
          "type" : "string",
          "description" : "Message  from bank details",
          "minLength" : 0,
          "maxLength" : 15
        }
      }
    },
    "GPIPaymentStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/GPIPaymentStatusResponseBody"
        }
      },
      "description" : "GPIPaymentStatusResponse"
    },
    "GPIPaymentStatusResponseBody" : {
      "type" : "object",
      "properties" : {
        "UETRId" : {
          "type" : "string",
          "description" : "Unique transaction reference details for payments",
          "minLength" : 0,
          "maxLength" : 6
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "requestMessage" : {
          "type" : "string",
          "description" : "User requested message details",
          "minLength" : 0,
          "maxLength" : 14
        },
        "responseMessage" : {
          "type" : "string",
          "description" : "Message  from bank details",
          "minLength" : 0,
          "maxLength" : 15
        }
      }
    },
    "GpiPaymentTrackingResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/GpiPaymentTrackingResponseBody"
        }
      },
      "description" : "GpiPaymentTrackingResponse"
    },
    "GpiPaymentTrackingResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "transactionDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "messageNameIdentification" : {
                  "type" : "string",
                  "description" : "Message name identification details"
                }
              }
            }
          },
          "uniqueTransactionReference" : {
            "type" : "string",
            "description" : "Unique transaction reference details"
          },
          "paymentSystemId" : {
            "type" : "string",
            "description" : "Payment system id details"
          },
          "transactionAmount" : {
            "type" : "string",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "endToEndReference" : {
            "type" : "string",
            "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment."
          },
          "paymentDirection" : {
            "type" : "string",
            "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect"
          },
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001."
          },
          "instructedAmount" : {
            "type" : "string",
            "description" : "Specifies the amount which is allocated or instructed for the account reference included in the selection for a specific transaction."
          },
          "instructedCurrencyCode" : {
            "type" : "string",
            "description" : "Instructed currency code details"
          },
          "completionTime" : {
            "type" : "string",
            "description" : "Payment completion time details"
          },
          "initiationTime" : {
            "type" : "string",
            "description" : "Initiation of the payment time details"
          },
          "confirmedAmount" : {
            "type" : "string",
            "description" : "Confirmed amount details"
          },
          "confirmedAmountCurrency" : {
            "type" : "string",
            "description" : "Confirmed amount currency details"
          },
          "finalChargeAmount" : {
            "type" : "string",
            "description" : "Total amount details of payment inclusive of charges"
          },
          "transactionEventType" : {
            "type" : "string",
            "description" : "Transaction event type details"
          },
          "debtorAgent" : {
            "type" : "string",
            "description" : "Debtor agent details"
          },
          "totalDuration" : {
            "type" : "string",
            "description" : "Payment total duration details"
          },
          "overallStatusCode" : {
            "type" : "string",
            "description" : "Overall status code details of the payment"
          },
          "partyCompanyName" : {
            "type" : "string",
            "description" : "Debtor company name details"
          },
          "partyCompanyBIC" : {
            "type" : "string",
            "description" : "Debtor company BIC details"
          },
          "partyCompanyFlag" : {
            "type" : "string",
            "description" : "Debtor company flag details"
          },
          "partyCountryName" : {
            "type" : "string",
            "description" : "Debtor country name details"
          },
          "partyCreationTime" : {
            "type" : "string",
            "description" : "Debtor creation time details of the payment"
          },
          "partySendersReferenceOutgoing" : {
            "type" : "string",
            "description" : "Debtor payment reference details of outgoing"
          },
          "partySendersReferenceIncoming" : {
            "type" : "string",
            "description" : "Debtor payment reference details of incoming"
          },
          "beneficiaryCompanyName" : {
            "type" : "string",
            "description" : "Creditor company name details"
          },
          "beneficiaryCompanyBIC" : {
            "type" : "string",
            "description" : "Creditor company BIC details"
          },
          "beneficiaryCompanyFlag" : {
            "type" : "string",
            "description" : "Creditor company flag details"
          },
          "beneficiaryCountryName" : {
            "type" : "string",
            "description" : "Creditor country name details"
          },
          "beneficiaryReceivedDateTime" : {
            "type" : "string",
            "description" : "Creditor payment received date time details"
          },
          "beneficiaryCompletionTime" : {
            "type" : "string",
            "description" : "Creditor payment completion time details"
          },
          "beneficiaryDeducts" : {
            "type" : "string",
            "description" : "Payment deduction details for creditor"
          },
          "beneficiaryTotalDuration" : {
            "type" : "string",
            "description" : "Payment total duration details for receiver"
          },
          "debitAccountId" : {
            "type" : "string",
            "description" : "Indicates the debit account number of the payment or transaction."
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer"
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number."
          },
          "beneficiaryCustomerName" : {
            "type" : "string",
            "description" : "Specifies the name and address of the beneficiary of the guarantee request."
          }
        }
      }
    },
    "PaymentOrdersForRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrdersForRecallResponseBody"
        }
      },
      "description" : "PaymentOrdersForRecallResponse"
    },
    "PaymentOrdersForRecallResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentOrderId" : {
            "type" : "string",
            "description" : "The unique reference number of payment",
            "maxLength" : 35
          },
          "paymentOrderProductId" : {
            "type" : "string",
            "description" : "Indicates the payment order product for which payment is initiated",
            "maxLength" : 35
          },
          "relatedReference" : {
            "type" : "string",
            "description" : "An external reference id for the transaction.",
            "maxLength" : 35
          },
          "orderingCustomerId" : {
            "type" : "string",
            "description" : "Indicates the customer id for the ordering customer",
            "maxLength" : 35
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer",
            "maxLength" : 140
          },
          "bicId" : {
            "type" : "string",
            "description" : "Bank Identifier Code (BIC) of the Beneficiary bank.",
            "maxLength" : 35
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number.",
            "maxLength" : 34
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary",
            "maxLength" : 71
          },
          "applicantAccountId" : {
            "type" : "string",
            "description" : "Defines the default account to be used for reimbursement from the Applicant in the case of an Import Letter of Credit and the Drawee in the event of an Inward Collection.",
            "maxLength" : 35
          },
          "paymentCurrency" : {
            "type" : "string",
            "description" : "This field holds the transaction currency or currency in which payment is initiated. ",
            "maxLength" : 3
          },
          "paymentAmount" : {
            "type" : "string",
            "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
            "maxLength" : 19
          },
          "creditValueDate" : {
            "type" : "string",
            "description" : "Reference quoted by the credit account for a payment",
            "maxLength" : 22
          },
          "clearingId" : {
            "type" : "string",
            "description" : "Clearing channel specific details",
            "maxLength" : 15
          }
        }
      }
    },
    "TrackedPaymentOrdersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TrackedPaymentOrdersResponseBody"
        }
      },
      "description" : "TrackedPaymentOrdersResponse"
    },
    "TrackedPaymentOrdersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentOrderId" : {
            "type" : "string",
            "description" : "The unique reference number of payment",
            "maxLength" : 35
          },
          "paymentSystemId" : {
            "type" : "string",
            "description" : "Payment system id details",
            "maxLength" : 35
          },
          "paymentOrderProductId" : {
            "type" : "string",
            "description" : "Indicates the payment order product for which payment is initiated",
            "maxLength" : 35
          },
          "executionDate" : {
            "type" : "string",
            "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.",
            "maxLength" : 35
          },
          "debitAccount" : {
            "type" : "string",
            "description" : " Identifier of the debitAccounts.",
            "maxLength" : 35
          },
          "paymentCurrency" : {
            "type" : "string",
            "description" : "This field holds the transaction currency or currency in which payment is initiated. ",
            "maxLength" : 35
          },
          "paymentAmount" : {
            "type" : "string",
            "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
            "maxLength" : 35
          },
          "beneficiaryBank" : {
            "type" : "string",
            "description" : "Bank for the beneficiary",
            "maxLength" : 35
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number.",
            "maxLength" : 35
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary",
            "maxLength" : 35
          },
          "currentState" : {
            "type" : "string",
            "description" : "Contains the current state of the transaction",
            "maxLength" : 35
          },
          "paymentStatus" : {
            "type" : "string",
            "description" : "Describes the current status of the payment order in the payment system",
            "maxLength" : 35
          },
          "recallStatus" : {
            "type" : "string",
            "description" : "Indicates the recall status of the payment for which the recall has been initiated",
            "maxLength" : 35
          },
          "orderType" : {
            "type" : "string",
            "description" : "Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled.",
            "maxLength" : 35
          }
        }
      }
    },
    "PaymentOrderTransactionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderTransactionsResponseBody"
        }
      },
      "description" : "PaymentOrderTransactionsResponse"
    },
    "PaymentOrderTransactionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "creditValueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Reference quoted by the credit account for a payment"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 255
          },
          "GPIStatus" : {
            "type" : "string",
            "description" : "This field to store the GPI status as received in gpi confirmation tracker",
            "maxLength" : 36
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 17
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc.",
            "maxLength" : 16
          },
          "orderingName" : {
            "type" : "string",
            "description" : "Ordering customer name details",
            "maxLength" : 255
          }
        }
      }
    },
    "InstantPaymentOrder" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstantPaymentOrderBody"
        }
      },
      "description" : "InstantPaymentOrder"
    },
    "InstantPaymentOrderBody" : {
      "type" : "object",
      "properties" : {
        "benPostSwiftAddr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiarySWIFTAddress" : {
                "type" : "string",
                "description" : "Address of the beneficiary which will be included as part of outgoing payment instruction",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Beneficiary Swift Address" ]
              }
            }
          }
        },
        "benPostAddressLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddressLine1" : {
                "type" : "string",
                "description" : "Address of the beneficiary or credit account.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Beneficiary ISO Address Line" ]
              }
            }
          }
        },
        "remittanceInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "remittanceInformation" : {
                "type" : "string",
                "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Payment Details" ]
              }
            }
          }
        },
        "contextField" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Context Name" ]
              }
            }
          }
        },
        "contextFieldValue" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Context Value" ]
              }
            }
          }
        },
        "chargeDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Type" ]
              }
            }
          }
        },
        "chargeInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Description" ]
              }
            }
          }
        },
        "chargeAmt" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "string",
                "description" : "Retrieves the Charge Amount after redeem",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Amount" ]
              }
            }
          }
        },
        "chargeCurr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Currency" ]
              }
            }
          }
        },
        "chargeAccountAmt" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountCurrencyAmount" : {
                "type" : "string",
                "description" : "Holds the charge to be applied for the corresponding charge type for the order in the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge AC Currency Amount" ]
              }
            }
          }
        },
        "chargeAcc" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountId" : {
                "type" : "string",
                "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Account" ]
              }
            }
          }
        },
        "chargeAccCurr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountCurrencyId" : {
                "type" : "string",
                "description" : "When a charge account is specified, this field indicates the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Account Currency" ]
              }
            }
          }
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Account" ]
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Account IBAN" ]
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Currency" ]
        },
        "debitAmount" : {
          "type" : "string",
          "description" : "Amount to be debited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Amount" ]
        },
        "debitValueDate" : {
          "type" : "string",
          "description" : "Date on which the amount will be debited for settlement",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Value Date" ]
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Account Type" ]
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Name" ]
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Id" ]
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Address" ]
        },
        "orderingPartyCountry" : {
          "type" : "string",
          "description" : "Contains the country of the ordering party",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Party Country" ]
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Id" ]
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Name" ]
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Account Id" ]
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary IBAN" ]
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary BIC" ]
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Address Type" ]
        },
        "beneficiaryFaxNumber" : {
          "type" : "string",
          "description" : "Contains the fax number of the beneficiary of the payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Fax Detail" ]
        },
        "beneficiaryDetail" : {
          "type" : "string",
          "description" : "Indicates additional details of Beneficiary",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Other Detail" ]
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Code" ]
        },
        "beneficiaryOtherIdType" : {
          "type" : "string",
          "description" : "Indicates the type of the beneficiary i.e. Organisation or Private",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Other ID Type" ]
        },
        "beneficiaryOtherId" : {
          "type" : "string",
          "description" : "Indicates the beneficiary other identifier, e.g. could be a Social Security Number, a Tax Identification Number, Passport Number, a Clearing Id etc.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Other ID" ]
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent BIC" ]
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent Identifier" ]
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent National Code" ]
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent Country" ]
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Amount" ]
        },
        "paymentCurrency" : {
          "type" : "string",
          "description" : "This field holds the transaction currency or currency in which payment is initiated. ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Currency" ]
        },
        "executionDate" : {
          "type" : "string",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Execution Date" ]
        },
        "balanceReservationReference" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference received from channel or an external system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Locked Event ID" ]
        },
        "originalRequestedExecutionDate" : {
          "type" : "string",
          "description" : "Contains the original requested execution date of the payment as received from the initiating channel, indicating when the payment has to be processed by the payment system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Original Req Execution Date" ]
        },
        "acceptanceDateTime" : {
          "type" : "string",
          "description" : "Contains the transaction date and time returned by the payer's payment system on submission of the payment transaction by the payer after the response to request to pay has triggerred a payment in the payment system",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Acceptance Date Time" ]
        },
        "submitOrder" : {
          "type" : "string",
          "description" : "Contains the options yes or no to submit a payment order for execution.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Submit Order" ]
        },
        "instructionIdReference" : {
          "type" : "string",
          "description" : "Indicates the SEPA purpose of the SEPA Payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Instruction Identification" ]
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "End to End Identification" ]
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Order Product Id" ]
        },
        "PSDCompliant" : {
          "type" : "string",
          "description" : "Defines whether the transaction is PSD (Payment Services Directive) compliant or not.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "PSD Compliant" ]
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Credit Value Date" ]
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Payment Fx Cust Rate" ]
        },
        "indicativeRate" : {
          "type" : "string",
          "description" : "The indicative rate at the time of submitting a payment initiation request. Actual rate with which the payment will be processed will be calculated/ fetched during payment processing. ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Indicative Rate" ]
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Charge Bearer" ]
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Waive Charge" ]
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Total Debit Amount" ]
        },
        "instructedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount which is allocated or instructed for the account reference included in the selection for a specific transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Instructed Amount" ]
        },
        "ultimateDebtor" : {
          "type" : "string",
          "description" : "Contains the actual debitor account number",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "ultimateDebtor" ]
        },
        "ultimateCreditor" : {
          "type" : "string",
          "description" : "Contains the actual creditor account number",
          "minLength" : 0,
          "maxLength" : 70
        },
        "creditorAddress" : {
          "type" : "string",
          "description" : "Address of the creditor or beneficiary account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Address" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "purpose" ]
        },
        "transactionPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary underlying reason for the transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Transaction Purpose" ]
        },
        "structuredCreditorReference" : {
          "type" : "string",
          "description" : "Contains description of the credit account reference",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "structured Creditor Reference" ]
        },
        "structuredCommunicationCode" : {
          "type" : "string",
          "description" : "Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Structured Communication Code" ]
        },
        "structuredIssuer" : {
          "type" : "string",
          "description" : "Entity that assigns the identification",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Structured Issuer" ]
        },
        "narrative" : {
          "type" : "string",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Narrative" ]
        }
      }
    },
    "InstantPaymentOrderResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstantPaymentOrderResponseBody"
        }
      },
      "description" : "InstantPaymentOrderResponse"
    },
    "InstantPaymentOrderResponseBody" : {
      "type" : "object",
      "properties" : {
        "benPostSwiftAddr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiarySWIFTAddress" : {
                "type" : "string",
                "description" : "Address of the beneficiary which will be included as part of outgoing payment instruction",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Beneficiary Swift Address" ]
              }
            }
          }
        },
        "benPostAddressLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddressLine1" : {
                "type" : "string",
                "description" : "Address of the beneficiary or credit account.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Beneficiary ISO Address Line" ]
              }
            }
          }
        },
        "remittanceInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "remittanceInformation" : {
                "type" : "string",
                "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Payment Details" ]
              }
            }
          }
        },
        "contextField" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Context Name" ]
              }
            }
          }
        },
        "contextFieldValue" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Context Value" ]
              }
            }
          }
        },
        "chargeDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Type" ]
              }
            }
          }
        },
        "chargeInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Description" ]
              }
            }
          }
        },
        "chargeAmt" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAmount" : {
                "type" : "string",
                "description" : "Retrieves the Charge Amount after redeem",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Amount" ]
              }
            }
          }
        },
        "chargeCurr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Currency" ]
              }
            }
          }
        },
        "chargeAccountAmt" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountCurrencyAmount" : {
                "type" : "string",
                "description" : "Holds the charge to be applied for the corresponding charge type for the order in the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge AC Currency Amount" ]
              }
            }
          }
        },
        "chargeAcc" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountId" : {
                "type" : "string",
                "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Account" ]
              }
            }
          }
        },
        "chargeAccCurr" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeAccountCurrencyId" : {
                "type" : "string",
                "description" : "When a charge account is specified, this field indicates the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 70,
                "enum" : [ "Charge Account Currency" ]
              }
            }
          }
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Account" ]
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Account IBAN" ]
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Currency" ]
        },
        "debitAmount" : {
          "type" : "string",
          "description" : "Amount to be debited in a payment transaction",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Amount" ]
        },
        "debitValueDate" : {
          "type" : "string",
          "description" : "Date on which the amount will be debited for settlement",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Debit Value Date" ]
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Account Type" ]
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Name" ]
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Id" ]
        },
        "orderingCustomerAddress" : {
          "type" : "string",
          "description" : "Debit account customer address details",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Customer Address" ]
        },
        "orderingPartyCountry" : {
          "type" : "string",
          "description" : "Contains the country of the ordering party",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Party Country" ]
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Id" ]
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Name" ]
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Account Id" ]
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary IBAN" ]
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary BIC" ]
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Address Type" ]
        },
        "beneficiaryFaxNumber" : {
          "type" : "string",
          "description" : "Contains the fax number of the beneficiary of the payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Fax Detail" ]
        },
        "beneficiaryDetail" : {
          "type" : "string",
          "description" : "Indicates additional details of Beneficiary",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Other Detail" ]
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Country Code" ]
        },
        "beneficiaryOtherIdType" : {
          "type" : "string",
          "description" : "Indicates the type of the beneficiary i.e. Organisation or Private",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Other ID Type" ]
        },
        "beneficiaryOtherId" : {
          "type" : "string",
          "description" : "Indicates the beneficiary other identifier, e.g. could be a Social Security Number, a Tax Identification Number, Passport Number, a Clearing Id etc.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Beneficiary Other ID" ]
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent BIC" ]
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent Identifier" ]
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent National Code" ]
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Agent Country" ]
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Amount" ]
        },
        "paymentCurrency" : {
          "type" : "string",
          "description" : "This field holds the transaction currency or currency in which payment is initiated. ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Currency" ]
        },
        "executionDate" : {
          "type" : "string",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Execution Date" ]
        },
        "balanceReservationReference" : {
          "type" : "string",
          "description" : "Contains the balance reservation reference received from channel or an external system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Locked Event ID" ]
        },
        "originalRequestedExecutionDate" : {
          "type" : "string",
          "description" : "Contains the original requested execution date of the payment as received from the initiating channel, indicating when the payment has to be processed by the payment system.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Original Req Execution Date" ]
        },
        "acceptanceDateTime" : {
          "type" : "string",
          "description" : "Contains the transaction date and time returned by the payer's payment system on submission of the payment transaction by the payer after the response to request to pay has triggerred a payment in the payment system",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Acceptance Date Time" ]
        },
        "submitOrder" : {
          "type" : "string",
          "description" : "Contains the options yes or no to submit a payment order for execution.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Submit Order" ]
        },
        "instructionIdReference" : {
          "type" : "string",
          "description" : "Indicates the SEPA purpose of the SEPA Payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Instruction Identification" ]
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "End to End Identification" ]
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Payment Order Product Id" ]
        },
        "PSDCompliant" : {
          "type" : "string",
          "description" : "Defines whether the transaction is PSD (Payment Services Directive) compliant or not.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "PSD Compliant" ]
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Credit Value Date" ]
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Ordering Payment Fx Cust Rate" ]
        },
        "indicativeRate" : {
          "type" : "string",
          "description" : "The indicative rate at the time of submitting a payment initiation request. Actual rate with which the payment will be processed will be calculated/ fetched during payment processing. ",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Indicative Rate" ]
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Charge Bearer" ]
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Waive Charge" ]
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Total Debit Amount" ]
        },
        "instructedAmount" : {
          "type" : "string",
          "description" : "Specifies the amount which is allocated or instructed for the account reference included in the selection for a specific transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Instructed Amount" ]
        },
        "ultimateDebtor" : {
          "type" : "string",
          "description" : "Contains the actual debitor account number",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "ultimateDebtor" ]
        },
        "ultimateCreditor" : {
          "type" : "string",
          "description" : "Contains the actual creditor account number",
          "minLength" : 0,
          "maxLength" : 70
        },
        "creditorAddress" : {
          "type" : "string",
          "description" : "Address of the creditor or beneficiary account",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Creditor Address" ]
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "purpose" ]
        },
        "transactionPurpose" : {
          "type" : "string",
          "description" : "Contains the proprietary underlying reason for the transaction.",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Transaction Purpose" ]
        },
        "structuredCreditorReference" : {
          "type" : "string",
          "description" : "Contains description of the credit account reference",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "structured Creditor Reference" ]
        },
        "structuredCommunicationCode" : {
          "type" : "string",
          "description" : "Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Structured Communication Code" ]
        },
        "structuredIssuer" : {
          "type" : "string",
          "description" : "Entity that assigns the identification",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Structured Issuer" ]
        },
        "localInstrumentCode" : {
          "type" : "string",
          "description" : "List of transfer type has been mentioned locally in a record",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "local Instrument Code" ]
        },
        "narrative" : {
          "type" : "string",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Narrative" ]
        },
        "simulationChecked" : {
          "type" : "string",
          "description" : "Indicates if simulation is performed for the payment order",
          "minLength" : 0,
          "maxLength" : 70,
          "enum" : [ "Simulation Checked" ]
        }
      }
    },
    "PaymentOrderRecallStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderRecallStatusResponseBody"
        }
      },
      "description" : "PaymentOrderRecallStatusResponse"
    },
    "PaymentOrderRecallStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentOrderId" : {
            "type" : "string",
            "description" : "The unique reference number of payment",
            "maxLength" : 35
          },
          "orderingCustomerId" : {
            "type" : "string",
            "description" : "Indicates the customer id for the ordering customer",
            "maxLength" : 35
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer"
          },
          "debitAccountId" : {
            "type" : "string",
            "description" : "Indicates the debit account number of the payment or transaction."
          },
          "amount" : {
            "type" : "string",
            "description" : "This is the payment amount"
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary"
          },
          "executionDate" : {
            "type" : "string",
            "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
          },
          "systemId" : {
            "type" : "string",
            "description" : "The system application identifier that could be used as entry reference or used as prefix in unique transaction identifiers"
          },
          "recallStatus" : {
            "type" : "string",
            "description" : "Indicates the recall status of the payment for which the recall has been initiated"
          },
          "rejectReasonCode" : {
            "type" : "string",
            "description" : "Indicates the reject reason code of the payment for which the recall has been rejected"
          }
        }
      }
    },
    "PaymentOrder" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderBody"
        }
      },
      "description" : "PaymentOrder",
      "example": {
	            "body": {
  		          "paymentOrderProductId": "ACOTHER",
		            "debitAccountId": "102447",
		            "debitCurrency": "USD",
		            "creditAccountId": "AA211053KNS0",
		            "paymentCurrencyId": "USD",
		            "amount": 500
	            }
	          }
    },
    "PaymentOrderBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 65
              }
            }
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Additional Information provided to add context",
          "items" : {
            "type" : "object",
            "properties" : {
              "additionalInformation" : {
                "type" : "string",
                "description" : "Additional Information provided to add context",
                "minLength" : 0,
                "maxLength" : 65
              }
            }
          }
        },
        "remittanceInformations" : {
          "type" : "array",
          "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
          "items" : {
            "type" : "object",
            "properties" : {
              "remittanceInformation" : {
                "type" : "string",
                "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
                "minLength" : 0,
                "maxLength" : 100
              }
            }
          }
        },
        "signatories" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "type" : "object",
            "properties" : {
              "signatory" : {
                "type" : "string",
                "description" : "The authorised signatories for the payments can be specified here. More applicable in case of corporate payments where multiple signatories are required to sign a payment instruction",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "invoiceReferences" : {
          "type" : "array",
          "description" : "It provides the reference of the invoice ",
          "items" : {
            "type" : "object",
            "properties" : {
              "invoiceReference" : {
                "type" : "string",
                "description" : "It provides the reference of the invoice ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 20
              },
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 50
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 14
              },
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 19
              },
              "chargeAccountCurrencyAmount" : {
                "type" : "string",
                "description" : "Holds the charge to be applied for the corresponding charge type for the order in the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "reasons" : {
          "type" : "array",
          "description" : "Contains the reason for the creation of the Mandate",
          "items" : {
            "type" : "object",
            "properties" : {
              "reason" : {
                "type" : "string",
                "description" : "Contains the reason for the creation of the Mandate",
                "minLength" : 0,
                "maxLength" : 6
              }
            }
          }
        },
        "accountWithInstitutionAddresses" : {
          "type" : "array",
          "description" : "Contains the additional address lines of the account with institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithInstitutionAddress" : {
                "type" : "string",
                "description" : "Contains the additional address lines of the account with institution.",
                "minLength" : 0,
                "maxLength" : 100
              }
            }
          }
        },
        "orderingPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "contextNames" : {
          "type" : "array",
          "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "contextValues" : {
          "type" : "array",
          "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "messageType" : {
          "type" : "array",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "incomingMessageType" : {
                "type" : "string",
                "description" : "Indicates the supported message type to be received from the clearing house or the direct participant.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 13
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 0,
          "maxLength" : 19
        },
        "creditAccountIBAN" : {
          "type" : "string",
          "description" : "Indicates the IBAN of the credit account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 140
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 19
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "treasuryRate" : {
          "type" : "string",
          "description" : "The Treasury rate for the conversion between payment currency and the ordering currency",
          "minLength" : 0,
          "maxLength" : 12
        },
        "forexSpread" : {
          "type" : "string",
          "description" : "The spread that is applied to the published internal exchange rates to derive the final exchange rate or the customer rate for the transaction for currency conversion between ordering currency and payment currency",
          "minLength" : 0,
          "maxLength" : 12
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 29
        },
        "orderingPortfolio" : {
          "type" : "string",
          "description" : "Indicates the portfolio id for the debit side if the account belongs to a specific portfolio",
          "minLength" : 0,
          "maxLength" : 18
        },
        "creditPortfolio" : {
          "type" : "string",
          "description" : "Indicates the portfolio id for the credit side if the account belongs to a specific portfolio",
          "minLength" : 0,
          "maxLength" : 18
        },
        "orderingReference" : {
          "type" : "string",
          "description" : "The reference related to the ordering details",
          "minLength" : 0,
          "maxLength" : 18
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 17
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 70
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 27
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "clearingChannel" : {
          "type" : "string",
          "description" : "Indicates the clearing channel for the payment in the ISO format of the Clearing System Identifiers",
          "minLength" : 0,
          "maxLength" : 35
        },
        "structuredCreditorReference" : {
          "type" : "string",
          "description" : "Contains description of the credit account reference",
          "minLength" : 0,
          "maxLength" : 65
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requiredCreditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The credit value date i.e. tentative date on which the payment system will process the payment"
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 65
        },
        "structuredCommunicationCode" : {
          "type" : "string",
          "description" : "Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "structuredIssuer" : {
          "type" : "string",
          "description" : "Entity that assigns the identification",
          "minLength" : 0,
          "maxLength" : 65
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "instructionIdReference" : {
          "type" : "string",
          "description" : "Indicates the SEPA purpose of the SEPA Payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "termsAndConditions" : {
          "type" : "string",
          "description" : "Specifies the terms and conditions in the text format for the payment instruction, if any.",
          "minLength" : 0,
          "maxLength" : 120
        },
        "indicativeRate" : {
          "type" : "string",
          "description" : "The indicative rate at the time of submitting a payment initiation request. Actual rate with which the payment will be processed will be calculated/ fetched during payment processing. ",
          "minLength" : 0,
          "maxLength" : 14
        },
        "chargeAccountId" : {
          "type" : "string",
          "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
          "minLength" : 0,
          "maxLength" : 34
        },
        "chargeAccountCurrencyId" : {
          "type" : "string",
          "description" : "When a charge account is specified, this field indicates the currency of the charge account",
          "minLength" : 0,
          "maxLength" : 23
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "PSDCompliant" : {
          "type" : "string",
          "description" : "Defines whether the transaction is PSD (Payment Services Directive) compliant or not.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 19
        },
        "localInstrumentCode" : {
          "type" : "string",
          "description" : "List of transfer type has been mentioned locally in a record",
          "minLength" : 0,
          "maxLength" : 35
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 12
        },
        "bulkReference" : {
          "type" : "string",
          "description" : "Contains bulk master reference for the payment.",
          "minLength" : 0,
          "maxLength" : 13
        },
        "bulkTypeId" : {
          "type" : "string",
          "description" : "Identifier of the bulk update type record that holds default conditions required for Bulk Master creation. SINGLE and MULTI are two record references used by payment order application for processing payments induced through Bulk Master.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options.",
          "minLength" : 0,
          "maxLength" : 6
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "cancelRemark" : {
          "type" : "string",
          "description" : "Contains the remarks given for cancellation.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "initiationTime" : {
          "type" : "string",
          "description" : "Initiation of the payment time details",
          "minLength" : 0,
          "maxLength" : 14
        },
        "orderInitiationType" : {
          "type" : "string",
          "description" : "It indicates whether the payment was initiated by bank user, corporate or private client",
          "minLength" : 0,
          "maxLength" : 19
        },
        "beneficiaryPhoneNumber" : {
          "type" : "string",
          "description" : "Contains phone number of the beneficiary.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryEmailId" : {
          "type" : "string",
          "description" : "Contains email id of the beneficary.",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 24
        },
        "paymentRequestedForexCustomerRate" : {
          "type" : "string",
          "description" : "It indicates the customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 33
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 19
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "sourceType" : {
          "type" : "string",
          "description" : "Indicates source type to determine base amount. Possible values are BALANCE (base amount of a property), ACTIVITY ( transaction amount against an activity) or PROPERTY (this type is currently not supported)",
          "minLength" : 0,
          "maxLength" : 10
        },
        "cutOffTime" : {
          "type" : "string",
          "description" : "The Cut off time when all executions for the day are consolidated to create a trade",
          "minLength" : 0,
          "maxLength" : 10
        },
        "simulatedAt" : {
          "type" : "string",
          "description" : "Time when payment transaction was simulated",
          "minLength" : 0,
          "maxLength" : 11
        },
        "simulationChecked" : {
          "type" : "string",
          "description" : "Indicates if simulation is performed for the payment order",
          "minLength" : 0,
          "maxLength" : 17
        },
        "lockedEventReference" : {
          "type" : "string",
          "description" : "Captures the AC.LOCKED.EVENTS id if in case the funds is available and reserved.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "simulationProduct" : {
          "type" : "string",
          "description" : "Contains the payment order product which is referred during simulation from channels.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "debtorAgent" : {
          "type" : "string",
          "description" : "Debtor agent details",
          "minLength" : 0,
          "maxLength" : 11
        },
        "messagePriority" : {
          "type" : "string",
          "description" : "Contains the priority code of the payment message",
          "minLength" : 0,
          "maxLength" : 15
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "intermediaryFiBicCode" : {
          "type" : "string",
          "description" : "BIC code of Intermediary Financial institution",
          "minLength" : 0,
          "maxLength" : 21
        },
        "intermediaryFiRoutingNo" : {
          "type" : "string",
          "description" : "Routing number of Intermediary Financial institution",
          "minLength" : 0,
          "maxLength" : 23
        },
        "creditorName" : {
          "type" : "string",
          "description" : "Name or short title of the credit account",
          "minLength" : 0,
          "maxLength" : 12
        },
        "forexDealId" : {
          "type" : "string",
          "description" : "The  FX deal reference number. ",
          "minLength" : 0,
          "maxLength" : 11
        },
        "internalStatus" : {
          "type" : "string",
          "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "PaymentOrderResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrderResponseBody"
        }
      },
      "description" : "PaymentOrderResponse"
    },
    "PaymentOrderResponseBody" : {
      "type" : "object",
      "properties" : {
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 65
              }
            }
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Additional Information provided to add context",
          "items" : {
            "type" : "object",
            "properties" : {
              "additionalInformation" : {
                "type" : "string",
                "description" : "Additional Information provided to add context",
                "minLength" : 0,
                "maxLength" : 65
              }
            }
          }
        },
        "remittanceInformations" : {
          "type" : "array",
          "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
          "items" : {
            "type" : "object",
            "properties" : {
              "remittanceInformation" : {
                "type" : "string",
                "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
                "minLength" : 0,
                "maxLength" : 100
              }
            }
          }
        },
        "signatories" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "type" : "object",
            "properties" : {
              "signatory" : {
                "type" : "string",
                "description" : "The authorised signatories for the payments can be specified here. More applicable in case of corporate payments where multiple signatories are required to sign a payment instruction",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "invoiceReferences" : {
          "type" : "array",
          "description" : "It provides the reference of the invoice ",
          "items" : {
            "type" : "object",
            "properties" : {
              "invoiceReference" : {
                "type" : "string",
                "description" : "It provides the reference of the invoice ",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 20
              },
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 50
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 14
              },
              "chargeAmount" : {
                "type" : "number",
                "description" : "Retrieves the Charge Amount after redeem",
                "minimum" : 0,
                "maximum" : 19
              },
              "chargeAccountCurrencyAmount" : {
                "type" : "string",
                "description" : "Holds the charge to be applied for the corresponding charge type for the order in the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "reasons" : {
          "type" : "array",
          "description" : "Contains the reason for the creation of the Mandate",
          "items" : {
            "type" : "object",
            "properties" : {
              "reason" : {
                "type" : "string",
                "description" : "Contains the reason for the creation of the Mandate",
                "minLength" : 0,
                "maxLength" : 6
              }
            }
          }
        },
        "accountWithInstitutionAddresses" : {
          "type" : "array",
          "description" : "Contains the additional address lines of the account with institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithInstitutionAddress" : {
                "type" : "string",
                "description" : "Contains the additional address lines of the account with institution.",
                "minLength" : 0,
                "maxLength" : 100
              }
            }
          }
        },
        "orderingPostAddrLine" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "debtorAddress" : {
                "type" : "string",
                "description" : "Debtor address details",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "contextNames" : {
          "type" : "array",
          "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "contextValues" : {
          "type" : "array",
          "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "messageType" : {
          "type" : "array",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "incomingMessageType" : {
                "type" : "string",
                "description" : "Indicates the supported message type to be received from the clearing house or the direct participant.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 13
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 0,
          "maxLength" : 19
        },
        "creditAccountIBAN" : {
          "type" : "string",
          "description" : "Indicates the IBAN of the credit account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 140
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount",
          "minimum" : 0,
          "maximum" : 19
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "treasuryRate" : {
          "type" : "string",
          "description" : "The Treasury rate for the conversion between payment currency and the ordering currency",
          "minLength" : 0,
          "maxLength" : 12
        },
        "forexSpread" : {
          "type" : "string",
          "description" : "The spread that is applied to the published internal exchange rates to derive the final exchange rate or the customer rate for the transaction for currency conversion between ordering currency and payment currency",
          "minLength" : 0,
          "maxLength" : 12
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 29
        },
        "orderingPortfolio" : {
          "type" : "string",
          "description" : "Indicates the portfolio id for the debit side if the account belongs to a specific portfolio",
          "minLength" : 0,
          "maxLength" : 18
        },
        "creditPortfolio" : {
          "type" : "string",
          "description" : "Indicates the portfolio id for the credit side if the account belongs to a specific portfolio",
          "minLength" : 0,
          "maxLength" : 18
        },
        "orderingReference" : {
          "type" : "string",
          "description" : "The reference related to the ordering details",
          "minLength" : 0,
          "maxLength" : 18
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 17
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 34
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 70
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 27
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "clearingChannel" : {
          "type" : "string",
          "description" : "Indicates the clearing channel for the payment in the ISO format of the Clearing System Identifiers",
          "minLength" : 0,
          "maxLength" : 35
        },
        "structuredCreditorReference" : {
          "type" : "string",
          "description" : "Contains description of the credit account reference",
          "minLength" : 0,
          "maxLength" : 65
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountWithBankIBAN" : {
          "type" : "string",
          "description" : "This is the IBAN of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requiredCreditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The credit value date i.e. tentative date on which the payment system will process the payment"
        },
        "purpose" : {
          "type" : "string",
          "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
          "minLength" : 0,
          "maxLength" : 65
        },
        "structuredCommunicationCode" : {
          "type" : "string",
          "description" : "Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)",
          "minLength" : 0,
          "maxLength" : 35
        },
        "structuredIssuer" : {
          "type" : "string",
          "description" : "Entity that assigns the identification",
          "minLength" : 0,
          "maxLength" : 65
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "instructionIdReference" : {
          "type" : "string",
          "description" : "Indicates the SEPA purpose of the SEPA Payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "termsAndConditions" : {
          "type" : "string",
          "description" : "Specifies the terms and conditions in the text format for the payment instruction, if any.",
          "minLength" : 0,
          "maxLength" : 120
        },
        "indicativeRate" : {
          "type" : "string",
          "description" : "The indicative rate at the time of submitting a payment initiation request. Actual rate with which the payment will be processed will be calculated/ fetched during payment processing. ",
          "minLength" : 0,
          "maxLength" : 14
        },
        "chargeAccountId" : {
          "type" : "string",
          "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
          "minLength" : 0,
          "maxLength" : 34
        },
        "chargeAccountCurrencyId" : {
          "type" : "string",
          "description" : "When a charge account is specified, this field indicates the currency of the charge account",
          "minLength" : 0,
          "maxLength" : 23
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "PSDCompliant" : {
          "type" : "string",
          "description" : "Defines whether the transaction is PSD (Payment Services Directive) compliant or not.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 19
        },
        "localInstrumentCode" : {
          "type" : "string",
          "description" : "List of transfer type has been mentioned locally in a record",
          "minLength" : 0,
          "maxLength" : 35
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 12
        },
        "bulkReference" : {
          "type" : "string",
          "description" : "Contains bulk master reference for the payment.",
          "minLength" : 0,
          "maxLength" : 13
        },
        "bulkTypeId" : {
          "type" : "string",
          "description" : "Identifier of the bulk update type record that holds default conditions required for Bulk Master creation. SINGLE and MULTI are two record references used by payment order application for processing payments induced through Bulk Master.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options.",
          "minLength" : 0,
          "maxLength" : 6
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "cancelRemark" : {
          "type" : "string",
          "description" : "Contains the remarks given for cancellation.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "initiationTime" : {
          "type" : "string",
          "description" : "Initiation of the payment time details",
          "minLength" : 0,
          "maxLength" : 14
        },
        "orderInitiationType" : {
          "type" : "string",
          "description" : "It indicates whether the payment was initiated by bank user, corporate or private client",
          "minLength" : 0,
          "maxLength" : 19
        },
        "beneficiaryPhoneNumber" : {
          "type" : "string",
          "description" : "Contains phone number of the beneficiary.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryEmailId" : {
          "type" : "string",
          "description" : "Contains email id of the beneficary.",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 24
        },
        "paymentRequestedForexCustomerRate" : {
          "type" : "string",
          "description" : "It indicates the customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 33
        },
        "accountType" : {
          "type" : "string",
          "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "requestedAmount" : {
          "type" : "string",
          "description" : "Requested amount for funds authorisation",
          "minLength" : 0,
          "maxLength" : 19
        },
        "requestedCurrency" : {
          "type" : "string",
          "description" : "The currency the amount is requested in.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "preAuthorizationReference" : {
          "type" : "string",
          "description" : "Contains the pre authorization reference for manually authorized funds.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "sourceType" : {
          "type" : "string",
          "description" : "Indicates source type to determine base amount. Possible values are BALANCE (base amount of a property), ACTIVITY ( transaction amount against an activity) or PROPERTY (this type is currently not supported)",
          "minLength" : 0,
          "maxLength" : 10
        },
        "cutOffTime" : {
          "type" : "string",
          "description" : "The Cut off time when all executions for the day are consolidated to create a trade",
          "minLength" : 0,
          "maxLength" : 10
        },
        "simulatedAt" : {
          "type" : "string",
          "description" : "Time when payment transaction was simulated",
          "minLength" : 0,
          "maxLength" : 11
        },
        "simulationChecked" : {
          "type" : "string",
          "description" : "Indicates if simulation is performed for the payment order",
          "minLength" : 0,
          "maxLength" : 17
        },
        "lockedEventReference" : {
          "type" : "string",
          "description" : "Captures the AC.LOCKED.EVENTS id if in case the funds is available and reserved.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "simulationProduct" : {
          "type" : "string",
          "description" : "Contains the payment order product which is referred during simulation from channels.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "debtorAgent" : {
          "type" : "string",
          "description" : "Debtor agent details",
          "minLength" : 0,
          "maxLength" : 11
        },
        "messagePriority" : {
          "type" : "string",
          "description" : "Contains the priority code of the payment message",
          "minLength" : 0,
          "maxLength" : 15
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "intermediaryFiBicCode" : {
          "type" : "string",
          "description" : "BIC code of Intermediary Financial institution",
          "minLength" : 0,
          "maxLength" : 21
        },
        "intermediaryFiRoutingNo" : {
          "type" : "string",
          "description" : "Routing number of Intermediary Financial institution",
          "minLength" : 0,
          "maxLength" : 23
        },
        "creditorName" : {
          "type" : "string",
          "description" : "Name or short title of the credit account",
          "minLength" : 0,
          "maxLength" : 12
        },
        "forexDealId" : {
          "type" : "string",
          "description" : "The  FX deal reference number. ",
          "minLength" : 0,
          "maxLength" : 11
        },
        "internalStatus" : {
          "type" : "string",
          "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "PaymentOrderDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "PaymentOrderDelete"
    },
    "Transparency" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransparencyBody"
        }
      },
      "description" : "Transparency"
    },
    "TransparencyBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "accountWithInstitutionAddresses" : {
          "type" : "array",
          "description" : "Contains the additional address lines of the account with institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithInstitutionAddress" : {
                "type" : "string",
                "description" : "Contains the additional address lines of the account with institution.",
                "minLength" : 0,
                "maxLength" : 29
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 9
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 10
              },
              "chargeAmount" : {
                "type" : "string",
                "description" : "Retrieves the Charge Amount after redeem",
                "minLength" : 0,
                "maxLength" : 12
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 14
              },
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 11
              },
              "chargeAccountId" : {
                "type" : "string",
                "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
                "minLength" : 0,
                "maxLength" : 15
              },
              "chargeAccountCurrencyId" : {
                "type" : "string",
                "description" : "When a charge account is specified, this field indicates the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 23
              }
            }
          }
        },
        "contextNames" : {
          "type" : "array",
          "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "contextValues" : {
          "type" : "array",
          "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "messageType" : {
          "type" : "array",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "incomingMessageType" : {
                "type" : "string",
                "description" : "Indicates the supported message type to be received from the clearing house or the direct participant.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "orderInitiationType" : {
          "type" : "string",
          "description" : "It indicates whether the payment was initiated by bank user, corporate or private client",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 13
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 21
        },
        "debitAccount" : {
          "type" : "string",
          "description" : " Identifier of the debitAccounts.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 15
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 15
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryPhoneNumber" : {
          "type" : "string",
          "description" : "Contains phone number of the beneficiary.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryEmailId" : {
          "type" : "string",
          "description" : "Contains email id of the beneficary.",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 27
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 24
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "paymentAmount" : {
          "type" : "number",
          "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
          "minimum" : 0,
          "maximum" : 13
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 12
        },
        "paymentRequestedForexCustomerRate" : {
          "type" : "string",
          "description" : "It indicates the customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 33
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 16
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 15
        },
        "simulatedAt" : {
          "type" : "string",
          "description" : "Time when payment transaction was simulated",
          "minLength" : 0,
          "maxLength" : 11
        },
        "simulationChecked" : {
          "type" : "string",
          "description" : "Indicates if simulation is performed for the payment order",
          "minLength" : 0,
          "maxLength" : 17
        },
        "lockedEventReference" : {
          "type" : "string",
          "description" : "Captures the AC.LOCKED.EVENTS id if in case the funds is available and reserved.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "simulationProduct" : {
          "type" : "string",
          "description" : "Contains the payment order product which is referred during simulation from channels.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 18
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "debtorAgent" : {
          "type" : "string",
          "description" : "Debtor agent details",
          "minLength" : 0,
          "maxLength" : 11
        },
        "messagePriority" : {
          "type" : "string",
          "description" : "Contains the priority code of the payment message",
          "minLength" : 0,
          "maxLength" : 15
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 29
        }
      }
    },
    "TransparencyResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransparencyResponseBody"
        }
      },
      "description" : "TransparencyResponse"
    },
    "TransparencyResponseBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "accountWithInstitutionAddresses" : {
          "type" : "array",
          "description" : "Contains the additional address lines of the account with institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountWithInstitutionAddress" : {
                "type" : "string",
                "description" : "Contains the additional address lines of the account with institution.",
                "minLength" : 0,
                "maxLength" : 29
              }
            }
          }
        },
        "narratives" : {
          "type" : "array",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
          "items" : {
            "type" : "object",
            "properties" : {
              "narrative" : {
                "type" : "string",
                "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                "minLength" : 0,
                "maxLength" : 9
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Defines the charges collected for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeType" : {
                "type" : "string",
                "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                "minLength" : 0,
                "maxLength" : 10
              },
              "chargeAmount" : {
                "type" : "string",
                "description" : "Retrieves the Charge Amount after redeem",
                "minLength" : 0,
                "maxLength" : 12
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted",
                "minLength" : 0,
                "maxLength" : 14
              },
              "chargeName" : {
                "type" : "string",
                "description" : "The description of the charge to be taken for payment",
                "minLength" : 0,
                "maxLength" : 11
              },
              "chargeAccountId" : {
                "type" : "string",
                "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
                "minLength" : 0,
                "maxLength" : 15
              },
              "chargeAccountCurrencyId" : {
                "type" : "string",
                "description" : "When a charge account is specified, this field indicates the currency of the charge account",
                "minLength" : 0,
                "maxLength" : 23
              }
            }
          }
        },
        "contextNames" : {
          "type" : "array",
          "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextName" : {
                "type" : "string",
                "description" : "Field name returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "contextValues" : {
          "type" : "array",
          "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
          "items" : {
            "type" : "object",
            "properties" : {
              "contextValue" : {
                "type" : "string",
                "description" : "Field value returned by the payment engine (TPH) for information or further processing.",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "messageType" : {
          "type" : "array",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "incomingMessageType" : {
                "type" : "string",
                "description" : "Indicates the supported message type to be received from the clearing house or the direct participant.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "orderInitiationType" : {
          "type" : "string",
          "description" : "It indicates whether the payment was initiated by bank user, corporate or private client",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryId" : {
          "type" : "string",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "minLength" : 0,
          "maxLength" : 13
        },
        "paymentOrderProductId" : {
          "type" : "string",
          "description" : "Indicates the payment order product for which payment is initiated",
          "minLength" : 0,
          "maxLength" : 21
        },
        "debitAccount" : {
          "type" : "string",
          "description" : " Identifier of the debitAccounts.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 15
        },
        "beneficiaryName" : {
          "type" : "string",
          "description" : "Short title or short name of the beneficiary",
          "minLength" : 0,
          "maxLength" : 15
        },
        "beneficiaryCountryCode" : {
          "type" : "string",
          "description" : "Creditor country code details",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryPhoneNumber" : {
          "type" : "string",
          "description" : "Contains phone number of the beneficiary.",
          "minLength" : 0,
          "maxLength" : 22
        },
        "beneficiaryEmailId" : {
          "type" : "string",
          "description" : "Contains email id of the beneficary.",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankBIC" : {
          "type" : "string",
          "description" : "This is the BIC code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 18
        },
        "accountWithBankClearingCode" : {
          "type" : "string",
          "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
          "minLength" : 0,
          "maxLength" : 27
        },
        "accountWithBankCountryId" : {
          "type" : "string",
          "description" : "The country of the beneficiary institution i.e. where the final creditor holds an account",
          "minLength" : 0,
          "maxLength" : 24
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "paymentAmount" : {
          "type" : "number",
          "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
          "minimum" : 0,
          "maximum" : 13
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
        },
        "chargeBearer" : {
          "type" : "string",
          "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "minLength" : 0,
          "maxLength" : 12
        },
        "paymentRequestedForexCustomerRate" : {
          "type" : "string",
          "description" : "It indicates the customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 33
        },
        "totalDebitAmount" : {
          "type" : "string",
          "description" : "The total debit amount including the charges associated for the payment",
          "minLength" : 0,
          "maxLength" : 16
        },
        "creditValueDate" : {
          "type" : "string",
          "description" : "Reference quoted by the credit account for a payment",
          "minLength" : 0,
          "maxLength" : 15
        },
        "simulatedAt" : {
          "type" : "string",
          "description" : "Time when payment transaction was simulated",
          "minLength" : 0,
          "maxLength" : 11
        },
        "simulationChecked" : {
          "type" : "string",
          "description" : "Indicates if simulation is performed for the payment order",
          "minLength" : 0,
          "maxLength" : 17
        },
        "lockedEventReference" : {
          "type" : "string",
          "description" : "Captures the AC.LOCKED.EVENTS id if in case the funds is available and reserved.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "simulationProduct" : {
          "type" : "string",
          "description" : "Contains the payment order product which is referred during simulation from channels.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "orderingCustomerId" : {
          "type" : "string",
          "description" : "Indicates the customer id for the ordering customer",
          "minLength" : 0,
          "maxLength" : 18
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 17
        },
        "debtorAgent" : {
          "type" : "string",
          "description" : "Debtor agent details",
          "minLength" : 0,
          "maxLength" : 11
        },
        "messagePriority" : {
          "type" : "string",
          "description" : "Contains the priority code of the payment message",
          "minLength" : 0,
          "maxLength" : 15
        },
        "orderingCustomerName" : {
          "type" : "string",
          "description" : "Indicates the name of Ordering Customer",
          "minLength" : 0,
          "maxLength" : 20
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "orderingPaymentFxCustomerRate" : {
          "type" : "string",
          "description" : "The customer rate for the conversion between payment currency and ordering currency",
          "minLength" : 0,
          "maxLength" : 29
        }
      }
    },
    "PaymentOrdersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentOrdersResponseBody"
        }
      },
      "description" : "PaymentOrdersResponse"
    },
    "PaymentOrdersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "debits" : {
            "type" : "array",
            "description" : "Sum of all the debit transactions",
            "items" : {
              "type" : "object",
              "properties" : {
                "debitAccountId" : {
                  "type" : "string",
                  "description" : "Indicates the debit account number of the payment or transaction.",
                  "maxLength" : 34
                },
                "debitAccountIBAN" : {
                  "type" : "string",
                  "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
                  "maxLength" : 35
                },
                "debitCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the debit account. For example: USD, EUR etc.",
                  "maxLength" : 3
                },
                "debitValueDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Date on which the amount will be debited for settlement"
                },
                "totalDebitAmount" : {
                  "type" : "number",
                  "description" : "The total debit amount including the charges associated for the payment",
                  "maximum" : 19
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                }
              }
            }
          },
          "credits" : {
            "type" : "array",
            "description" : "Sum of all the credit transactions",
            "items" : {
              "type" : "object",
              "properties" : {
                "creditAccountId" : {
                  "type" : "string",
                  "description" : "Credit account identifier of the payment or transaction",
                  "maxLength" : 19
                },
                "creditAccountIBAN" : {
                  "type" : "string",
                  "description" : "Indicates the IBAN of the credit account",
                  "maxLength" : 35
                },
                "requiredCreditValueDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "The credit value date i.e. tentative date on which the payment system will process the payment"
                },
                "creditValueDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Reference quoted by the credit account for a payment"
                },
                "creditAccountName" : {
                  "type" : "string",
                  "description" : "Account name details of the creditor"
                }
              }
            }
          },
          "narratives" : {
            "type" : "array",
            "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
            "items" : {
              "type" : "object",
              "properties" : {
                "narrative" : {
                  "type" : "string",
                  "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
                  "maxLength" : 65
                }
              }
            }
          },
          "additionalInformations" : {
            "type" : "array",
            "description" : "Additional Information provided to add context",
            "items" : {
              "type" : "object",
              "properties" : {
                "additionalInformation" : {
                  "type" : "string",
                  "description" : "Additional Information provided to add context",
                  "maxLength" : 65
                }
              }
            }
          },
          "remittanceInformations" : {
            "type" : "array",
            "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
            "items" : {
              "type" : "object",
              "properties" : {
                "remittanceInformation" : {
                  "type" : "string",
                  "description" : "Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.",
                  "maxLength" : 140
                }
              }
            }
          },
          "beneficiaries" : {
            "type" : "array",
            "description" : "Beneficiary information",
            "items" : {
              "type" : "object",
              "properties" : {
                "beneficiaryId" : {
                  "type" : "string",
                  "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
                  "maxLength" : 17
                },
                "beneficiaryAccountId" : {
                  "type" : "string",
                  "description" : "Unique account identifier of the beneficiary account number.",
                  "maxLength" : 34
                },
                "beneficiaryBIC" : {
                  "type" : "string",
                  "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
                  "maxLength" : 35
                },
                "beneficiaryName" : {
                  "type" : "string",
                  "description" : "Short title or short name of the beneficiary",
                  "maxLength" : 71
                },
                "beneficiaryCountryCode" : {
                  "type" : "string",
                  "description" : "Creditor country code details",
                  "maxLength" : 2
                },
                "beneficiaryIBAN" : {
                  "type" : "string",
                  "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
                  "maxLength" : 35
                },
                "accountWithBankIBAN" : {
                  "type" : "string",
                  "description" : "This is the IBAN of the institution where beneficiary holds an account",
                  "maxLength" : 35
                }
              }
            }
          },
          "invoiceReferences" : {
            "type" : "array",
            "description" : "It provides the reference of the invoice ",
            "items" : {
              "type" : "object",
              "properties" : {
                "invoiceReference" : {
                  "type" : "string",
                  "description" : "It provides the reference of the invoice ",
                  "maxLength" : 35
                }
              }
            }
          },
          "charges" : {
            "type" : "array",
            "description" : "Defines the charges collected for a transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "chargeAccountId" : {
                  "type" : "string",
                  "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account",
                  "maxLength" : 34
                },
                "chargeAccountCurrencyId" : {
                  "type" : "string",
                  "description" : "When a charge account is specified, this field indicates the currency of the charge account",
                  "maxLength" : 3
                },
                "chargeType" : {
                  "type" : "string",
                  "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                  "maxLength" : 20
                },
                "chargeName" : {
                  "type" : "string",
                  "description" : "The description of the charge to be taken for payment",
                  "maxLength" : 50
                },
                "chargeCurrencyId" : {
                  "type" : "string",
                  "description" : "Specifies the currency of the charge amount. Allowed only when a charge amount is specified ",
                  "maxLength" : 3
                },
                "chargeAmount" : {
                  "type" : "string",
                  "description" : "Retrieves the Charge Amount after redeem",
                  "maxLength" : 19
                },
                "chargeAccountCurrencyAmount" : {
                  "type" : "number",
                  "description" : "Holds the charge to be applied for the corresponding charge type for the order in the currency of the charge account",
                  "maximum" : 19
                }
              }
            }
          },
          "paymentOrderId" : {
            "type" : "string",
            "description" : "The unique reference number of payment",
            "maxLength" : 35
          },
          "paymentOrderProductId" : {
            "type" : "string",
            "description" : "Indicates the payment order product for which payment is initiated",
            "maxLength" : 35
          },
          "orderingCustomerId" : {
            "type" : "string",
            "description" : "Indicates the customer id for the ordering customer",
            "maxLength" : 35
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer",
            "maxLength" : 140
          },
          "paymentCurrencyId" : {
            "type" : "string",
            "description" : "The currency of payment.",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 19
          },
          "executionDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which the transaction or payment gets processed, i.e. the processing date of the transaction."
          },
          "treasuryRate" : {
            "type" : "string",
            "description" : "The Treasury rate for the conversion between payment currency and the ordering currency",
            "maxLength" : 11
          },
          "forexSpread" : {
            "type" : "string",
            "description" : "The spread that is applied to the published internal exchange rates to derive the final exchange rate or the customer rate for the transaction for currency conversion between ordering currency and payment currency",
            "maxLength" : 12
          },
          "forexCustomerRate" : {
            "type" : "string",
            "description" : "The exchange rate that is actually applied for currency conversion between ordering currency and payment currency in case of transactions involving FX conversion. ",
            "maxLength" : 11
          },
          "orderingPortfolio" : {
            "type" : "string",
            "description" : "Indicates the portfolio id for the debit side if the account belongs to a specific portfolio",
            "maxLength" : 18
          },
          "creditPortfolio" : {
            "type" : "string",
            "description" : "Indicates the portfolio id for the credit side if the account belongs to a specific portfolio",
            "maxLength" : 18
          },
          "orderingReference" : {
            "type" : "string",
            "description" : "The reference related to the ordering details",
            "maxLength" : 18
          },
          "chargeBearer" : {
            "type" : "string",
            "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 35
          },
          "accountWithBankBIC" : {
            "type" : "string",
            "description" : "This is the BIC code of the institution where beneficiary holds an account",
            "maxLength" : 27
          },
          "beneficiaryBankClearingCode" : {
            "type" : "string",
            "description" : "Clearing code or sort code of the beneficiary bank",
            "maxLength" : 35
          },
          "accountWithBankClearingCode" : {
            "type" : "string",
            "description" : "This is the national clearing code or sort code of the institution where beneficiary holds an account",
            "maxLength" : 35
          },
          "clearingChannel" : {
            "type" : "string",
            "description" : "Indicates the clearing channel for the payment in the ISO format of the Clearing System Identifiers",
            "maxLength" : 35
          },
          "structuredCreditorReference" : {
            "type" : "string",
            "description" : "Contains description of the credit account reference",
            "maxLength" : 65
          },
          "signatory" : {
            "type" : "string",
            "description" : "The authorised signatories for the payments can be specified here. More applicable in case of corporate payments where multiple signatories are required to sign a payment instruction",
            "maxLength" : 35
          },
          "purpose" : {
            "type" : "string",
            "description" : "Purpose identifier of the payment or transaction, for SEPA payments in general.",
            "maxLength" : 65
          },
          "structuredCommunicationCode" : {
            "type" : "string",
            "description" : "Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)",
            "maxLength" : 35
          },
          "structuredIssuer" : {
            "type" : "string",
            "description" : "Entity that assigns the identification",
            "maxLength" : 65
          },
          "endToEndReference" : {
            "type" : "string",
            "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
            "maxLength" : 35
          },
          "instructionIdReference" : {
            "type" : "string",
            "description" : "Indicates the SEPA purpose of the SEPA Payment",
            "maxLength" : 35
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "Specifies the terms and conditions in the text format for the payment instruction, if any.",
            "maxLength" : 120
          },
          "paymentStatus" : {
            "type" : "string",
            "description" : "Describes the current status of the payment order in the payment system",
            "maxLength" : 35
          },
          "currentStatus" : {
            "type" : "string",
            "description" : "This indicates the current status of payment order",
            "maxLength" : 65
          },
          "internalStatus" : {
            "type" : "string",
            "description" : "This indicates a full description of payment purpose code. i.e. purpose of the instruction based on a set of pre-defined categories.",
            "maxLength" : 12
          },
          "systemId" : {
            "type" : "string",
            "description" : "The system application identifier that could be used as entry reference or used as prefix in unique transaction identifiers",
            "maxLength" : 35
          },
          "indicativeRate" : {
            "type" : "string",
            "description" : "The indicative rate at the time of submitting a payment initiation request. Actual rate with which the payment will be processed will be calculated/ fetched during payment processing. ",
            "maxLength" : 11
          },
          "PSDCompliant" : {
            "type" : "string",
            "description" : "Defines whether the transaction is PSD (Payment Services Directive) compliant or not.",
            "maxLength" : 35
          },
          "GPIStatus" : {
            "type" : "string",
            "description" : "This field to store the GPI status as received in gpi confirmation tracker",
            "maxLength" : 10
          },
          "GPICreditValueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Field store the date and time when the credit confirmation received"
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary",
            "maxLength" : 35
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 6
          },
          "rejectReasonCode" : {
            "type" : "string",
            "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
            "maxLength" : 35
          },
          "bulkReference" : {
            "type" : "string",
            "description" : "Contains bulk master reference for the payment.",
            "maxLength" : 125
          },
          "recordStatus" : {
            "type" : "string",
            "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
            "maxLength" : 6
          },
          "cancelReason" : {
            "type" : "string",
            "description" : "Contains the reason for which the payment is cancelled.",
            "maxLength" : 70
          },
          "cancelRemark" : {
            "type" : "string",
            "description" : "Contains the remarks given for cancellation.",
            "maxLength" : 70
          },
          "paymentSource" : {
            "type" : "string",
            "description" : "Indicates the source from where the payment is originated",
            "maxLength" : 10
          }
        }
      }
    }
  }
}