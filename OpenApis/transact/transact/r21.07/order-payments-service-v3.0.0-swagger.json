{
  "swagger" : "2.0",
  "info" : {
    "description" : "Temenos Payments Hub (TPH) is a Temenos Payments Application that executes payment orders that are received from front office or back office applications. TPH processes the orders until they are being account posted or cleared with an external clearing. The APIs listed in this page can be used by online banking channels or bank host system to enquire on the payments that were processed or under processing. APIs also offer a limited set of maintenance of the payments, such as for example Recalling the payment.",
    "version" : "v3.0.0",
    "title" : "Payment Execution"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v3.0.0/",
  "tags" : [ ],
  "schemes" : [ "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/order/payments/status" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment details based on status",
        "description" : "Retrieves the payment details based on status. status can be \"completed\", \"excludingCompleted\", \"repair\" or \"all\"",
        "operationId" : "getPaymentsStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Indicates the business date from when the balance reservation event is active.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the early maturity request",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "debitCustomerId",
          "in" : "query",
          "description" : "Debtor customer details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCustomerId",
          "in" : "query",
          "description" : "Creditor customer id details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountId",
          "in" : "query",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountId",
          "in" : "query",
          "description" : "Credit account identifier of the payment or transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "outputChannel",
          "in" : "query",
          "description" : "Contains the channel that will be used to send the outward payment message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentSource",
          "in" : "query",
          "description" : "Indicates the source from where the payment is originated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fileSendersReference",
          "in" : "query",
          "description" : "Indicates the sender reference that comes from the inward payment file",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fundsTransferId",
          "in" : "query",
          "description" : "Identifier of the Funds Transfer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusCode",
          "in" : "query",
          "description" : "Status code, as defined by the institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "Indicates the business date until when the balance reservation event is active.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beneficiaryId",
          "in" : "query",
          "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountId",
          "in" : "query",
          "description" : "Unique account identifier of the beneficiary account number.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionAmount",
          "in" : "query",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageType",
          "in" : "query",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "processingDate",
          "in" : "query",
          "description" : "The date when payment instruction is processed in system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerReference",
          "in" : "query",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitCurrency",
          "in" : "query",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitAccountCompany",
          "in" : "query",
          "description" : "Contains the company of the debit party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditCurrency",
          "in" : "query",
          "description" : "Currency of the account which funds will be transferred to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditAccountCompany",
          "in" : "query",
          "description" : "Contains the company of the credit party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partySendersReferenceIncoming",
          "in" : "query",
          "description" : "Debtor payment reference details of incoming",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sendersCorrespondentAddress",
          "in" : "query",
          "description" : "Contains additional address lines of the sender correspondent institution.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "receiversCorrespondentAddress",
          "in" : "query",
          "description" : "Contains additional address lines of the receiver correspondent institution.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulkReference",
          "in" : "query",
          "description" : "Contains bulk master reference for the payment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerOrBankTransfer",
          "in" : "query",
          "description" : "Indicates if the payment was initiated by Customer or the financial institution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creditValueDate",
          "in" : "query",
          "description" : "Reference quoted by the credit account for a payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "debitValueDate",
          "in" : "query",
          "description" : "Date on which the amount will be debited for settlement",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementTransactionIndicator",
          "in" : "query",
          "description" : "Indicates whether the payment is settlement transaction or not",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementClaimId",
          "in" : "query",
          "description" : "Indicates the settlement claim reference of the payment transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entryDateTime",
          "in" : "query",
          "description" : "Contains the payment creation time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "approvedDateTime",
          "in" : "query",
          "description" : "Contains the time when payment got approved",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clearingNatureCode",
          "in" : "query",
          "description" : "Contains the nature of the payment transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentsStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentsStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/fees" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the payment fee and tax ",
        "description" : "Retrieves the payment fee and tax for both the debit and credit leg of the payment. Details can be retrieved for a specific payment or all payments in the system.",
        "operationId" : "getPaymentFeesAndCharges",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentFeesAndChargesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentFeesAndChargesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/transactionLog" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment audit trail",
        "description" : "Retrieves audit trail which contains information on the lifecycle of a payment. Details can be retrieved for a specific payment or for all payments in the system.",
        "operationId" : "getAllPaymentsTransactionLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllPaymentsTransactionLogsResponse",
            "schema" : {
              "$ref" : "#/definitions/AllPaymentsTransactionLogsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/bankInitiations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a recall in response to a bank operator's request",
        "description" : "Create a recall in response to a bank operator's request for a payment that has been previously sent out. Recall can be initoated for a specific payment reference and requires reason (code) for recall.",
        "operationId" : "createBankInitiatedPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BankInitiatedPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BankInitiatedPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/BankInitiatedPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/customerInitiations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a recall in response to a customer's request",
        "description" : "Create a recall in response to a customer's request for a payment that has been previously sent out. Recall can be initoated for a specific payment reference and requires reason (code) for recall.",
        "operationId" : "createCustomerInitiatedPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerInitiatedPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerInitiatedPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerInitiatedPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/recalls/{recallId}/responses" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Respond to a request for recall",
        "description" : "Respond to a recall request for a payment that was made previously.  Positive (Acceptance - Willing to Return Funds) or  Negative (Rejection - Unwilling to Return Funds) responses are acceptable, but they must be accompanied by a reason (code).",
        "operationId" : "updateResponseToPaymentRecall",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "recallId",
          "in" : "path",
          "description" : "Defines the ID to identify the payment which has to be recalled",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResponseToPaymentRecall"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ResponseToPaymentRecallResponse",
            "schema" : {
              "$ref" : "#/definitions/ResponseToPaymentRecallResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/logs/sentMessages/{sentMessageId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the status of a received acknowledgement",
        "description" : "Update the payment with the information from the payment acknowledgement. It is possible to update information such as acknowledgement status, reason(in the case of a negative acknowledgement), and the time stamp when the acknowledgement was received.",
        "operationId" : "updatePaymentSentMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sentMessageId",
          "in" : "path",
          "description" : "Contains the sent message reference as generated by the system",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentSentMessage"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSentMessageResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSentMessageResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/order/payments/reasons" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieve the clearing reason codes to place in the recall request",
        "description" : "When a customer to initiates a recall, list of recall reason codes to be displayed so that the appropriate one is chosen and place in the recall request. Use this API to fetch the list of reason codes and display to the customer.",
        "operationId" : "getPaymentCancelReasonCode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "optionSelected",
          "in" : "query",
          "description" : "The option selected from the total number of options available",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionType",
          "in" : "query",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "receiver",
          "in" : "query",
          "description" : "Identifies the receiver of the message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clearingId",
          "in" : "query",
          "description" : "Clearing channel specific details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentCancelReasonCodeResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentCancelReasonCodeResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "PaymentsStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentsStatusResponseBody"
        }
      },
      "description" : "PaymentsStatusResponse"
    },
    "PaymentsStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 5
          },
          "debitAccountId" : {
            "type" : "string",
            "description" : "Indicates the debit account number of the payment or transaction.",
            "maxLength" : 25
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction",
            "maxLength" : 25
          },
          "transactionCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
            "maxLength" : 10
          },
          "transactionAmount" : {
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
            "maximum" : 10
          },
          "messageType" : {
            "type" : "string",
            "description" : "Defines the type of swift messages that are sent or received for a transaction",
            "maxLength" : 10
          },
          "fileSendersReference" : {
            "type" : "string",
            "description" : "Indicates the sender reference that comes from the inward payment file",
            "maxLength" : 10
          },
          "chargeBearer" : {
            "type" : "string",
            "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 10
          },
          "statusCode" : {
            "type" : "string",
            "description" : "Status code, as defined by the institution",
            "maxLength" : 5
          },
          "description" : {
            "type" : "string",
            "description" : "Contains the description of purpose of the payment.",
            "maxLength" : 20
          },
          "processingDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when payment instruction is processed in system."
          },
          "outputChannel" : {
            "type" : "string",
            "description" : "Contains the channel that will be used to send the outward payment message",
            "maxLength" : 5
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
            "maxLength" : 15
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
            "maxLength" : 15
          },
          "beneficiaryName" : {
            "type" : "string",
            "description" : "Short title or short name of the beneficiary",
            "maxLength" : 20
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number.",
            "maxLength" : 10
          },
          "beneficiaryCountryId" : {
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU",
            "maxLength" : 10
          },
          "beneficiaryAddressCity" : {
            "type" : "string",
            "description" : "City of the beneficiary account. For example: London, Dallas etc.",
            "maxLength" : 10
          },
          "beneficiaryAddress" : {
            "type" : "string",
            "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
            "maxLength" : 20
          },
          "orderingCustomerName" : {
            "type" : "string",
            "description" : "Indicates the name of Ordering Customer",
            "maxLength" : 10
          },
          "orderingAccount" : {
            "type" : "string",
            "description" : "Contains the National Clearing Code (NCC) or account number of the ordering party.",
            "maxLength" : 15
          },
          "orderingPartyCountry" : {
            "type" : "string",
            "description" : "Contains the country of the ordering party",
            "maxLength" : 10
          },
          "orderingPartyCity" : {
            "type" : "string",
            "description" : "Contains the city/town of the ordering party",
            "maxLength" : 10
          },
          "orderingCustomerAddress" : {
            "type" : "string",
            "description" : "Debit account customer address details",
            "maxLength" : 20
          },
          "beneficiaryBank" : {
            "type" : "string",
            "description" : "Bank for the beneficiary",
            "maxLength" : 10
          },
          "orderingBank" : {
            "type" : "string",
            "description" : "Bank which intiates the transaction",
            "maxLength" : 10
          },
          "fundsTransferId" : {
            "type" : "string",
            "description" : "Identifier of the Funds Transfer",
            "maxLength" : 15
          },
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
            "maxLength" : 10
          },
          "creditAccountCompany" : {
            "type" : "string",
            "description" : "Contains the company of the credit party",
            "maxLength" : 10
          },
          "debitAccountCompany" : {
            "type" : "string",
            "description" : "Contains the company of the debit party",
            "maxLength" : 10
          },
          "creditCurrency" : {
            "type" : "string",
            "description" : "Currency of the account which funds will be transferred to.",
            "maxLength" : 10
          },
          "debitCurrency" : {
            "type" : "string",
            "description" : "Currency of the debit account. For example: USD, EUR etc.",
            "maxLength" : 10
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 15
          },
          "partySendersReferenceIncoming" : {
            "type" : "string",
            "description" : "Debtor payment reference details of incoming",
            "maxLength" : 15
          },
          "entryDateTime" : {
            "type" : "string",
            "description" : "Contains the payment creation time",
            "maxLength" : 10
          },
          "clearingNatureCode" : {
            "type" : "string",
            "description" : "Contains the nature of the payment transaction",
            "maxLength" : 10
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PaymentFeesAndChargesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentFeesAndChargesResponseBody"
        }
      },
      "description" : "PaymentFeesAndChargesResponse"
    },
    "PaymentFeesAndChargesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "feeType" : {
            "type" : "string",
            "description" : "Indicates the type of fee which is applied for payment instruction",
            "maxLength" : 35
          },
          "feeName" : {
            "type" : "string",
            "description" : "Indicates the description for type of fee which is applied for payment instruction",
            "maxLength" : 35
          },
          "chargeType" : {
            "type" : "string",
            "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
            "maxLength" : 1
          },
          "feeCurrency" : {
            "type" : "string",
            "description" : "Indicates the fee currency in which fee amount is applied for the payment instruction",
            "maxLength" : 3
          },
          "feeAmount" : {
            "type" : "string",
            "description" : "Indicates the fee amount which is applied for the payment instruction",
            "maxLength" : 15
          },
          "chargeCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency code of the charge account from where the fee is deducted",
            "maxLength" : 3
          },
          "chargeAmount" : {
            "type" : "string",
            "description" : "Retrieves the Charge Amount after redeem",
            "maxLength" : 15
          },
          "chargeBearer" : {
            "type" : "string",
            "description" : "Bearer of the charges of the order. For example: BEN(All transaction charges are to be borne by the beneficiary customer.), OUR(All transaction charges are to be borne by the ordering customer.), SHA(Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 1
          }
        }
      }
    },
    "AllPaymentsTransactionLogsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AllPaymentsTransactionLogsResponseBody"
        }
      },
      "description" : "AllPaymentsTransactionLogsResponse"
    },
    "AllPaymentsTransactionLogsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "string",
            "description" : "Event identifier",
            "maxLength" : 3
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name that is displayed for the event"
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Indicates the error code which is encountered during payment processing as returned by payment system ",
            "maxLength" : 10
          },
          "additionalInformation" : {
            "type" : "string",
            "description" : "Additional Information provided to add context",
            "maxLength" : 128
          },
          "dateTime" : {
            "type" : "string",
            "description" : "Contains the date and time separated by '-'",
            "maxLength" : 11
          }
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "BankInitiatedPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BankInitiatedPaymentRecallBody"
        }
      },
      "description" : "BankInitiatedPaymentRecall"
    },
    "BankInitiatedPaymentRecallBody" : {
      "type" : "object",
      "required" : [ "transactionReference" ],
      "properties" : {
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "BankInitiatedPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BankInitiatedPaymentRecallResponseBody"
        }
      },
      "description" : "BankInitiatedPaymentRecallResponse"
    },
    "BankInitiatedPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "originatingBic" : {
          "type" : "string",
          "description" : "Indicates the BIC code of the institution where the originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originatorClearingCode" : {
          "type" : "string",
          "description" : "Indicates the national clearing code or sort code where originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "applicationId" : {
          "type" : "string",
          "description" : "Contains the application id of the service that has crashed due to error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originalMessageType" : {
          "type" : "string",
          "description" : "Indicates the outgoing message type of the payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "CustomerInitiatedPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerInitiatedPaymentRecallBody"
        }
      },
      "description" : "CustomerInitiatedPaymentRecall"
    },
    "CustomerInitiatedPaymentRecallBody" : {
      "type" : "object",
      "required" : [ "transactionReference" ],
      "properties" : {
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerInitiatedPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerInitiatedPaymentRecallResponseBody"
        }
      },
      "description" : "CustomerInitiatedPaymentRecallResponse"
    },
    "CustomerInitiatedPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "receivers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "receiver" : {
                "type" : "string",
                "description" : "Identifies the receiver of the message",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "paymentDirection" : {
          "type" : "string",
          "description" : "Indicates the direction of payment i.e. incoming, outgoing, book or redirect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 1,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryBankClearingCode" : {
          "type" : "string",
          "description" : "Clearing code or sort code of the beneficiary bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccountIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the debtor account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "minLength" : 0,
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "applicationId" : {
          "type" : "string",
          "description" : "Contains the application id of the service that has crashed due to error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "messageType" : {
          "type" : "string",
          "description" : "Defines the type of swift messages that are sent or received for a transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "originalMessageType" : {
          "type" : "string",
          "description" : "Indicates the outgoing message type of the payment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "ResponseToPaymentRecall" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ResponseToPaymentRecallBody"
        }
      },
      "description" : "ResponseToPaymentRecall"
    },
    "ResponseToPaymentRecallBody" : {
      "type" : "object",
      "properties" : {
        "rejectAdditionalInfos" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rejectAdditionalInfo" : {
                "type" : "string",
                "description" : "Indicates any additional information that user wishes to supply during rejection of an inward recall",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "acceptOrReject" : {
          "type" : "string",
          "description" : "Indicates the flag to accept or reject the inward recall",
          "minLength" : 1,
          "maxLength" : 35
        },
        "acceptedReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for acceptance of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "authorisationReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoRejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "ResponseToPaymentRecallResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ResponseToPaymentRecallResponseBody"
        }
      },
      "description" : "ResponseToPaymentRecallResponse"
    },
    "ResponseToPaymentRecallResponseBody" : {
      "type" : "object",
      "properties" : {
        "receivers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "receiver" : {
                "type" : "string",
                "description" : "Identifies the receiver of the message",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "rejectAdditionalInfos" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "rejectAdditionalInfo" : {
                "type" : "string",
                "description" : "Indicates any additional information that user wishes to supply during rejection of an inward recall",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "cancellationDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "cancelRequestId" : {
                "type" : "string",
                "description" : "Indicates the reference to track the initiation of payment cancellation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "cancellationRequestDateTime" : {
                "type" : "string",
                "description" : "Indicates the date and time when the recall was generated or received",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "originatingBic" : {
          "type" : "string",
          "description" : "Indicates the BIC code of the institution where the originator holds an account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionReference" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction in the core system",
          "minLength" : 0,
          "maxLength" : 35
        },
        "endToEndReference" : {
          "type" : "string",
          "description" : "Indicates the end to end reference for the payment. This field can be provided by the person who instructs the payment and this flows through the lifecycle of the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "clearingId" : {
          "type" : "string",
          "description" : "Clearing channel specific details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionAmount" : {
          "type" : "string",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minLength" : 0,
          "maxLength" : 35
        },
        "transactionCurrency" : {
          "type" : "string",
          "description" : "Indicates the currency of the transaction. For example GBP, USD etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoCancelReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for which the payment is cancelled",
          "minLength" : 0,
          "maxLength" : 35
        },
        "cancelReason" : {
          "type" : "string",
          "description" : "Contains the reason for which the payment is cancelled.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 35
        },
        "settlementDate" : {
          "type" : "string",
          "description" : "Indicates the settlement date of the payment transaction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "acceptOrReject" : {
          "type" : "string",
          "description" : "Indicates the flag to accept or reject the inward recall",
          "minLength" : 1,
          "maxLength" : 35
        },
        "acceptedReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for acceptance of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "authorisationReason" : {
          "type" : "string",
          "description" : "Indicates a descriptive reason for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isoRejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the ISO reason code for rejection of an inward recall",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rejectReasonCode" : {
          "type" : "string",
          "description" : "Indicates the reject reason code of the payment for which the recall has been rejected",
          "minLength" : 0,
          "maxLength" : 35
        },
        "waiveCharge" : {
          "type" : "string",
          "description" : "Indicates if the charges are to be waived for the instruction",
          "minLength" : 0,
          "maxLength" : 35
        },
        "partyCompanyBIC" : {
          "type" : "string",
          "description" : "Debtor company BIC details",
          "minLength" : 0,
          "maxLength" : 35
        },
        "debitAccount" : {
          "type" : "string",
          "description" : " Identifier of the debitAccounts.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "creditAccount" : {
          "type" : "string",
          "description" : "Identifier of the creditAccounts.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "processingIndicator" : {
          "type" : "string",
          "description" : "Indicates the processing mode of the request",
          "minLength" : 0,
          "maxLength" : 35
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Contains the description of the error.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "recallDate" : {
          "type" : "string",
          "description" : "Date when recall or cancellation is initiated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "paymentStatus" : {
          "type" : "string",
          "description" : "Describes the current status of the payment order in the payment system",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "PaymentSentMessage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSentMessageBody"
        }
      },
      "description" : "PaymentSentMessage"
    },
    "PaymentSentMessageBody" : {
      "type" : "object",
      "properties" : {
        "ackDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "acknowledgementStatus" : {
                "type" : "string",
                "description" : "Contains the code for ack/nack - accepted or rejected by the clearing. For example: 0 - success acknowledegement , 1 - failure negative acknowledgement",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReason" : {
                "type" : "string",
                "description" : "Contains the  ISO reason code received in technical ack/nack messages",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReasonDescription" : {
                "type" : "string",
                "description" : "Contains the reason description received in technical ack/nack message",
                "minLength" : 0,
                "maxLength" : 40
              },
              "acknowledgementType" : {
                "type" : "string",
                "description" : "Contains the ack/nack message type name. For example: admi.007.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "sentAt" : {
                "type" : "string",
                "description" : "The time on which the message was sent.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 30
        },
        "messageId" : {
          "type" : "string",
          "description" : "The holds the record key of the message ID.",
          "minLength" : 0,
          "maxLength" : 30
        }
      }
    },
    "PaymentSentMessageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSentMessageResponseBody"
        }
      },
      "description" : "PaymentSentMessageResponse"
    },
    "PaymentSentMessageResponseBody" : {
      "type" : "object",
      "properties" : {
        "ackDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "acknowledgementStatus" : {
                "type" : "string",
                "description" : "Contains the code for ack/nack - accepted or rejected by the clearing. For example: 0 - success acknowledegement , 1 - failure negative acknowledgement",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReason" : {
                "type" : "string",
                "description" : "Contains the  ISO reason code received in technical ack/nack messages",
                "minLength" : 0,
                "maxLength" : 30
              },
              "negativeAcknowledgementReasonDescription" : {
                "type" : "string",
                "description" : "Contains the reason description received in technical ack/nack message",
                "minLength" : 0,
                "maxLength" : 40
              },
              "acknowledgementType" : {
                "type" : "string",
                "description" : "Contains the ack/nack message type name. For example: admi.007.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "sentAt" : {
                "type" : "string",
                "description" : "The time on which the message was sent.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "paymentReference" : {
          "type" : "string",
          "description" : "Payment reference details",
          "minLength" : 0,
          "maxLength" : 30
        },
        "messageId" : {
          "type" : "string",
          "description" : "The holds the record key of the message ID.",
          "minLength" : 0,
          "maxLength" : 30
        }
      }
    },
    "PaymentCancelReasonCodeResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentCancelReasonCodeResponseBody"
        }
      },
      "description" : "PaymentCancelReasonCodeResponse"
    },
    "PaymentCancelReasonCodeResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "codeId" : {
            "type" : "string",
            "description" : "ID of the LookupsResponse Code",
            "maxLength" : 4
          },
          "matchCodeDescription" : {
            "type" : "string",
            "description" : "Contains the description of the status of settlement Instruction.  Sample values are 1. Matched 2. Acknowledged/Accepted",
            "maxLength" : 256
          }
        }
      }
    }
  }
}