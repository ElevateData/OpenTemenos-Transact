{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to retrieve the key details of all the live trades captured from various treasury related applications such as Forex, Money Market, Swap, Forward Rate Agreement, Securities and other derivative deal capture applications. Segregates the currency positions in the different time buckets as configured by the institution and retrieves the mark to market profit and loss details of the currency position.",
    "version" : "v1.0.1",
    "title" : "Treasury reports"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.1/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/holdings/reports/treasuryProfitability" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the realized and unrealised mark to market details",
        "description" : "Retrieves the realized and unrealised mark to market details(profit/loss) displayed according to the configuration done by the institution",
        "operationId" : "getProfitabilityReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dealer",
          "in" : "query",
          "description" : "The dealer/desk responsible for monitoring and managing the currency position ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "groupId",
          "in" : "query",
          "description" : "Unique ID of the group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProfitabilityReportResponse",
            "schema" : {
              "$ref" : "#/definitions/ProfitabilityReportResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/reports/treasuryCurrencyCalendarPositions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the position details for all the currencies in different calenders",
        "description" : "Retrieves the position details(long/short) for all the currencies in different calenders",
        "operationId" : "getCurrencyCalendarPositionsReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company",
          "in" : "query",
          "description" : "The company code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "positionType",
          "in" : "query",
          "description" : "Identifies the position type. Possible values are CAS(cash position), GAP(Interest mismatch position), FXP(Foreign exchange position)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealerDesk",
          "in" : "query",
          "description" : "The dealer/desk responsible for monitoring and managing the currency positions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDateFrom",
          "in" : "query",
          "description" : "Contains the from value of value date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDateTo",
          "in" : "query",
          "description" : "Contains the to value of value date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealDate",
          "in" : "query",
          "description" : "Date on which the deal was agreed. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "period",
          "in" : "query",
          "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "calendar",
          "in" : "query",
          "description" : "Identifies the calendar to be used for the spreading of different position data into different time buckets. Ex: CAL-Standard calendar and DE1-Deutsche calendar",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CurrencyCalendarPositionsReportResponse",
            "schema" : {
              "$ref" : "#/definitions/CurrencyCalendarPositionsReportResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/reports/treasuryBlotter" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves all the active(open) deals",
        "description" : "Retrieves details on all open deals across various treasury products",
        "operationId" : "getBlotterReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "contractId",
          "in" : "query",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "counterpartyId",
          "in" : "query",
          "description" : "The identifier of the counter party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "counterpartyName",
          "in" : "query",
          "description" : "The counterparty name for the forex deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealType",
          "in" : "query",
          "description" : "Foreign Exchange deal type. Allowed values: - SP(spot) - FW(forward) - SW(Swap)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealSubType",
          "in" : "query",
          "description" : "Under a deal type, there can be further sub deal types. E.g. Broker and Internal are sub deal types for FX spot and forward deal types.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyAmount",
          "in" : "query",
          "description" : "Amount bought in the FX deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyAmountFrom",
          "in" : "query",
          "description" : "Contains the from value of buy amount to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyAmountTo",
          "in" : "query",
          "description" : "Contains the to value of buy amount to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyCurrency",
          "in" : "query",
          "description" : "ISO Currency code for the bought currency.  ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyRate",
          "in" : "query",
          "description" : "The exchange rate at which is currency is bought.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyRateFrom",
          "in" : "query",
          "description" : "Contains the from value of buy rate to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyRateTo",
          "in" : "query",
          "description" : "Contains the to value of buy rate to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellAmount",
          "in" : "query",
          "description" : "Amount sold in the FX deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellAmountFrom",
          "in" : "query",
          "description" : "Contains the from value of sell amount to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellAmountTo",
          "in" : "query",
          "description" : "Contains the to value of sell amount to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellCurrency",
          "in" : "query",
          "description" : "ISO Currency code for the sold currency.  ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellRate",
          "in" : "query",
          "description" : "The exchange rate at which is currency is sold.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellRateFrom",
          "in" : "query",
          "description" : "Contains the from value of sell rate to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellRateTo",
          "in" : "query",
          "description" : "Contains the to value of sell rate to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDateFrom",
          "in" : "query",
          "description" : "Contains the from value of value date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDateTo",
          "in" : "query",
          "description" : "Contains the to value of value date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reutersDealId",
          "in" : "query",
          "description" : "The Reuters deal reference number, if the deal is booked on Reuters dealing platform.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maturityDate",
          "in" : "query",
          "description" : "Indicates maturity date of the contract",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maturityDateFrom",
          "in" : "query",
          "description" : "Contains the from value of maturity date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "maturityDateTo",
          "in" : "query",
          "description" : "Contains the to value of maturity date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealDate",
          "in" : "query",
          "description" : "Date on which the deal was agreed. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealDateFrom",
          "in" : "query",
          "description" : "Date on which the deal was agreed. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealDateTo",
          "in" : "query",
          "description" : "Date on which the deal was agreed. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "instrument",
          "in" : "query",
          "description" : "The instrument identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "issuedBy",
          "in" : "query",
          "description" : "The issuer of a security or a bond.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "portfolio",
          "in" : "query",
          "description" : "Id of the portfolio (security account), which the arrangement (account, deposit, loan, etc.) is attached to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "depository",
          "in" : "query",
          "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "inputter",
          "in" : "query",
          "description" : "The user identifier who input the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "broker",
          "in" : "query",
          "description" : "Broker involved in the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "A pricing plan can be applied to an account, the selection is automatic or manual",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealerDesk",
          "in" : "query",
          "description" : "The dealer/desk responsible for monitoring and managing the currency positions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "internalDealerDesk",
          "in" : "query",
          "description" : "One of the dealer/desk for an internal deal between two dealer/desks.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "displayName",
          "in" : "query",
          "description" : "Contains the name used for display or enrichment purposes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderStatus",
          "in" : "query",
          "description" : "Status of the order.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyOrSell",
          "in" : "query",
          "description" : "Whether the transaction is a buy or a sell.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "recordStatus",
          "in" : "query",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contractStatus",
          "in" : "query",
          "description" : "Status of the contract, e.g. open, matured or liquidated.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTime",
          "in" : "query",
          "description" : "Contains the date and time separated by '-'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTimeFrom",
          "in" : "query",
          "description" : "Contains the from value of date and time to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTimeTo",
          "in" : "query",
          "description" : "Contains the to value of date and time to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fixingExerciseDate",
          "in" : "query",
          "description" : "Fixing or Exercise Date for FRA deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fixingExerciseDateFrom",
          "in" : "query",
          "description" : "Contains the from value of fixing or exercise date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fixingExerciseDateTo",
          "in" : "query",
          "description" : "Contains the to value of fixing or exercise date to be specified in a range.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rateKey",
          "in" : "query",
          "description" : "Identifies the periodic interest key used in case of money market deals or on the asset side of swap contract.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "liabilityRateKey",
          "in" : "query",
          "description" : "Identifies the periodic interest key used on the liability side of swap contract.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "BlotterReportResponse",
            "schema" : {
              "$ref" : "#/definitions/BlotterReportResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/treasury/moneyMarkets/events" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves all events till date of money market deals.",
        "description" : "Retrieves the informaton on events processed till date for money market deals like Principal payment, contract initiation, interest payment etc.",
        "operationId" : "getMoneyMarketEventsToDate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "contractId",
          "in" : "query",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionDate",
          "in" : "query",
          "description" : "Contains the date on which the deal was booked.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "MoneyMarketEventsToDateResponse",
            "schema" : {
              "$ref" : "#/definitions/MoneyMarketEventsToDateResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/treasury/forex" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves all the foreign exchange active deals as on today",
        "description" : "Retrieves the foreign exchange outstanding(active) deals as on today.",
        "operationId" : "getOutstandingForexDealsToday",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dealType",
          "in" : "query",
          "description" : "Foreign Exchange deal type. Allowed values: - SP(spot) - FW(forward) - SW(Swap)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "counterparty",
          "in" : "query",
          "description" : "The counterparty ID  for the  deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "swapReference",
          "in" : "query",
          "description" : "As the near and far leg of the swap have separate reference number, the swap reference is the near leg reference in the far leg and far leg reference in the near leg of a FX swap deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementDateSell",
          "in" : "query",
          "description" : "Settlement date for sell side.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementDateBuy",
          "in" : "query",
          "description" : "Settlement date for buy side.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyCurrency",
          "in" : "query",
          "description" : "ISO Currency code for the bought currency.  ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "buyAmount",
          "in" : "query",
          "description" : "Amount bought in the FX deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellCurrency",
          "in" : "query",
          "description" : "ISO Currency code for the sold currency.  ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sellAmount",
          "in" : "query",
          "description" : "Amount sold in the FX deal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealDate",
          "in" : "query",
          "description" : "Date on which the deal was agreed. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ourAccountPay",
          "in" : "query",
          "description" : "Account from which payment is  made.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ourAccountRecieve",
          "in" : "query",
          "description" : "Account from which payment is received.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dealerDesk",
          "in" : "query",
          "description" : "The dealer/desk responsible for monitoring and managing the currency positions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "unevenSwap",
          "in" : "query",
          "description" : "Identifier for a FX uneven swap  (the swap base currency amount in near and far leg are not the same).",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "forwardForwardSwap",
          "in" : "query",
          "description" : "A FX swap where both the near and the far leg have a value date greater than spot value date.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OutstandingForexDealsTodayResponse",
            "schema" : {
              "$ref" : "#/definitions/OutstandingForexDealsTodayResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "ProfitabilityReportResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfitabilityReportResponseBody"
        }
      },
      "description" : "ProfitabilityReportResponse"
    },
    "ProfitabilityReportResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "type" : "string",
            "description" : "The name that is displayed for the group"
          },
          "dealerId" : {
            "type" : "string",
            "description" : "Identifies the dealer/ desk responsible for monitoring and managing currency positions."
          },
          "yearToMonth" : {
            "type" : "string",
            "description" : "Period represented by the beginning of the year till previous month end."
          },
          "monthToDate" : {
            "type" : "string",
            "description" : "The calculated value for the period  from the first of the month till current date."
          },
          "yearToDate" : {
            "type" : "string",
            "description" : "The calculated value for the period from the beginning of the year till current date."
          },
          "unrealizedMarkToMarket" : {
            "type" : "string",
            "description" : "The amount of unrealised profit and loss calculated as a result of mark to market revaluation"
          },
          "totalYearToDate" : {
            "type" : "string",
            "description" : "Total for the period since the start of the year till date."
          },
          "totalYearToDateRevalCurrency" : {
            "type" : "string",
            "description" : "Total for the period since the start of the year till date expressed in revaluation currency."
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "CurrencyCalendarPositionsReportResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CurrencyCalendarPositionsReportResponseBody"
        }
      },
      "description" : "CurrencyCalendarPositionsReportResponse"
    },
    "CurrencyCalendarPositionsReportResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "calendarPeriod" : {
            "type" : "string",
            "description" : "The calendar period used for consolidating the data into different time buckets.",
            "maxLength" : 3
          },
          "longPosition" : {
            "type" : "string",
            "description" : "Currency position amount over bought.",
            "maxLength" : 20
          },
          "shortPosition" : {
            "type" : "string",
            "description" : "Oversold position in a currency.",
            "maxLength" : 20
          },
          "netPosition" : {
            "type" : "string",
            "description" : "Net of buy and sell positions.",
            "maxLength" : 20
          },
          "averageRate" : {
            "type" : "string",
            "description" : "The weighted average rate.",
            "maxLength" : 10
          },
          "marketRate" : {
            "type" : "string",
            "description" : "Prevailing rate in the market.",
            "maxLength" : 10
          },
          "unrealizedMarkToMarket" : {
            "type" : "string",
            "description" : "The amount of unrealised profit and loss calculated as a result of mark to market revaluation",
            "maxLength" : 20
          },
          "netPositionCurrency" : {
            "type" : "string",
            "description" : "The currency in which a net position value is expressed.",
            "maxLength" : 20
          },
          "unrealizedMarkToMarketCurrency" : {
            "type" : "string",
            "description" : "Currency in which the unrealised profit & Loss is expressed.",
            "maxLength" : 20
          }
        }
      }
    },
    "BlotterReportResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BlotterReportResponseBody"
        }
      },
      "description" : "BlotterReportResponse"
    },
    "BlotterReportResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "contractId" : {
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
            "maxLength" : 12
          },
          "counterpartyId" : {
            "type" : "string",
            "description" : "The identifier of the counter party",
            "maxLength" : 10
          },
          "counterpartyName" : {
            "type" : "string",
            "description" : "The counterparty name for the forex deal.",
            "maxLength" : 30
          },
          "dealType" : {
            "type" : "string",
            "description" : "Foreign Exchange deal type. Allowed values: - SP(spot) - FW(forward) - SW(Swap)",
            "maxLength" : 10
          },
          "dealSubType" : {
            "type" : "string",
            "description" : "Under a deal type, there can be further sub deal types. E.g. Broker and Internal are sub deal types for FX spot and forward deal types.",
            "maxLength" : 15
          },
          "buyAmount" : {
            "type" : "string",
            "description" : "Amount bought in the FX deal.",
            "maxLength" : 20
          },
          "buyCurrency" : {
            "type" : "string",
            "description" : "ISO Currency code for the bought currency.  ",
            "maxLength" : 10
          },
          "buyRate" : {
            "type" : "string",
            "description" : "The exchange rate at which is currency is bought.",
            "maxLength" : 15
          },
          "sellAmount" : {
            "type" : "string",
            "description" : "Amount sold in the FX deal.",
            "maxLength" : 20
          },
          "sellCurrency" : {
            "type" : "string",
            "description" : "ISO Currency code for the sold currency.  ",
            "maxLength" : 10
          },
          "sellRate" : {
            "type" : "string",
            "description" : "The exchange rate at which is currency is sold.",
            "maxLength" : 15
          },
          "valueDate" : {
            "type" : "string",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
            "maxLength" : 15
          },
          "reutersDealId" : {
            "type" : "string",
            "description" : "The Reuters deal reference number, if the deal is booked on Reuters dealing platform.",
            "maxLength" : 20
          },
          "maturityDate" : {
            "type" : "string",
            "description" : "Indicates maturity date of the contract",
            "maxLength" : 15
          },
          "dealDate" : {
            "type" : "string",
            "description" : "Date on which the deal was agreed. ",
            "maxLength" : 15
          },
          "instrument" : {
            "type" : "string",
            "description" : "The instrument identifier",
            "maxLength" : 15
          },
          "issuedBy" : {
            "type" : "string",
            "description" : "The issuer of a security or a bond.",
            "maxLength" : 15
          },
          "portfolio" : {
            "type" : "string",
            "description" : "Id of the portfolio (security account), which the arrangement (account, deposit, loan, etc.) is attached to.",
            "maxLength" : 15
          },
          "depository" : {
            "type" : "string",
            "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
            "maxLength" : 20
          },
          "inputter" : {
            "type" : "string",
            "description" : "The user identifier who input the transaction",
            "maxLength" : 15
          },
          "broker" : {
            "type" : "string",
            "description" : "Broker involved in the transaction",
            "maxLength" : 15
          },
          "method" : {
            "type" : "string",
            "description" : "A pricing plan can be applied to an account, the selection is automatic or manual",
            "maxLength" : 15
          },
          "dealerDesk" : {
            "type" : "string",
            "description" : "The dealer/desk responsible for monitoring and managing the currency positions.",
            "maxLength" : 10
          },
          "internalDealerDesk" : {
            "type" : "string",
            "description" : "One of the dealer/desk for an internal deal between two dealer/desks.",
            "maxLength" : 15
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 30
          },
          "orderStatus" : {
            "type" : "string",
            "description" : "Status of the order.",
            "maxLength" : 10
          },
          "buyOrSell" : {
            "type" : "string",
            "description" : "Whether the transaction is a buy or a sell.",
            "maxLength" : 5
          },
          "recordStatus" : {
            "type" : "string",
            "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
            "maxLength" : 10
          },
          "contractStatus" : {
            "type" : "string",
            "description" : "Status of the contract, e.g. open, matured or liquidated.",
            "maxLength" : 10
          },
          "dateTime" : {
            "type" : "string",
            "description" : "Contains the date and time separated by '-'",
            "maxLength" : 20
          },
          "fixingExerciseDate" : {
            "type" : "string",
            "description" : "Fixing or Exercise Date for FRA deal.",
            "maxLength" : 15
          },
          "rateKey" : {
            "type" : "string",
            "description" : "Identifies the periodic interest key used in case of money market deals or on the asset side of swap contract.",
            "maxLength" : 24
          },
          "liabilityRateKey" : {
            "type" : "string",
            "description" : "Identifies the periodic interest key used on the liability side of swap contract.",
            "maxLength" : 24
          }
        }
      }
    },
    "MoneyMarketEventsToDateResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MoneyMarketEventsToDateResponseBody"
        }
      },
      "description" : "MoneyMarketEventsToDateResponse"
    },
    "MoneyMarketEventsToDateResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "sequence" : {
            "type" : "number",
            "description" : "Identifies the sequence of the event.",
            "maximum" : 2
          },
          "transactionDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the deal was booked."
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "event" : {
            "type" : "string",
            "description" : "Valid items for product alerts",
            "maxLength" : 25
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 25
          },
          "applicationName" : {
            "type" : "string",
            "description" : "Specifies the name of the application to be considered for erasure of details for customer data protection purposes",
            "maxLength" : 35
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system"
          }
        }
      }
    },
    "OutstandingForexDealsTodayResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OutstandingForexDealsTodayResponseBody"
        }
      },
      "description" : "OutstandingForexDealsTodayResponse"
    },
    "OutstandingForexDealsTodayResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "ourAccountPay" : {
            "type" : "array",
            "description" : "Account from which payment is  made.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ourAccountPay" : {
                  "type" : "string",
                  "description" : "Account from which payment is  made.",
                  "maxLength" : 36
                }
              }
            }
          },
          "ourAccountRecieve" : {
            "type" : "array",
            "description" : "Account from which payment is received.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ourAccountRecieve" : {
                  "type" : "string",
                  "description" : "Account from which payment is received.",
                  "maxLength" : 36
                }
              }
            }
          },
          "transactionReference" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system",
            "maxLength" : 16
          },
          "dealType" : {
            "type" : "string",
            "description" : "Foreign Exchange deal type. Allowed values: - SP(spot) - FW(forward) - SW(Swap)",
            "maxLength" : 2
          },
          "counterparty" : {
            "type" : "string",
            "description" : "The counterparty ID  for the  deal.",
            "maxLength" : 10
          },
          "counterpartyName" : {
            "type" : "string",
            "description" : "The counterparty name for the forex deal.",
            "maxLength" : 35
          },
          "dealDate" : {
            "type" : "string",
            "description" : "Date on which the deal was agreed. ",
            "maxLength" : 11
          },
          "buyCurrency" : {
            "type" : "string",
            "description" : "ISO Currency code for the bought currency.  ",
            "maxLength" : 3
          },
          "buyAmount" : {
            "type" : "string",
            "description" : "Amount bought in the FX deal.",
            "maxLength" : 19
          },
          "sellCurrency" : {
            "type" : "string",
            "description" : "ISO Currency code for the sold currency.  ",
            "maxLength" : 3
          },
          "sellAmount" : {
            "type" : "string",
            "description" : "Amount sold in the FX deal.",
            "maxLength" : 19
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "exchangeRate" : {
            "type" : "string",
            "description" : "Contains the exchange rate returned from the system. i.e. For entries over foreign currency accounts, this contains the rate which used to convert the currency amount to the local equivalent at the time of the originating transaction."
          },
          "unevenSwap" : {
            "type" : "string",
            "description" : "Identifier for a FX uneven swap  (the swap base currency amount in near and far leg are not the same).",
            "maxLength" : 1
          },
          "swapReference" : {
            "type" : "string",
            "description" : "As the near and far leg of the swap have separate reference number, the swap reference is the near leg reference in the far leg and far leg reference in the near leg of a FX swap deal.",
            "maxLength" : 16
          },
          "forwardForwardSwap" : {
            "type" : "string",
            "description" : "A FX swap where both the near and the far leg have a value date greater than spot value date.",
            "maxLength" : 3
          }
        }
      }
    }
  }
}