{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to retrieve the external user specific product conditions like Permissions, privileges, licensing, limits and availability",
    "version" : "v1.0.0",
    "title" : "External user product conditions"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/v1.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/product/{productId}/protectionLimitConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the limit details",
        "description" : "Retrieves the list of protection limit property classess used by products which have daily limits on the cumulative amount of transactions that can be initiated via an external channel.",
        "operationId" : "getProtectionLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyId",
          "in" : "query",
          "description" : "The identifier of the product condition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProtectionLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProtectionLimitConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/availabilityConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the availability details",
        "description" : "Retrieves the list of published product conditions for the availability property",
        "operationId" : "getAvailabilityConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyId",
          "in" : "query",
          "description" : "The identifier of the product condition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AvailabilityConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/AvailabilityConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productLineId}/products" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the products",
        "description" : "Retrieves the details of the proofed and published properties of the product on the latest date",
        "operationId" : "getProductsByProductLine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productLineId",
          "in" : "path",
          "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productGroupId",
          "in" : "query",
          "description" : "The group, as defined by the institution, that the product belongs to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "eligibilityFilter",
          "in" : "query",
          "description" : "Indicates the filter based on the Eligibility options available to the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "multiBookEligible",
          "in" : "query",
          "description" : "Flag which indicates whether multi booking is applicable or not",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductsByProductLineResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsByProductLineResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/permissionConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the permissions",
        "description" : "Retrieves the list of published product conditions for the permissions property",
        "operationId" : "getPermissionConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyId",
          "in" : "query",
          "description" : "The identifier of the product condition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PermissionConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/PermissionConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/licensingConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the licensing condition",
        "description" : "Retrieves the list of published product conditions for the licensing property",
        "operationId" : "getLicensingConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyId",
          "in" : "query",
          "description" : "The identifier of the product condition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LicensingConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/LicensingConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/privilegeConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the priveleges",
        "description" : "Retrieves the list of published product conditions  for the privileges property",
        "operationId" : "getPrivilegeConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PrivilegeConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/PrivilegeConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "ProtectionLimitConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProtectionLimitConditionsResponseBody"
        }
      },
      "description" : "ProtectionLimitConditionsResponse"
    },
    "ProtectionLimitConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "negotiation" : {
            "type" : "array",
            "description" : "The product condition has an activity type associated that drives an action.",
            "items" : {
              "type" : "object",
              "properties" : {
                "negotiationRulesAttribute" : {
                  "type" : "string",
                  "description" : "Defines which individual attribute (field) has the negotiation rules defined in fields",
                  "maxLength" : 25
                },
                "options" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "negotiationRulesOptions" : {
                        "type" : "string",
                        "description" : "Defines named values to indicate if an option applies to the associated NR.ATTRIBUTE. More than one option can be associated with the NR.ATTRIBUTE, with certain restrictions.",
                        "maxLength" : 35
                      }
                    }
                  }
                },
                "type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "negotiationRulesType" : {
                        "type" : "string",
                        "description" : "Defines the negotiation rule that is linked to the field defined in Nr.Attribute. If an attribute has a negotiation rule linked to it. It is possible to define more than one negotiation rule for an attribute.",
                        "maxLength" : 25
                      },
                      "negotiationRulesValue" : {
                        "type" : "string",
                        "description" : "Defines the value that links to the rule in field Nr.Type",
                        "maxLength" : 60
                      },
                      "negotiationRulesMessage" : {
                        "type" : "string",
                        "description" : "This field indicates whether to raise error or override message when rule is broken,Allows only two values ERROR or OVERRIDE,ERROR - Error message is raisedOVERRIDE - Override message is generated.",
                        "maxLength" : 10
                      }
                    }
                  }
                }
              }
            }
          },
          "customerLimits" : {
            "type" : "array",
            "description" : "Contains Limit allocated value for the customer defined in the online service contract.",
            "items" : {
              "type" : "object",
              "properties" : {
                "definedCustomer" : {
                  "type" : "string",
                  "description" : "Allowed customers for the selected arrangement; where in they can see their product in Internet Banking",
                  "maxLength" : 30
                },
                "customerLimit" : {
                  "type" : "string",
                  "description" : "Contains Limit allocated value for the customer defined in the online service contract.",
                  "maxLength" : 10
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          },
          "limitAmount" : {
            "type" : "number",
            "description" : "The Limit amount that is actually available for use. The system limit checks are preformed against the online limit",
            "maximum" : 10
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "customerMaximumLimit" : {
            "type" : "string",
            "description" : "Contains Maximum limit value that can be assigned to the customers defined in the online service contract.",
            "maxLength" : 10
          },
          "usageUpdate" : {
            "type" : "string",
            "description" : "Contains flag value to define whether the limit update happens at input or authorisation of transaction.",
            "maxLength" : 35
          },
          "utilisationReset" : {
            "type" : "string",
            "description" : "Specifies whether the limit utilisation reset takes place as the calendar date or at close of business.",
            "maxLength" : 35
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "AvailabilityConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AvailabilityConditionsResponseBody"
        }
      },
      "description" : "AvailabilityConditionsResponse"
    },
    "AvailabilityConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "dayName" : {
                  "type" : "string",
                  "description" : "The Day for which availabilities are defined. This is a multi value set of fields, one set for each week day.",
                  "maxLength" : 11
                },
                "daySelect" : {
                  "type" : "boolean",
                  "description" : "The permissions for the current Day.Possible values: Null/Yes/No"
                },
                "time" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "startTime" : {
                        "type" : "string",
                        "description" : "Contains the time job was started",
                        "pattern" : "^([0-1]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      },
                      "endTime" : {
                        "type" : "string",
                        "description" : "Contains the time the job  ended.",
                        "pattern" : "^([0-1]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          }
        }
      }
    },
    "ProductsByProductLineResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductsByProductLineResponseBody"
        }
      },
      "description" : "ProductsByProductLineResponse"
    },
    "ProductsByProductLineResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "currencies" : {
            "type" : "array",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "items" : {
              "type" : "object",
              "properties" : {
                "currencyId" : {
                  "type" : "string",
                  "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
                },
                "currencyName" : {
                  "type" : "string",
                  "description" : "The name that is displayed for the currency"
                }
              }
            }
          },
          "termDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "minimumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the minimum term associated with the loan process."
                },
                "maximumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the maximum term associated with the loan process."
                }
              }
            }
          },
          "productLineId" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products."
          },
          "productLineName" : {
            "type" : "string",
            "description" : "Description of the product line, e.g. Client Consent for product line CONSENT."
          },
          "productGroupId" : {
            "type" : "string",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "maxLength" : 35
          },
          "productGroupName" : {
            "type" : "string",
            "description" : "Description of the product group",
            "maxLength" : 35
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 35
          },
          "availableFromDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the product is available in the catalogue for sale to customers"
          }
        }
      }
    },
    "PermissionConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PermissionConditionsResponseBody"
        }
      },
      "description" : "PermissionConditionsResponse"
    },
    "PermissionConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productGroup" : {
            "type" : "array",
            "description" : "Indicates a group under which the products exists",
            "items" : {
              "type" : "object",
              "properties" : {
                "productGroupId" : {
                  "type" : "string",
                  "description" : "The group, as defined by the institution, that the product belongs to.",
                  "maxLength" : 30
                },
                "displayName" : {
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes",
                  "maxLength" : 35
                },
                "permission" : {
                  "type" : "string",
                  "description" : "The act of permitting, especially in giving formal consent to access a particular file or repository.",
                  "maxLength" : 10
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          }
        }
      }
    },
    "LicensingConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LicensingConditionsResponseBody"
        }
      },
      "description" : "LicensingConditionsResponse"
    },
    "LicensingConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          },
          "noOfUsers" : {
            "type" : "string",
            "description" : "The maximum number of users that can be linked to a master arrangement or its roles",
            "maxLength" : 4
          },
          "noOfRoles" : {
            "type" : "string",
            "description" : "The maximum number of roles that can be linked to the master arrangement",
            "maxLength" : 4
          }
        }
      }
    },
    "PrivilegeConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PrivilegeConditionsResponseBody"
        }
      },
      "description" : "PrivilegeConditionsResponse"
    },
    "PrivilegeConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "operations" : {
            "type" : "array",
            "description" : "Identifies the required operation to be executed for a Trade Finance contract. Input of valid codes as: O for opening of LC, P for Pre-advise of LC, A for Amend LC, C for Collect Charges, D for Decision on Amendments, T for Tracer, IO for LC through Internet Banking Operation and M for Ancillary Message (MT759)",
            "items" : {
              "type" : "object",
              "properties" : {
                "operationId" : {
                  "type" : "string",
                  "description" : "ID of the operation which Identifies the required operation to be executed for a Trade Finance contract."
                },
                "operationName" : {
                  "type" : "string",
                  "description" : "Name of the operation which Identifies the required operation to be executed for a Trade Finance contract."
                },
                "mandatoryOperation" : {
                  "type" : "boolean",
                  "description" : "Indicate whether it is a mandatory operation or not."
                },
                "operationActive" : {
                  "type" : "boolean",
                  "description" : "Indiciate whether operation is active or not"
                },
                "dependency" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "dependentService" : {
                        "type" : "string",
                        "description" : "Indicate whether it is a dependent service or not."
                      },
                      "dependentOperation" : {
                        "type" : "string",
                        "description" : "Indicate whether it is a dependent operation or not."
                      }
                    }
                  }
                }
              }
            }
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 100
          },
          "serviceId" : {
            "type" : "string",
            "description" : "Contains the identifier name of the service that has to be executed."
          },
          "serviceName" : {
            "type" : "string",
            "description" : "The service related to an arrangement"
          },
          "mandatoryService" : {
            "type" : "boolean",
            "description" : "Indicate whether it is a mandatory service or not."
          },
          "serviceActive" : {
            "type" : "boolean",
            "description" : "Indicate whether service is active or not."
          }
        }
      }
    }
  }
}