{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create, update and manage customer details such as delivery preferences, joint customer details, party relationships, KYC details, customer exit status, customer address formats & posting restrictions",
    "version" : "v4.0.0",
    "title" : "Customer management"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v4.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/party/customers/{customerId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of customer details",
        "description" : "Retrieves the customer details such as customer contact information, residence details, legal document details, occupation details and relationship details for the specific customer",
        "operationId" : "getCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update customer details",
        "description" : "Update customer details with the information such as customer contact information, residence details, legal document details, occupation details and relationship details, etc provided by the user",
        "operationId" : "updateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of customer basic details",
        "description" : "Retrieves the customer details such as delivery or postal details, contact information, residence details, customer profile, legal document details, occupation details and status of customer",
        "operationId" : "getCustomerInformation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerName",
          "in" : "query",
          "description" : "Name of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerNameCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the customer name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerNameBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the customer name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerNameMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the customer name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "street",
          "in" : "query",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streetCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the street",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streetBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the street",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streetMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the street",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressCity",
          "in" : "query",
          "description" : "The town and/or city component of the base address of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressCityCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the town country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressCityBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the town country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressCityMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the town country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postCode",
          "in" : "query",
          "description" : "Identifies the address postal code for the customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postCodeCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the post code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postCodeBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the post code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postCodeMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the post code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "The date of birth of an individual customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirthCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the date of birth",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirthBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the date of birth",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirthMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the date of birth",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerStatus",
          "in" : "query",
          "description" : "The internal bank status of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerStatusCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the customer status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerStatusBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the customer status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerStatusMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the customer status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sectorId",
          "in" : "query",
          "description" : "An institution-defined identifier of the type of customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sectorIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the sector",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sectorIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the sector",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sectorIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the sector",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountOfficerId",
          "in" : "query",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountOfficerIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the account officer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountOfficerIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the account officer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountOfficerIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the account officer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industryId",
          "in" : "query",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industryIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the industry",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industryIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the industry",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industryIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the industry",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationalityId",
          "in" : "query",
          "description" : "The identifier of the nationality of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationalityIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationalityIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationalityIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the nationality",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "residenceId",
          "in" : "query",
          "description" : "The identifier of the country of residence of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "residenceIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the residence",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "residenceIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the residence",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "residenceIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the residence",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "The last name of an individual customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastNameCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the family name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastNameBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the family name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastNameMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the family name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phoneNumber",
          "in" : "query",
          "description" : "The phone number of the customer or prospect",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phoneNumberCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the phone number",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phoneNumberMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the phone number",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phoneNumberBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the phone number",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerMnemonic",
          "in" : "query",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerMnemonicCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the customer mnemonic",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerMnemonicBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the customer mnemonic",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerMnemonicMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the customer mnemonic",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "Specifies customer's first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstNameBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstNameMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstNameCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerTypeCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the customer type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerTypeBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the customer type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerTypeMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the customer type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email Identifier of the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "emailCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the emails",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "emailMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the emails",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "emailBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the emails",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobilePhoneNumber",
          "in" : "query",
          "description" : "Represents the phone number of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobilePhoneNumberCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the mobile numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobilePhoneNumberBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the mobile numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobilePhoneNumberMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the mobile numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taxId",
          "in" : "query",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taxIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the tax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taxIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the tax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taxIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the tax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shortName",
          "in" : "query",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shortNameCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the short name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shortNameBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the short name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shortNameMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the short name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "officePhoneNumber",
          "in" : "query",
          "description" : "The office phone number of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "officePhoneNumberCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the office phone numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "officePhoneNumberBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the office phone numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "officePhoneNumberMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the office phone numbers",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "faxId",
          "in" : "query",
          "description" : "The fax (facsimile) number of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "faxIdBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the fax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "faxIdCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the fax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "faxIdMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the fax Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address",
          "in" : "query",
          "description" : "Communication Address of the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relCustomer",
          "in" : "query",
          "description" : "Customers linked or related to the arrangement owner",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relCustomerBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the related customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relCustomerCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the related customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relCustomerMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the related customer Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationshipCode",
          "in" : "query",
          "description" : "Relationship identifier between the partyType and relatedPartyType",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationshipCodeBW",
          "in" : "query",
          "description" : "Indicates the criteria for the between operation on the relationship code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationshipCodeMT",
          "in" : "query",
          "description" : "Indicates the criteria for the matches operation on the relationship code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationshipCodeCT",
          "in" : "query",
          "description" : "Indicates the criteria for the contains operation on the relationship code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerInformationResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerInformationResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create a customer",
        "description" : "Create a customer with the information such as customer contact information, residence details, legal document details, occupation details and relationship details, etc provided by the user",
        "operationId" : "createCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/relationships" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of customer relationships",
        "description" : "Retrieves customer relationship details such as type of relationship, party information, relatedAs details, owning details, role & purpose of relationship for specific party or customer",
        "operationId" : "getCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerRelationGroupId",
          "in" : "query",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partyId",
          "in" : "query",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relatedPartyId",
          "in" : "query",
          "description" : "Identifier of the Related Party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationId",
          "in" : "query",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse1"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create customer relationship with other customers",
        "description" : "Create a customer relationship for a customer with details such as type of relationship, party information, relatedAs details, owning details, role & purpose of relationship",
        "operationId" : "createCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/relationships/{relationId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update customer relationship",
        "description" : "Update customer relationship for a customer with details such as type of relationship, party information, related details, owning details, role & purpose of relationship",
        "operationId" : "updateCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/reportingStatus" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves reporting status of the customer",
        "description" : "Retrieves the FATCA/CRS reporting status and reporting jurisdiction of the customer",
        "operationId" : "getCustomerReportingStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerReportingStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerReportingStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/sweeps" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves account sweep details of the specific customer",
        "description" : "Retrieves account sweep details such as sweep reference, type, balance requirements for sweep & frequency of sweep for the list of accounts available to a customer",
        "operationId" : "getCustomerSweeps",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerSweepsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerSweepsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/deliveryOptions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves delivery preferences of the customer",
        "description" : "Retrieves the delivery preferences of the customer such as the message group, carrier and address.",
        "operationId" : "getCustomerDeliveryOptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryOptionsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryOptionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/channels" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of message channels",
        "description" : "Retrieves the list of message channels such as internet banking, mobile banking, ATM, etc available for the specific customer",
        "operationId" : "getCustomerDigitalChannels",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "query",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDigitalChannelsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDigitalChannelsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/messages" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a new secure message for a customer",
        "description" : "Create a new secure message for a customer to be sent by bank",
        "operationId" : "createMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Messages"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "MessagesResponse",
            "schema" : {
              "$ref" : "#/definitions/MessagesResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/jointCustomers" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves joint customer details for a specific customer",
        "description" : "Retrieves details such as joint relation code, name, joint customer details and reverse relationships for a specific customer",
        "operationId" : "getJointCustomerDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "JointCustomerDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/JointCustomerDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/KYC" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves KYC details for a specific customer",
        "description" : "Retrieves the KYC details such as contact date, introducer, last and next review date, KYC and AML status of a customer",
        "operationId" : "getCustomerKYCDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerKYCDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerKYCDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/personalProfiles" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves Personal details of customer",
        "description" : "Retrieves personal details such as residence, communication details, occupation details, asset & liability information",
        "operationId" : "getCustomerPersonalDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPersonalDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPersonalDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/postingRestrictions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves posting restriction details",
        "description" : "Retrieves the credit and debit posting restriction details such as restriction reference and name of restriction set for a customer",
        "operationId" : "getCustomerPostingRestrictions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPostingRestrictionsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPostingRestrictionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/relationships/{relationId}" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create party relationship details",
        "description" : "Create a party relationship between a person, entity or customer with details such as party name, type, relatedAs, relation code and owning details",
        "operationId" : "createPartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PartyRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update party relationship details",
        "description" : "Update party relationship between a person, entity or customer with details such as party name, type, relatedAs, relation code and owning details",
        "operationId" : "updatePartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PartyRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/cards" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves card details of a customer",
        "description" : "Retrieves the card details such as card Number, card type and status, linked account and its balances of a customer",
        "operationId" : "getCustomerCreditCards",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerCreditCardsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerCreditCardsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/standingOrders" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves standing instruction details of a customer",
        "description" : "Retrieves the list of standing instructions for a customer with details such as instruction reference, order type, frequency of payments, mode of payment and credit & debit parties involved",
        "operationId" : "getStandingOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "standingOrderId",
          "in" : "query",
          "description" : "The unique standing order identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrdersResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrdersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/directDebits" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves direct debits details of a customer",
        "description" : "Retrieves the list of direct debits for a customer with details such as direct debit reference, debit & credit accounts, transaction amount, payment frequency, next payment date and direction of payment",
        "operationId" : "getDirectDebits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "directDebitId",
          "in" : "query",
          "description" : "The unique identifier of the direct debit mandate. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "DirectDebitsResponse",
            "schema" : {
              "$ref" : "#/definitions/DirectDebitsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/deliveryPreferences/{deliveryPreferenceId}" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create customer delivery preferences",
        "description" : "Creates delivery preferences for a customer or account with message group, carrier, role, address, email details and format of messages",
        "operationId" : "createDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "description" : "Identifier of the customer delivery preferences",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/DeliveryPreferenceResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update customer deliver preferences",
        "description" : "Update delivery preferences for a  customer or account with message group, carrier, role, address & email details, format of messages",
        "operationId" : "updateDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "description" : "Identifier of the customer delivery preferences",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/DeliveryPreferenceResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/limits/{limitId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update credit limit details for customer",
        "description" : "Updates the limit details such as currency, limit grade, commodity, country and limit product details",
        "operationId" : "updateLimit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limitId",
          "in" : "path",
          "description" : "The identifier of credit limit",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Limit"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "LimitResponse",
            "schema" : {
              "$ref" : "#/definitions/LimitResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/customerExitStatus" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer exit status details of customer",
        "description" : "Retrieves customer exit status details such as customer type, exit date, status and reason",
        "operationId" : "getCustomerExitStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExitStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update customer exit status details of customers",
        "description" : "Update a customer record with exit status and exit reason marking the customer as blocked or rejected or closed",
        "operationId" : "updateCustomerExitStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerExitStatus"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExitStatusResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/settings/customerExitStatus/{customerExitStatusId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves conditions to update customer exit status of customer",
        "description" : "Retrieves available conditions such as customer exit setup reference, allowed reasons and allowed re-open details to update customer exit status of customers",
        "operationId" : "getCustomerExitStatusParam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExitStatusParamResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create conditions to update customer exit status of customer",
        "description" : "Create conditions such as applicable customer type and allowed reasons to update the customer exit status details of customers",
        "operationId" : "createCustomerExitStatusParam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerExitStatusParam"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExitStatusParamResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/settings/{customerExitStatusId}/customerExitStatus" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Create conditions to update customer exit status of customer",
        "description" : "Create conditions such as applicable customer type and allowed reasons to update the customer exit status details of customers",
        "operationId" : "updateCustomerExitStatusParam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerExitStatusId",
          "in" : "path",
          "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerExitStatusParam"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExitStatusParamResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExitStatusParamResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/addresses" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves structured/ unstructured address format of customer",
        "description" : "Returns structured/unstructured address details of specified customer based on address option in request. When structured format is requested, the values are returned in format of structured data name combined with corresponding customer address value. When unstructured format is requested, the address details are returned based on configured unstructured address format.",
        "operationId" : "getCustomerAddressOutput",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressOption",
          "in" : "query",
          "description" : "It reflects the preference for the customer address format, respective structured, unstructured or both",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addressOutputFormat",
          "in" : "query",
          "description" : "It identifies the address output format for the unstructured address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerAddressOutputResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerAddressOutputResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/shortNames" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer short name",
        "description" : "API to get the customer short name that can be used as customer enrichment by any application",
        "operationId" : "getCustomerShortNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerShortNamesResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerShortNamesResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/mandates" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves mandate instruction applicable for the requested customer",
        "description" : "Retrieves the mandate instruction details such as application eligible for mandate process and the corresponding mandate rule that is being applied to check mandates for transactions involving the specified customer.",
        "operationId" : "getCustomerMandates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerMandatesResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerMandatesResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/documents" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the customer legal document details",
        "description" : "Retrieves the details of legal document provided by the customer such as document name, document id, issue date, expiry date and authority who issued the document.",
        "operationId" : "getCustomerLegalDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerLegalDocumentsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerLegalDocumentsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/profiles" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves profile details of the requested customer",
        "description" : "Retrieves the customer basic details such as personal information, address location, basic contact details and other general information.",
        "operationId" : "getCustomerProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerProfileResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerProfileResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/alternateReferences/{alternateReference}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer id for the given alternate reference",
        "description" : "Retrieves the customer identifier for the provided alternate reference of the customer",
        "operationId" : "getCustomerId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "alternateReference",
          "in" : "path",
          "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerIdResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerIdResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/restrictions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the restriction details",
        "description" : "Retrieves the transaction restrictions imposed on the customer specified. Restrictions can be post no entries, black listed customer, pending KYC due reasons for restricting transactions on this customer",
        "operationId" : "getCustomerRestrictions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRestrictionsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRestrictionsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/contacts" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the customer contact details",
        "description" : "Retrieves the contact details such as phone number, mobile numbers, fax and email address specific to the requested customer",
        "operationId" : "getCustomerContacts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerContactsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerContactsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/relationships" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the relation customers",
        "description" : "Retrieves the relationship details such as related customer and the relationship that exists with the requested customer",
        "operationId" : "getCustomerRelationships",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/payments" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer details required for payment processing",
        "description" : "Retrieves the customer information that are required for processing or validating the customer involved in a payment transaction. Provides the information such as customer name details, birth details, address details,  market sector, target, nationality, residence country and preferred language for communication.",
        "operationId" : "getPartyBasicDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyBasicDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyBasicDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/addresses/swiftAddresses/{addressId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the SWIFT address details for the customer.",
        "description" : "Retrieves the SWIFT address details such as delivery address, short name & tag25 indicator for the customer.",
        "operationId" : "getCustomerSwiftAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "path",
          "description" : "Reference Id of address record",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerSwiftAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerSwiftAddressResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/relationships/{partyId}/relations" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves list of party relationship details",
        "description" : "Retrieves the relationship details such as party name, type, relation code of a customers involved in a relationship",
        "operationId" : "getPartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse1"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/charges" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer charge for a specific customer.",
        "description" : "Retrieves customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "getCustomerCharge",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerChargeResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Creates customer charge for a specific customer.",
        "description" : "Creates customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "createCustomerCharge",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerCharge"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerChargeResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Updates customer charge for a specific customer.",
        "description" : "Updates customer charge for a customer with details such as tax type and tax group.",
        "operationId" : "updateCustomerCharge",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerCharge"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerChargeResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerChargeResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/addresses/smsAddresses" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves available list of customer sms communication addresses",
        "description" : "Retrieves the list of customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "getCustomerPhoneAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPhoneAddressResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Creates customer sms communication address",
        "description" : "Create customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "createCustomerPhoneAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPhoneAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPhoneAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/addresses/emailAddresses" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves available list of customer email communication addresses",
        "description" : "Retrieves the list of customer email communication address with details such as customer name and email references.",
        "operationId" : "getCustomerEmailAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerEmailAddressResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Creates customer email communication address",
        "description" : "Create customer email communication address with details such as customer name and email references.",
        "operationId" : "createCustomerEmailAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerEmailAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerEmailAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/addresses/printAddresses" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves available list of customer print communication addresses",
        "description" : "Retrieves the list of customer print communication addresses with details such as name, address, postcode and phone number.",
        "operationId" : "getCustomerPrintAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "Reference Id of address record",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPrintAddressResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Creates customer print communication address",
        "description" : "Create customer print communication address with details such as name, address, postcode and phone number.",
        "operationId" : "createCustomerPrintAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPrintAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPrintAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/addresses/{customerAddressId}/smsAddresses" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Updates customer sms communication address",
        "description" : "Update customer sms communication address with details such as name, idd prefix and mobile number.",
        "operationId" : "updateCustomerPhoneAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPhoneAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPhoneAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Deletes customer sms communication address",
        "description" : "Delete the specified customer sms communication address that are no longer used.",
        "operationId" : "deleteCustomerPhoneAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomerPhoneAddressDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPhoneAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPhoneAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/addresses/{customerAddressId}/emailAddresses" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Updates customer email communication address",
        "description" : "Update customer email communication address with details such as customer name and email references.",
        "operationId" : "updateCustomerEmailAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerEmailAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerEmailAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Deletes customer email communication address",
        "description" : "Delete the specified customer email communication address that are no longer used.",
        "operationId" : "deleteCustomerEmailAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomerEmailAddressDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerEmailAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerEmailAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/addresses/{customerAddressId}/printAddresses" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Updates customer print communication address",
        "description" : "Update customer print communication address with details such as name, address, postcode and phone number.",
        "operationId" : "updateCustomerPrintAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPrintAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPrintAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ ],
        "summary" : "Deletes customer print communication address",
        "description" : "Delete the specified customer print communication address that are no longer used.",
        "operationId" : "deleteCustomerPrintAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerAddressId",
          "in" : "path",
          "description" : "Identifier of the customer address table.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomerPrintAddressDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPrintAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPrintAddressResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/consents" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves customer consents details",
        "description" : "Retrieves the list of consent details for specific customer",
        "operationId" : "getCustomerConsents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyClassId",
          "in" : "query",
          "description" : "The identifier of a condition that is used to build a product",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerConsentsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerConsentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/fatca" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create FATCA customer supplementary information details",
        "description" : "Creates the FATCA customer supplementary information record that stores the related FATCA details for the customer",
        "operationId" : "createFatcaCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FatcaCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "FatcaCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/FatcaCustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update FATCA customer supplementary information details",
        "description" : "Update the FATCA customer supplementary information record that stores the related FATCA details for the customer",
        "operationId" : "updateFatcaCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FatcaCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "FatcaCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/FatcaCustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/portfolios/{portfolioId}/overdueSettlements" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Get overdue settlement",
        "description" : "Get overdue settlement",
        "operationId" : "getOverdueSettlements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "portfolioId",
          "in" : "path",
          "description" : "Id of the portfolio or security account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "brokerId",
          "in" : "query",
          "description" : "The identifier of the broker",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tradeDate",
          "in" : "query",
          "description" : "Standard date field which records trade date of the account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "depository",
          "in" : "query",
          "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "instrumentId",
          "in" : "query",
          "description" : "The identifier of the instrument",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deliveryInstruction",
          "in" : "query",
          "description" : "Customer's directions to a bank as to the disposition of funds and securities in the customer's account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionType",
          "in" : "query",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "The nominal quantity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "stockExchange",
          "in" : "query",
          "description" : "The stock exchange identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OverdueSettlementsResponse",
            "schema" : {
              "$ref" : "#/definitions/OverdueSettlementsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/accountServicingProviders/" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves other banks to connect to details",
        "description" : "Retrieves the list of other/external bank details",
        "operationId" : "getOtherBanksToConnectTo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "openBankingId",
          "in" : "query",
          "description" : "Identifies the open banking number of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "setActive",
          "in" : "query",
          "description" : "Flag to set the connection status to active",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extSourceProvider",
          "in" : "query",
          "description" : "Contains the name of the external source provider for the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OtherBanksToConnectToResponse",
            "schema" : {
              "$ref" : "#/definitions/OtherBanksToConnectToResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/prospects" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves prospect customer details of a customer",
        "description" : "Retrieves the details such as contact information, residence details, personal details and prospect legal details of a prospect customer",
        "operationId" : "getProspectCustomers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProspectCustomersResponse",
            "schema" : {
              "$ref" : "#/definitions/ProspectCustomersResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create a prospect customer",
        "description" : "Create a prospect customer with basic details such as contact information, residence details and prospect legal details",
        "operationId" : "createProspectCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProspectCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProspectCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/ProspectCustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/opportunities" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the sales opportunities for specific customers",
        "description" : "Retrieves the details of sales opportunities such as score, status and product details which are likely to be of interest to specific customers",
        "operationId" : "getCustomerOpportunities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerOpportunitiesResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerOpportunitiesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/requests" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves process workflows for a specific customer",
        "description" : "Retrieves process workflow details such as process name, activity details and status for a specific customer",
        "operationId" : "getCustomerRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRequestsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRequestsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/prospects/{prospectId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the details of the prospect customer",
        "description" : "Update a prospect customer with basic details such as contact information, residence details and prospect legal details",
        "operationId" : "updateProspectCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "prospectId",
          "in" : "path",
          "description" : "Indicates the status of an onboarding customer. Status can be PROSPECT while onboarding and ACTIVE when the prospect becomes a Customer.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProspectCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProspectCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/ProspectCustomerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/alertRequests" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves alert requests details",
        "description" : "Retrieves the alert subscription details for specific customer",
        "operationId" : "getAlertRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contractReference",
          "in" : "query",
          "description" : "Contains the contract reference",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscribe",
          "in" : "query",
          "description" : "Enables an alert service",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "alertRequestId",
          "in" : "query",
          "description" : "The unique identifier of the alert request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AlertRequestsResponse",
            "schema" : {
              "$ref" : "#/definitions/AlertRequestsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "CustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerResponseBody"
        }
      },
      "description" : "CustomerResponse"
    },
    "CustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 70
              },
              "customerNameAdditional" : {
                "type" : "string",
                "description" : "Continuation/Extension to the Customer Name.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "communicationDevices" : {
          "type" : "array",
          "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 17
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 50
              },
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "faxIds" : {
          "type" : "array",
          "description" : "The fax (facsimile) number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxId" : {
                "type" : "string",
                "description" : "The fax (facsimile) number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressCities" : {
          "type" : "array",
          "description" : "The town and/or city component of the base address of a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "addressCity" : {
                "type" : "string",
                "description" : "The town and/or city component of the base address of a customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "legalDetails" : {
          "type" : "array",
          "description" : "Indicates the legal document details of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 100
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 75
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "otherNationalityIds" : {
          "type" : "array",
          "description" : "Other Nationality of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherNationalityId" : {
                "type" : "string",
                "description" : "Other Nationality of the Customer",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "employDetails" : {
          "type" : "array",
          "description" : "Indicates the employment details of Customer like Status, title, occupation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "employStatus" : {
                "type" : "string",
                "description" : "Employment status of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employJobTitle" : {
                "type" : "string",
                "description" : "Employment Job Title of the Customer",
                "minLength" : 0,
                "maxLength" : 14
              },
              "employerName" : {
                "type" : "string",
                "description" : "Name of the customer's employer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employStartDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Starting date of the customer's employment"
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 14
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 19
              }
            }
          }
        },
        "residenceDetails" : {
          "type" : "array",
          "description" : "Indicates the residence details of Customer or entity like type, status, value.",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 19
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 22
              }
            }
          }
        },
        "relationshipDetails" : {
          "type" : "array",
          "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
          "items" : {
            "type" : "object",
            "properties" : {
              "jointRelationCode" : {
                "type" : "number",
                "description" : "The identifier of the relationship between joint holder and owner ",
                "minimum" : 0,
                "maximum" : 17
              },
              "jointCustomer" : {
                "type" : "number",
                "description" : "Joint or related customer id",
                "minimum" : 0,
                "maximum" : 13
              },
              "reverseJointRelationCode" : {
                "type" : "number",
                "description" : "Relationship code for the Related Customer",
                "minimum" : 0,
                "maximum" : 24
              },
              "jointRelationRoleId" : {
                "type" : "number",
                "description" : "Role of joint customer with the main customer",
                "minimum" : 0,
                "maximum" : 20
              },
              "jointRelationRoleNote" : {
                "type" : "string",
                "description" : "Additional notes about the role",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postingRestrictIds" : {
          "type" : "array",
          "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "postingRestrictId" : {
                "type" : "number",
                "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                "minimum" : 0,
                "maximum" : 17
              }
            }
          }
        },
        "taxIds" : {
          "type" : "array",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contactDetails" : {
          "type" : "array",
          "description" : "Indicates the contact details such as phone, office, mobile numbers, emails and other relevant contact information of customer or institutions",
          "items" : {
            "type" : "object",
            "properties" : {
              "contactType" : {
                "type" : "string",
                "description" : "Types of contacts available to users to communicate",
                "minLength" : 0,
                "maxLength" : 11
              },
              "iddPrefixPhone" : {
                "type" : "string",
                "description" : "Identifies the international calling prefix code of the phone or mobile number.",
                "minLength" : 0,
                "maxLength" : 16
              },
              "contactData" : {
                "type" : "string",
                "description" : "Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.",
                "minLength" : 0,
                "maxLength" : 254
              }
            }
          }
        },
        "language" : {
          "type" : "number",
          "description" : "The language that the contents of the field are displayed in.",
          "minimum" : 0,
          "maximum" : 8
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "customerStatus" : {
          "type" : "number",
          "description" : "The internal bank status of a customer",
          "minimum" : 0,
          "maximum" : 14
        },
        "customerMnemonic" : {
          "type" : "string",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 13
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 16
        },
        "industryId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "minimum" : 0,
          "maximum" : 10
        },
        "target" : {
          "type" : "number",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minimum" : 0,
          "maximum" : 6
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 8
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerCompany" : {
          "type" : "string",
          "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company",
          "minLength" : 0,
          "maxLength" : 15
        },
        "customerLiability" : {
          "type" : "number",
          "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
          "minimum" : 0,
          "maximum" : 17
        },
        "postCode" : {
          "type" : "number",
          "description" : "Identifies the address postal code for the customer.",
          "minimum" : 0,
          "maximum" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isKycComplete" : {
          "type" : "boolean",
          "description" : "Whether information related to the customer has been collected and verified"
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "amlLastResultDate" : {
          "type" : "string",
          "description" : "The last date when Anti Money Laundering result is performed and updated",
          "minLength" : 0,
          "maxLength" : 17
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isSecureMessage" : {
          "type" : "string",
          "description" : "If 'Yes', then the customer will receive a SECURE message.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 0,
          "maxLength" : 50
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 0,
          "maxLength" : 50
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 9
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 15
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "numberOfDependents" : {
          "type" : "number",
          "description" : "Specifies the number of dependents to the customer",
          "minimum" : 0,
          "maximum" : 18
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "Customer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerBody"
        }
      },
      "description" : "Customer"
    },
    "CustomerBody" : {
      "type" : "object",
      "properties" : {
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 70
              },
              "customerNameAdditional" : {
                "type" : "string",
                "description" : "Continuation/Extension to the Customer Name.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "communicationDevices" : {
          "type" : "array",
          "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 17
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 50
              },
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "faxIds" : {
          "type" : "array",
          "description" : "The fax (facsimile) number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxId" : {
                "type" : "string",
                "description" : "The fax (facsimile) number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressCities" : {
          "type" : "array",
          "description" : "The town and/or city component of the base address of a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "addressCity" : {
                "type" : "string",
                "description" : "The town and/or city component of the base address of a customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "legalDetails" : {
          "type" : "array",
          "description" : "Indicates the legal document details of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 100
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 75
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "otherNationalityIds" : {
          "type" : "array",
          "description" : "Other Nationality of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherNationalityId" : {
                "type" : "string",
                "description" : "Other Nationality of the Customer",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "employDetails" : {
          "type" : "array",
          "description" : "Indicates the employment details of Customer like Status, title, occupation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "employStatus" : {
                "type" : "string",
                "description" : "Employment status of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employJobTitle" : {
                "type" : "string",
                "description" : "Employment Job Title of the Customer",
                "minLength" : 0,
                "maxLength" : 14
              },
              "employerName" : {
                "type" : "string",
                "description" : "Name of the customer's employer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employStartDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Starting date of the customer's employment"
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 14
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 19
              }
            }
          }
        },
        "residenceDetails" : {
          "type" : "array",
          "description" : "Indicates the residence details of Customer or entity like type, status, value.",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 19
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 22
              }
            }
          }
        },
        "relationshipDetails" : {
          "type" : "array",
          "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
          "items" : {
            "type" : "object",
            "properties" : {
              "jointRelationCode" : {
                "type" : "number",
                "description" : "The identifier of the relationship between joint holder and owner ",
                "minimum" : 0,
                "maximum" : 17
              },
              "jointCustomer" : {
                "type" : "number",
                "description" : "Joint or related customer id",
                "minimum" : 0,
                "maximum" : 13
              },
              "reverseJointRelationCode" : {
                "type" : "number",
                "description" : "Relationship code for the Related Customer",
                "minimum" : 0,
                "maximum" : 24
              },
              "jointRelationRoleId" : {
                "type" : "number",
                "description" : "Role of joint customer with the main customer",
                "minimum" : 0,
                "maximum" : 20
              },
              "jointRelationRoleNote" : {
                "type" : "string",
                "description" : "Additional notes about the role",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postingRestrictIds" : {
          "type" : "array",
          "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "postingRestrictId" : {
                "type" : "number",
                "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                "minimum" : 0,
                "maximum" : 17
              }
            }
          }
        },
        "taxIds" : {
          "type" : "array",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "contactDetails" : {
          "type" : "array",
          "description" : "Indicates the contact details such as phone, office, mobile numbers, emails and other relevant contact information of customer or institutions",
          "items" : {
            "type" : "object",
            "properties" : {
              "contactType" : {
                "type" : "string",
                "description" : "Types of contacts available to users to communicate",
                "minLength" : 0,
                "maxLength" : 11
              },
              "iddPrefixPhone" : {
                "type" : "string",
                "description" : "Identifies the international calling prefix code of the phone or mobile number.",
                "minLength" : 0,
                "maxLength" : 16
              },
              "contactData" : {
                "type" : "string",
                "description" : "Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.",
                "minLength" : 0,
                "maxLength" : 254
              }
            }
          }
        },
        "language" : {
          "type" : "number",
          "description" : "The language that the contents of the field are displayed in.",
          "minimum" : 0,
          "maximum" : 8
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "customerStatus" : {
          "type" : "number",
          "description" : "The internal bank status of a customer",
          "minimum" : 0,
          "maximum" : 14
        },
        "customerMnemonic" : {
          "type" : "string",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 13
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 16
        },
        "industryId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "minimum" : 0,
          "maximum" : 10
        },
        "target" : {
          "type" : "number",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minimum" : 0,
          "maximum" : 6
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 8
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerCompany" : {
          "type" : "string",
          "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company",
          "minLength" : 0,
          "maxLength" : 15
        },
        "customerLiability" : {
          "type" : "number",
          "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
          "minimum" : 0,
          "maximum" : 17
        },
        "postCode" : {
          "type" : "number",
          "description" : "Identifies the address postal code for the customer.",
          "minimum" : 0,
          "maximum" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isKycComplete" : {
          "type" : "boolean",
          "description" : "Whether information related to the customer has been collected and verified"
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "amlLastResultDate" : {
          "type" : "string",
          "description" : "The last date when Anti Money Laundering result is performed and updated",
          "minLength" : 0,
          "maxLength" : 17
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isSecureMessage" : {
          "type" : "string",
          "description" : "If 'Yes', then the customer will receive a SECURE message.",
          "minLength" : 0,
          "maxLength" : 15
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 0,
          "maxLength" : 50
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 0,
          "maxLength" : 50
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 9
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 15
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "numberOfDependents" : {
          "type" : "number",
          "description" : "Specifies the number of dependents to the customer",
          "minimum" : 0,
          "maximum" : 18
        }
      }
    },
    "CustomerRelationship" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipBody"
        }
      },
      "description" : "CustomerRelationship"
    },
    "CustomerRelationshipBody" : {
      "type" : "object",
      "properties" : {
        "originatingRelation" : {
          "type" : "array",
          "description" : "Details about the Customer Relationships and Party Relationships",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationReference" : {
                "type" : "string",
                "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "party" : {
                "type" : "string",
                "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 13
              },
              "partyRelation" : {
                "type" : "string",
                "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                "minLength" : 0,
                "maxLength" : 13
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "partyEffectiveDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Effective date from which there is a relationship between originating party and the portfolio."
              },
              "relationships" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "relatedRelationReference" : {
                      "type" : "string",
                      "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedParty" : {
                      "type" : "string",
                      "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyId" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "relatedPartyRelation" : {
                      "type" : "string",
                      "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "relatedPartyRole" : {
                      "type" : "string",
                      "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "relatedPartyEffectiveDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "To state the effective date of the relationship."
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 13
                    }
                  }
                }
              }
            }
          }
        },
        "customerRelationGroupId" : {
          "type" : "number",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "minimum" : 0,
          "maximum" : 23
        },
        "customerRelationGroupName" : {
          "type" : "string",
          "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "purposeOfRelationship" : {
          "type" : "string",
          "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerRelationshipResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipResponseBody"
        }
      },
      "description" : "CustomerRelationshipResponse"
    },
    "CustomerRelationshipResponseBody" : {
      "type" : "object",
      "properties" : {
        "originatingRelation" : {
          "type" : "array",
          "description" : "Details about the Customer Relationships and Party Relationships",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationReference" : {
                "type" : "string",
                "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "party" : {
                "type" : "string",
                "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 13
              },
              "partyRelation" : {
                "type" : "string",
                "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                "minLength" : 0,
                "maxLength" : 13
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "partyEffectiveDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Effective date from which there is a relationship between originating party and the portfolio."
              },
              "relationships" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "relatedRelationReference" : {
                      "type" : "string",
                      "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedParty" : {
                      "type" : "string",
                      "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyId" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "relatedPartyRelation" : {
                      "type" : "string",
                      "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "relatedPartyRole" : {
                      "type" : "string",
                      "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "relatedPartyEffectiveDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "To state the effective date of the relationship."
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 13
                    }
                  }
                }
              }
            }
          }
        },
        "customerRelationGroupId" : {
          "type" : "number",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "minimum" : 0,
          "maximum" : 23
        },
        "customerRelationGroupName" : {
          "type" : "string",
          "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
          "minLength" : 0,
          "maxLength" : 40
        },
        "purposeOfRelationship" : {
          "type" : "string",
          "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "CustomerRelationshipResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipResponse1Body"
        }
      },
      "description" : "CustomerRelationshipResponse1"
    },
    "CustomerRelationshipResponse1Body" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "originatingRelation" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationReference" : {
                  "type" : "string",
                  "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                  "maxLength" : 35
                },
                "party" : {
                  "type" : "string",
                  "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                  "maxLength" : 35
                },
                "partyId" : {
                  "type" : "string",
                  "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                  "maxLength" : 10
                },
                "owningPercent" : {
                  "type" : "string",
                  "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                  "maxLength" : 6
                },
                "partyRelation" : {
                  "type" : "string",
                  "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                  "maxLength" : 35
                },
                "partyRole" : {
                  "type" : "string",
                  "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                  "maxLength" : 20
                },
                "partyEffectiveDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Effective date from which there is a relationship between originating party and the portfolio."
                },
                "relationships" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "relatedRelationReference" : {
                        "type" : "string",
                        "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                        "maxLength" : 35
                      },
                      "relatedParty" : {
                        "type" : "string",
                        "description" : "Whether the related party is an Active Customer or Individual/Corporate Prospect.Valid options - CUSTOMER, PERSON, ENTITY",
                        "maxLength" : 35
                      },
                      "relatedPartyId" : {
                        "type" : "string",
                        "description" : "Identifier of the Related Party",
                        "maxLength" : 10
                      },
                      "relatedPartyRelation" : {
                        "type" : "string",
                        "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                        "maxLength" : 3
                      },
                      "relatedPartyRole" : {
                        "type" : "string",
                        "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                        "maxLength" : 20
                      },
                      "relatedPartyEffectiveDate" : {
                        "type" : "string",
                        "format" : "date",
                        "description" : "To state the effective date of the relationship."
                      },
                      "owningPercent" : {
                        "type" : "string",
                        "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                        "maxLength" : 6
                      }
                    }
                  }
                }
              }
            }
          },
          "relationId" : {
            "type" : "string",
            "description" : "Identifier of the Customer Relationship and Party Relationship",
            "maxLength" : 35
          },
          "customerRelationGroupId" : {
            "type" : "string",
            "description" : "Identifies the key to Customer Relationship Group to form a relation",
            "maxLength" : 15
          },
          "customerRelationGroupName" : {
            "type" : "string",
            "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
            "maxLength" : 40
          },
          "purposeOfRelationship" : {
            "type" : "string",
            "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
            "maxLength" : 35
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "CustomerReportingStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerReportingStatusResponseBody"
        }
      },
      "description" : "CustomerReportingStatusResponse"
    },
    "CustomerReportingStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "crsStatuses" : {
            "type" : "array",
            "description" : "Holds the status of the customer as Reportable or Non-reportable.",
            "items" : {
              "type" : "object",
              "properties" : {
                "crsStatus" : {
                  "type" : "array",
                  "description" : "Holds the status of the customer as Reportable or Non-reportable.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "reportableJurisdictions" : {
            "type" : "array",
            "description" : "Indicates the residences of the participating jurisdictions of the reporting customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "reportableJurisdiction" : {
                  "type" : "array",
                  "description" : "Indicates the residences of the participating jurisdictions of the reporting customer.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "fatcaStatus" : {
            "type" : "string",
            "description" : "Specifies the Fatca status or Account Classification of the client. ",
            "maxLength" : 2
          },
          "postingRestriction" : {
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "amlResult" : {
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering."
          }
        }
      }
    },
    "CustomerSweepsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerSweepsResponseBody"
        }
      },
      "description" : "CustomerSweepsResponse"
    },
    "CustomerSweepsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "toAccountDetails" : {
            "type" : "array",
            "description" : "Creditor unique account details",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                },
                "minimumBalance" : {
                  "type" : "string",
                  "description" : "The minimum account balance required"
                },
                "maximumBalance" : {
                  "type" : "string",
                  "description" : "The maximum account balance allowed"
                }
              }
            }
          },
          "fromAccountDetails" : {
            "type" : "array",
            "description" : "Debit account details for sweep record",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                }
              }
            }
          },
          "sweepId" : {
            "type" : "string",
            "description" : "Identifier of the Retail account sweep",
            "maxLength" : 35
          },
          "sweepType" : {
            "type" : "string",
            "description" : "Sweep types defined to the user"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction."
          },
          "chargeId" : {
            "type" : "string",
            "description" : "This indicates the charge code which will be triggered for payment stop instruction. Applicable when financial institutions would like to charge for stop payment of cheque etc. "
          },
          "chargeAmount" : {
            "type" : "string",
            "description" : "Retrieves the Charge Amount after redeem"
          },
          "chargeAccountId" : {
            "type" : "string",
            "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account"
          }
        }
      }
    },
    "CustomerDeliveryOptionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryOptionsResponseBody"
        }
      },
      "description" : "CustomerDeliveryOptionsResponse"
    },
    "CustomerDeliveryOptionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "deliveryPreferences" : {
            "type" : "array",
            "description" : "Delivery preferences to be made for this transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "messageGroup" : {
                  "type" : "string",
                  "description" : "Message group name that provides details of all Messages to be triggered.",
                  "maxLength" : 35
                },
                "carrier" : {
                  "type" : "string",
                  "description" : "Carrier to be used for sending messages",
                  "maxLength" : 10
                },
                "isRequired" : {
                  "type" : "boolean",
                  "description" : "Indicates if the related delivery carrier details will be added or removed as a preferred carrier for communication"
                },
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 3
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 35
          }
        }
      }
    },
    "CustomerDigitalChannelsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDigitalChannelsResponseBody"
        }
      },
      "description" : "CustomerDigitalChannelsResponse"
    },
    "CustomerDigitalChannelsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "digitalChannels" : {
            "type" : "array",
            "description" : "Specific channels details for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "channelName" : {
                  "type" : "string",
                  "description" : "Name of the (digital) channel registered by the Customer",
                  "maxLength" : 20
                },
                "status" : {
                  "type" : "string",
                  "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.",
                  "maxLength" : 35
                },
                "productLine" : {
                  "type" : "string",
                  "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                  "maxLength" : 35
                },
                "arrangementId" : {
                  "type" : "string",
                  "description" : "Indicates an unique identifier of an account",
                  "maxLength" : 35
                },
                "startDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Contains the date on which the transaction or payment gets initiated."
                },
                "endDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                },
                "userType" : {
                  "type" : "string",
                  "description" : "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                  "maxLength" : 12
                },
                "loginMethod" : {
                  "type" : "string",
                  "description" : "The type of login method e.g. password, PIN, OTP",
                  "maxLength" : 20
                },
                "lastSignOnDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Last date and time the user last logged in."
                }
              }
            }
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not."
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not."
          },
          "externalUserId" : {
            "type" : "string",
            "description" : "Contains the external user identifier for which the consent is created.",
            "maxLength" : 70
          },
          "externalUserName" : {
            "type" : "string",
            "description" : "External or Digital Channel User Name",
            "maxLength" : 70
          },
          "authenticationType" : {
            "type" : "string",
            "description" : "The type of authentication for this external user. It should be either External or User Maintained.",
            "maxLength" : 35
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 10
          }
        }
      }
    },
    "Messages" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MessagesBody"
        }
      },
      "description" : "Messages"
    },
    "MessagesBody" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message ",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "toCustomerId" : {
          "type" : "string",
          "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "MessagesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MessagesResponseBody"
        }
      },
      "description" : "MessagesResponse"
    },
    "MessagesResponseBody" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message ",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "toCustomerId" : {
          "type" : "string",
          "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "JointCustomerDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/JointCustomerDetailsResponseBody"
        }
      },
      "description" : "JointCustomerDetailsResponse"
    },
    "JointCustomerDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "jointCustomerDetails" : {
            "type" : "array",
            "description" : "Identifies the delivery options available to the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "jointRelationCode" : {
                  "type" : "number",
                  "description" : "The identifier of the relationship between joint holder and owner ",
                  "maximum" : 3
                },
                "jointRelationDisplayName" : {
                  "type" : "string",
                  "description" : "Display name of Joint Relationship identifier",
                  "maxLength" : 3
                },
                "jointCustomer" : {
                  "type" : "number",
                  "description" : "Joint or related customer id",
                  "maximum" : 10
                },
                "jointCustomerName" : {
                  "type" : "string",
                  "description" : "Name of Joint Customer",
                  "maxLength" : 10
                },
                "reverseJointRelationCode" : {
                  "type" : "number",
                  "description" : "Relationship code for the Related Customer",
                  "maximum" : 3
                },
                "reverseJointRelationName" : {
                  "type" : "string",
                  "description" : "Describes the Relation code and is used for the enrichment of the code for reverse joint relation.",
                  "maxLength" : 3
                },
                "deliveryOption" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "jointRelationRoleId" : {
                        "type" : "number",
                        "description" : "Role of joint customer with the main customer",
                        "maximum" : 20
                      },
                      "jointRoleDisplayName" : {
                        "type" : "string",
                        "description" : "Description of the joint customer role.",
                        "maxLength" : 20
                      },
                      "jointRelationRoleNotes" : {
                        "type" : "string",
                        "description" : "Additional notes about the role",
                        "maxLength" : 35
                      },
                      "jointRelationDeliveryOption" : {
                        "type" : "string",
                        "description" : "This is used to specify what delivery addressing is to be used for the link customer. ",
                        "maxLength" : 8
                      },
                      "jointRelationRoleInfo" : {
                        "type" : "string",
                        "description" : "Additional information of the role.",
                        "maxLength" : 35
                      }
                    }
                  }
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          }
        }
      }
    },
    "CustomerKYCDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerKYCDetailsResponseBody"
        }
      },
      "description" : "CustomerKYCDetailsResponse"
    },
    "CustomerKYCDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "contactDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date that first contact was made with the Customer."
          },
          "introducer" : {
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank",
            "maxLength" : 35
          },
          "kycRelationship" : {
            "type" : "string",
            "description" : "Indicates the Customer Relationship details of the customer",
            "maxLength" : 35
          },
          "isKycComplete" : {
            "type" : "boolean",
            "description" : "Whether information related to the customer has been collected and verified"
          },
          "kycLastReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date customer KYC information was last reviewed"
          },
          "kycNextSystemReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date system has calculated customer should next be reviewed."
          },
          "kycNextReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Next date of KYC review defined manually by the User"
          },
          "amlCheck" : {
            "type" : "string",
            "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
            "maxLength" : 4
          },
          "amlResult" : {
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering.",
            "maxLength" : 14
          },
          "amlLastResultDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The last date when Anti Money Laundering result is performed and updated"
          }
        }
      }
    },
    "CustomerPersonalDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPersonalDetailsResponseBody"
        }
      },
      "description" : "CustomerPersonalDetailsResponse"
    },
    "CustomerPersonalDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "employDetails" : {
            "type" : "array",
            "description" : "Communication Address of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "employStatus" : {
                  "type" : "string",
                  "description" : "Employment status of the customer",
                  "maxLength" : 35
                },
                "occupation" : {
                  "type" : "string",
                  "description" : "Occupation of the customer",
                  "maxLength" : 35
                },
                "employJobTitle" : {
                  "type" : "string",
                  "description" : "Employment Job Title of the Customer",
                  "maxLength" : 10
                },
                "employerName" : {
                  "type" : "string",
                  "description" : "Name of the customer's employer",
                  "maxLength" : 35
                },
                "employStartDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Starting date of the customer's employment"
                },
                "salaryCurrency" : {
                  "type" : "string",
                  "description" : "Currency in which the Salary information of the customer is maintained",
                  "maxLength" : 3
                },
                "salaryAmount" : {
                  "type" : "number",
                  "description" : "Gross Salary details of the customer",
                  "maximum" : 19
                },
                "employerBusiness" : {
                  "type" : "string",
                  "description" : "The business of customer's employer involved.",
                  "maxLength" : 35
                },
                "annualBonus" : {
                  "type" : "number",
                  "description" : "Indicates the Annual bonus received by customer",
                  "maximum" : 19
                },
                "salaryFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the payment frequency of salary.",
                  "maxLength" : 17
                },
                "netMonthlyIncome" : {
                  "type" : "string",
                  "description" : "Net income earned by customer each month.",
                  "maxLength" : 19
                },
                "netMonthlyExpense" : {
                  "type" : "string",
                  "description" : "Net expenses of customer each month.",
                  "maxLength" : 19
                },
                "Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "employerAddress" : {
                        "type" : "string",
                        "description" : "The address of the customer's employer.",
                        "maxLength" : 35
                      }
                    }
                  }
                }
              }
            }
          },
          "residenceDetails" : {
            "type" : "array",
            "description" : "Indicates the residence details of Customer or entity like type, status, value.",
            "items" : {
              "type" : "object",
              "properties" : {
                "residenceStatus" : {
                  "type" : "string",
                  "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                  "maxLength" : 35
                },
                "residenceType" : {
                  "type" : "string",
                  "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                  "maxLength" : 35
                },
                "residenceValue" : {
                  "type" : "number",
                  "description" : "Market Value of the customer's residence",
                  "maximum" : 19
                },
                "residenceMortgageValue" : {
                  "type" : "number",
                  "description" : "Mortgage value of the residence property of the customer",
                  "maximum" : 19
                },
                "residenceSince" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "The date since the user has obtained the residence."
                }
              }
            }
          },
          "communicationDevice" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
            "items" : {
              "type" : "object",
              "properties" : {
                "communicationType" : {
                  "type" : "string",
                  "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                  "maxLength" : 35
                },
                "preferredChannel" : {
                  "type" : "string",
                  "description" : "Preferred method of contact to the customer",
                  "maxLength" : 20
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "isSecureMessage" : {
            "type" : "boolean",
            "description" : "If 'Yes', then the customer will receive a SECURE message."
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not."
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not."
          },
          "customerSegment" : {
            "type" : "string",
            "description" : "Segment of the customer.",
            "maxLength" : 6
          },
          "customerVisitCount" : {
            "type" : "number",
            "description" : "Count of the Number of visits to the bank."
          },
          "customerRecentVisitDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Recently visited date of the customer to the bank."
          },
          "assetCurrency" : {
            "type" : "string",
            "description" : "Currency of the asset."
          },
          "assetAmount" : {
            "type" : "number",
            "description" : "The asset amount."
          },
          "customerLiability" : {
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country."
          }
        }
      }
    },
    "CustomerPostingRestrictionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPostingRestrictionsResponseBody"
        }
      },
      "description" : "CustomerPostingRestrictionsResponse"
    },
    "CustomerPostingRestrictionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "postingRestricts" : {
            "type" : "array",
            "description" : "Identifier of the Posting Restricts imposed on a customer or account",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "type" : "string",
                  "description" : "Name of the customer",
                  "maxLength" : 35
                },
                "postingRestrictId" : {
                  "type" : "string",
                  "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                  "maxLength" : 2
                },
                "postingRestrictDisplayName" : {
                  "type" : "string",
                  "description" : "Display name of Posting Restriction, if any, applicable for the customer",
                  "maxLength" : 2
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          }
        }
      }
    },
    "PartyRelationship" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipBody"
        }
      },
      "description" : "PartyRelationship"
    },
    "PartyRelationshipBody" : {
      "type" : "object",
      "properties" : {
        "partyDisplayNames" : {
          "type" : "array",
          "description" : "A description of the Party Relationship",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyDisplayName" : {
                "type" : "string",
                "description" : "A description of the Party Relationship",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "partyRelationships" : {
          "type" : "array",
          "description" : "Indicates the party relationship details of Person,Entity or Customer like party type, party relation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyType" : {
                "type" : "string",
                "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 20
              },
              "relatedPartyType" : {
                "type" : "string",
                "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 16
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 20
              },
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 16
              },
              "relatedAs" : {
                "type" : "string",
                "description" : "Entity Relationship with the partyType",
                "minLength" : 0,
                "maxLength" : 13
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 13
              }
            }
          }
        }
      }
    },
    "PartyRelationshipResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipResponseBody"
        }
      },
      "description" : "PartyRelationshipResponse"
    },
    "PartyRelationshipResponseBody" : {
      "type" : "object",
      "properties" : {
        "partyDisplayNames" : {
          "type" : "array",
          "description" : "A description of the Party Relationship",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyDisplayName" : {
                "type" : "string",
                "description" : "A description of the Party Relationship",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "partyRelationships" : {
          "type" : "array",
          "description" : "Indicates the party relationship details of Person,Entity or Customer like party type, party relation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyType" : {
                "type" : "string",
                "description" : "Defines the application id, to which the party id belongs to. Example, CUSTOMER/PERSON.ENTITY.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 20
              },
              "relatedPartyType" : {
                "type" : "string",
                "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 16
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 20
              },
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 16
              },
              "relatedAs" : {
                "type" : "string",
                "description" : "Entity Relationship with the partyType",
                "minLength" : 0,
                "maxLength" : 13
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 13
              }
            }
          }
        }
      }
    },
    "CustomerCreditCardsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerCreditCardsResponseBody"
        }
      },
      "description" : "CustomerCreditCardsResponse"
    },
    "CustomerCreditCardsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
            "maxLength" : 12
          },
          "cardType" : {
            "type" : "string",
            "description" : "The type of the card, e.g. Visa, Mastercard, etc."
          },
          "cardNumber" : {
            "type" : "string",
            "description" : "Cards issued are defined with an identifier consisting of three elements. The card type, a full stop and the card number. The card number may be any alphanumeric construction, commonly a 16 numeric number is used. VISA.5332870296579001. The id must be in the form of:  CCCC.AAAAAAAAAAAAAAAA  Where CCCC is the card type and AAAAAAAAAAAAAAAA is a unique identifier.  Examples:   VISA.1234567887654321   GC.1111222233334444   AB21.1111111122222222",
            "maxLength" : 25
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "onlineActualBalance" : {
            "type" : "number",
            "description" : "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date."
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the item was issued."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          },
          "limit" : {
            "type" : "string",
            "description" : "Limit details for the customer"
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified.",
            "maxLength" : 35
          }
        }
      }
    },
    "StandingOrdersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/StandingOrdersResponseBody"
        }
      },
      "description" : "StandingOrdersResponse"
    },
    "StandingOrdersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "type" : "object",
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes",
                  "maxLength" : 35
                }
              }
            }
          },
          "accountWithBanks" : {
            "type" : "array",
            "description" : "Identifies the bank where the beneficiary maintains his account",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountWithBank" : {
                  "type" : "string",
                  "description" : "Identifies the bank where the beneficiary maintains his account",
                  "maxLength" : 35
                }
              }
            }
          },
          "standingOrderId" : {
            "type" : "string",
            "description" : "The unique standing order identifier",
            "maxLength" : 35
          },
          "orderType" : {
            "type" : "string",
            "description" : "Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled.",
            "maxLength" : 5
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Method chosen to make the payment",
            "maxLength" : 4
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 18
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
            "maxLength" : 50
          },
          "counterPartyAccountId" : {
            "type" : "string",
            "description" : "The identifier of the counter party's account",
            "maxLength" : 35
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the reference of the financial institution that allows access to the beneficiary information",
            "maxLength" : 17
          },
          "percentageOverCurrentBalance" : {
            "type" : "string",
            "description" : "This is used to specify a percentage value, which would be applied on the accounts excess amount(Accounts cleared balance - CURRENT.AMOUNT) to arrive at ",
            "maxLength" : 6
          },
          "payTo" : {
            "type" : "string",
            "description" : "This field holds the reason for change in IB.STATUS field."
          },
          "currentFrequencyDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the date based on current frequency"
          },
          "currentFrequency" : {
            "type" : "string",
            "description" : "Indicates the current frequency of the standing order",
            "maxLength" : 35
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "currentEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed."
          },
          "futureNotice" : {
            "type" : "string",
            "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided.",
            "maxLength" : 10
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction"
          },
          "creditAccountName" : {
            "type" : "string",
            "description" : "Account name details of the creditor"
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. "
          },
          "stoStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "STO initiation start date"
          },
          "beneficiaryBIC" : {
            "type" : "string",
            "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
            "maxLength" : 11
          },
          "beneficiaryIBAN" : {
            "type" : "string",
            "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
            "maxLength" : 35
          },
          "beneficiaryOurCharges" : {
            "type" : "string",
            "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 3
          },
          "paymentOrderProductName" : {
            "type" : "string",
            "description" : "Indicates the name of payment order product ",
            "maxLength" : 10
          },
          "beneficiaryCountryId" : {
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU",
            "maxLength" : 2
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 6
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified.",
            "maxLength" : 35
          },
          "recordStatus" : {
            "type" : "string",
            "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
            "maxLength" : 6
          }
        }
      }
    },
    "DirectDebitsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DirectDebitsResponseBody"
        }
      },
      "description" : "DirectDebitsResponse"
    },
    "DirectDebitsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "directDebitId" : {
            "type" : "string",
            "description" : "The unique identifier of the direct debit mandate. ",
            "maxLength" : 25
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "customerMnemonic" : {
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer",
            "maxLength" : 10
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction",
            "maxLength" : 35
          },
          "creditorName" : {
            "type" : "string",
            "description" : "Name or short title of the credit account",
            "maxLength" : 70
          },
          "sortCode" : {
            "type" : "string",
            "description" : "Contains bank sort code or iban branch identifier for the account",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 10
          },
          "currency" : {
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "maxLength" : 3
          },
          "standAloneDdi" : {
            "type" : "string",
            "description" : "Defines whether the direct debit mandate is for stand-alone purpose i.e. one-off instruction",
            "maxLength" : 1
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 19
          },
          "status" : {
            "type" : "string",
            "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.",
            "maxLength" : 35
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
            "maxLength" : 50
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "currencyName" : {
            "type" : "string",
            "description" : "The name that is displayed for the currency"
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified."
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "DeliveryPreference" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DeliveryPreferenceBody"
        }
      },
      "description" : "DeliveryPreference"
    },
    "DeliveryPreferenceBody" : {
      "type" : "object",
      "properties" : {
        "messageGroup" : {
          "type" : "array",
          "description" : "Message group name that provides details of all Messages to be triggered.",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "messageGroupDetail" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "description" : "Indicates the Role of the Customer",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "carrier" : {
                      "type" : "string",
                      "description" : "Carrier to be used for sending messages",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "format" : {
                      "type" : "string",
                      "description" : "Indicates the formatting version to be used for the delivery message",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "copies" : {
                      "type" : "string",
                      "description" : "Specifies the number of copies of a message required",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "language" : {
                      "type" : "string",
                      "description" : "The language that the contents of the field are displayed in.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "holdOutput" : {
                      "type" : "string",
                      "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "holdMailStartDate" : {
                      "type" : "string",
                      "description" : "Defines the start date of the hold period when the delivery message is to be held in the system",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "holdMailEndDate" : {
                      "type" : "string",
                      "description" : "Defines the end date of the hold period when the delivery message is to be held in the system",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "holdMailOption" : {
                      "type" : "string",
                      "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "endDate" : {
                      "type" : "string",
                      "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "otherMessagesDetail" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrier" : {
                "type" : "string",
                "description" : "Carrier to be used for sending messages",
                "minLength" : 0,
                "maxLength" : 10
              },
              "required" : {
                "type" : "string",
                "description" : "Flag to set the channel to communicate",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrierPosition" : {
                "type" : "string",
                "description" : "Identifies the position of the carrier in the arrangement",
                "minLength" : 0,
                "maxLength" : 15
              },
              "format" : {
                "type" : "string",
                "description" : "Indicates the formatting version to be used for the delivery message",
                "minLength" : 0,
                "maxLength" : 6
              },
              "copies" : {
                "type" : "string",
                "description" : "Specifies the number of copies of a message required",
                "minLength" : 0,
                "maxLength" : 6
              },
              "language" : {
                "type" : "string",
                "description" : "The language that the contents of the field are displayed in.",
                "minLength" : 0,
                "maxLength" : 8
              },
              "holdOutput" : {
                "type" : "string",
                "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "holdMailStartDate" : {
                "type" : "string",
                "description" : "Defines the start date of the hold period when the delivery message is to be held in the system",
                "minLength" : 0,
                "maxLength" : 17
              },
              "holdMailEndDate" : {
                "type" : "string",
                "description" : "Defines the end date of the hold period when the delivery message is to be held in the system",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holdMailOption" : {
                "type" : "string",
                "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing",
                "minLength" : 0,
                "maxLength" : 35
              },
              "startDate" : {
                "type" : "string",
                "description" : "Contains the date on which the transaction or payment gets initiated.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "endDate" : {
                "type" : "string",
                "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "applyOtherMessages" : {
          "type" : "string",
          "description" : "Identifies the default customer preferences for receiving any message group for which specific preferences have not been defined",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "DeliveryPreferenceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DeliveryPreferenceResponseBody"
        }
      },
      "description" : "DeliveryPreferenceResponse"
    },
    "DeliveryPreferenceResponseBody" : {
      "type" : "object",
      "properties" : {
        "messageGroup" : {
          "type" : "array",
          "description" : "Message group name that provides details of all Messages to be triggered.",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "messageGroupDetail" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "description" : "Indicates the Role of the Customer",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "carrier" : {
                      "type" : "string",
                      "description" : "Carrier to be used for sending messages",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "format" : {
                      "type" : "string",
                      "description" : "Indicates the formatting version to be used for the delivery message",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "copies" : {
                      "type" : "string",
                      "description" : "Specifies the number of copies of a message required",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "language" : {
                      "type" : "string",
                      "description" : "The language that the contents of the field are displayed in.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "holdOutput" : {
                      "type" : "string",
                      "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "holdMailStartDate" : {
                      "type" : "string",
                      "description" : "Defines the start date of the hold period when the delivery message is to be held in the system",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "holdMailEndDate" : {
                      "type" : "string",
                      "description" : "Defines the end date of the hold period when the delivery message is to be held in the system",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "holdMailOption" : {
                      "type" : "string",
                      "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "endDate" : {
                      "type" : "string",
                      "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "otherMessagesDetail" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrier" : {
                "type" : "string",
                "description" : "Carrier to be used for sending messages",
                "minLength" : 0,
                "maxLength" : 10
              },
              "required" : {
                "type" : "string",
                "description" : "Flag to set the channel to communicate",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrierPosition" : {
                "type" : "string",
                "description" : "Identifies the position of the carrier in the arrangement",
                "minLength" : 0,
                "maxLength" : 15
              },
              "format" : {
                "type" : "string",
                "description" : "Indicates the formatting version to be used for the delivery message",
                "minLength" : 0,
                "maxLength" : 6
              },
              "copies" : {
                "type" : "string",
                "description" : "Specifies the number of copies of a message required",
                "minLength" : 0,
                "maxLength" : 6
              },
              "language" : {
                "type" : "string",
                "description" : "The language that the contents of the field are displayed in.",
                "minLength" : 0,
                "maxLength" : 8
              },
              "holdOutput" : {
                "type" : "string",
                "description" : "Defines whether the output delivery message is to be held by the system before processing. Allowed option is Y.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "holdMailStartDate" : {
                "type" : "string",
                "description" : "Defines the start date of the hold period when the delivery message is to be held in the system",
                "minLength" : 0,
                "maxLength" : 17
              },
              "holdMailEndDate" : {
                "type" : "string",
                "description" : "Defines the end date of the hold period when the delivery message is to be held in the system",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holdMailOption" : {
                "type" : "string",
                "description" : "Defines the hold options to be used on the delivery messages during the hold period. Options are HELD - hold the delivery messages; DELETE - aviod generation of delivery messages; CLEAR - automatically clear hold messages after hold period expiry and SEND - automatically push the held messages for processing",
                "minLength" : 0,
                "maxLength" : 35
              },
              "startDate" : {
                "type" : "string",
                "description" : "Contains the date on which the transaction or payment gets initiated.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "endDate" : {
                "type" : "string",
                "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "applyOtherMessages" : {
          "type" : "string",
          "description" : "Identifies the default customer preferences for receiving any message group for which specific preferences have not been defined",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "Limit" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LimitBody"
        }
      },
      "description" : "Limit"
    },
    "LimitBody" : {
      "type" : "object",
      "properties" : {
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 9
              },
              "countryPercent" : {
                "type" : "string",
                "description" : "Percent of risk associated for that country",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "grades" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitGrade" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 10
              },
              "gradePercent" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "commodities" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "commodity" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 9
              },
              "commodityPercent" : {
                "type" : "string",
                "description" : "Indicates the percentage involvement in the Commodity (Industry)",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "onlineLimitDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the limit available for use"
        },
        "availableMarker" : {
          "type" : "string",
          "description" : "Whether the limit available for use or not",
          "minLength" : 0,
          "maxLength" : 15
        },
        "allowNetting" : {
          "type" : "string",
          "description" : "Whether the customer for this liability can allow netting of both credit and debit accounts",
          "minLength" : 0,
          "maxLength" : 12
        },
        "onlineUpdate" : {
          "type" : "string",
          "description" : "This field controls online update of fed (cash) type of collateral",
          "minLength" : 0,
          "maxLength" : 12
        },
        "limitProductId" : {
          "type" : "string",
          "description" : "Identifier of the Limit Products",
          "minLength" : 0,
          "maxLength" : 14
        },
        "checkLimit" : {
          "type" : "string",
          "description" : "Defines whether overrides should appear when default LIMIT records are used or defaulted",
          "minLength" : 0,
          "maxLength" : 10
        },
        "band" : {
          "type" : "string",
          "description" : "Limit check update set",
          "minLength" : 0,
          "maxLength" : 4
        },
        "reducingLimit" : {
          "type" : "string",
          "description" : "Identifies if the Limit reference defined in the ID is a 'reducing' or 'non-reducing' limit type",
          "minLength" : 0,
          "maxLength" : 13
        },
        "internalAmount" : {
          "type" : "string",
          "description" : "Indicates the amount allocated to the Credit Limit by the Bank",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "LimitResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LimitResponseBody"
        }
      },
      "description" : "LimitResponse"
    },
    "LimitResponseBody" : {
      "type" : "object",
      "properties" : {
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 2
              },
              "countryPercent" : {
                "type" : "string",
                "description" : "Percent of risk associated for that country",
                "minLength" : 0,
                "maxLength" : 3
              }
            }
          }
        },
        "grades" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitGrade" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 4
              },
              "gradePercent" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 3
              }
            }
          }
        },
        "commodities" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "commodity" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 4
              },
              "commodityPercent" : {
                "type" : "string",
                "description" : "Indicates the percentage involvement in the Commodity (Industry)",
                "minLength" : 0,
                "maxLength" : 3
              }
            }
          }
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "onlineLimitDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the limit available for use"
        },
        "availableMarker" : {
          "type" : "string",
          "description" : "Whether the limit available for use or not",
          "minLength" : 0,
          "maxLength" : 1
        },
        "allowNetting" : {
          "type" : "string",
          "description" : "Whether the customer for this liability can allow netting of both credit and debit accounts",
          "minLength" : 0,
          "maxLength" : 3
        },
        "onlineUpdate" : {
          "type" : "string",
          "description" : "This field controls online update of fed (cash) type of collateral",
          "minLength" : 0,
          "maxLength" : 1
        },
        "limitProductId" : {
          "type" : "string",
          "description" : "Identifier of the Limit Products",
          "minLength" : 0,
          "maxLength" : 12
        },
        "checkLimit" : {
          "type" : "string",
          "description" : "Defines whether overrides should appear when default LIMIT records are used or defaulted",
          "minLength" : 0,
          "maxLength" : 8
        },
        "band" : {
          "type" : "string",
          "description" : "Limit check update set",
          "minLength" : 0,
          "maxLength" : 2
        },
        "reducingLimit" : {
          "type" : "string",
          "description" : "Identifies if the Limit reference defined in the ID is a 'reducing' or 'non-reducing' limit type",
          "minLength" : 0,
          "maxLength" : 7
        },
        "internalAmount" : {
          "type" : "string",
          "description" : "Indicates the amount allocated to the Credit Limit by the Bank",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "CustomerExitStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusResponseBody"
        }
      },
      "description" : "CustomerExitStatusResponse"
    },
    "CustomerExitStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerType" : {
            "type" : "string",
            "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
            "maxLength" : 35
          },
          "exitStatus" : {
            "type" : "string",
            "description" : "The field reflects the customer exit status of a customer or prospect",
            "maxLength" : 35
          },
          "exitReason" : {
            "type" : "string",
            "description" : "The field reflects the customer exit reason of the customer or prospect",
            "maxLength" : 80
          },
          "exitDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The field reflects the customer exit date of the customer or prospect"
          }
        }
      }
    },
    "CustomerExitStatus" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusBody"
        }
      },
      "description" : "CustomerExitStatus"
    },
    "CustomerExitStatusBody" : {
      "type" : "object",
      "properties" : {
        "exitStatus" : {
          "type" : "string",
          "description" : "The field reflects the customer exit status of a customer or prospect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "exitReason" : {
          "type" : "string",
          "description" : "The field reflects the customer exit reason of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 80
        }
      }
    },
    "CustomerExitStatusResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusResponse1Body"
        }
      },
      "description" : "CustomerExitStatusResponse1"
    },
    "CustomerExitStatusResponse1Body" : {
      "type" : "object",
      "properties" : {
        "exitStatus" : {
          "type" : "string",
          "description" : "The field reflects the customer exit status of a customer or prospect",
          "minLength" : 0,
          "maxLength" : 35
        },
        "exitReason" : {
          "type" : "string",
          "description" : "The field reflects the customer exit reason of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 80
        }
      }
    },
    "CustomerExitStatusParamResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusParamResponseBody"
        }
      },
      "description" : "CustomerExitStatusParamResponse"
    },
    "CustomerExitStatusParamResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "allowedExitReasons" : {
            "type" : "array",
            "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "allowedExitReason" : {
                  "type" : "string",
                  "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
                  "maxLength" : 70
                }
              }
            }
          },
          "customerExitStatusId" : {
            "type" : "string",
            "description" : "The field reflects the exit status ID of a customer or prospect from the parameterization table CUSTOMER.EXIT.STATUS",
            "maxLength" : 35
          },
          "exitStatusDescription" : {
            "type" : "string",
            "description" : "The field reflects the description of, respective customer exit status",
            "maxLength" : 70
          },
          "allowRemoveExitStatus" : {
            "type" : "string",
            "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerExitStatusParam" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusParamBody"
        }
      },
      "description" : "CustomerExitStatusParam"
    },
    "CustomerExitStatusParamBody" : {
      "type" : "object",
      "properties" : {
        "allowedExitReasons" : {
          "type" : "array",
          "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "allowedExitReason" : {
                "type" : "string",
                "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "exitStatusDescription" : {
          "type" : "string",
          "description" : "The field reflects the description of, respective customer exit status",
          "minLength" : 0,
          "maxLength" : 70
        },
        "customerType" : {
          "type" : "string",
          "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "allowRemoveExitStatus" : {
          "type" : "string",
          "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerExitStatusParamResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExitStatusParamResponse1Body"
        }
      },
      "description" : "CustomerExitStatusParamResponse1"
    },
    "CustomerExitStatusParamResponse1Body" : {
      "type" : "object",
      "properties" : {
        "allowedExitReasons" : {
          "type" : "array",
          "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "allowedExitReason" : {
                "type" : "string",
                "description" : "The field indicates the reason for exiting a relation with a prospect or customer.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "exitStatusDescription" : {
          "type" : "string",
          "description" : "The field reflects the description of, respective customer exit status",
          "minLength" : 0,
          "maxLength" : 70
        },
        "customerType" : {
          "type" : "string",
          "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
          "minLength" : 0,
          "maxLength" : 12
        },
        "allowRemoveExitStatus" : {
          "type" : "string",
          "description" : "Specifies if the bank user will be allowed to re-open a professional relationship with the respective prospect or customer by removing its exit status",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerInformationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerInformationResponseBody"
        }
      },
      "description" : "CustomerInformationResponse"
    },
    "CustomerInformationResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "Communication Address of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 35
                },
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 35
                },
                "addressCity" : {
                  "type" : "string",
                  "description" : "The town and/or city component of the base address of a customer",
                  "maxLength" : 35
                },
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                },
                "country" : {
                  "type" : "string",
                  "description" : "Identifies the country of the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "contactDetails" : {
            "type" : "array",
            "description" : "Indicates the contact details such as phone, office, mobile numbers, emails and other relevant contact information of customer or institutions",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumbers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "phoneNumber" : {
                        "type" : "string",
                        "description" : "The phone number of the customer or prospect",
                        "maxLength" : 17
                      }
                    }
                  }
                },
                "officePhoneNumbers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "officePhoneNumber" : {
                        "type" : "string",
                        "description" : "The office phone number of the customer",
                        "maxLength" : 17
                      }
                    }
                  }
                },
                "mobilePhoneNumbers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "mobilePhoneNumber" : {
                        "type" : "string",
                        "description" : "Represents the phone number of a customer",
                        "maxLength" : 17
                      }
                    }
                  }
                },
                "emails" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "email" : {
                        "type" : "string",
                        "description" : "Email Identifier of the Customer",
                        "maxLength" : 50
                      }
                    }
                  }
                },
                "addressLocations" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "addressLocation" : {
                        "type" : "string",
                        "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
                        "maxLength" : 10
                      }
                    }
                  }
                },
                "Contacts" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "contactType" : {
                        "type" : "string",
                        "description" : "Types of contacts available to users to communicate",
                        "maxLength" : 35
                      },
                      "contactData" : {
                        "type" : "string",
                        "description" : "Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.",
                        "maxLength" : 254
                      },
                      "iddPrefixPhone" : {
                        "type" : "string",
                        "description" : "Identifies the international calling prefix code of the phone or mobile number.",
                        "maxLength" : 16
                      }
                    }
                  }
                }
              }
            }
          },
          "vulnerabilities" : {
            "type" : "array",
            "description" : "The type of vulnerability (physical impairment) the customer had.",
            "items" : {
              "type" : "object",
              "properties" : {
                "vulnerability" : {
                  "type" : "string",
                  "description" : "The type of vulnerability (physical impairment) the customer had.",
                  "maxLength" : 35
                }
              }
            }
          },
          "profileTypes" : {
            "type" : "array",
            "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
            "items" : {
              "type" : "object",
              "properties" : {
                "profileType" : {
                  "type" : "string",
                  "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                  "maxLength" : 35
                },
                "profileTypeName" : {
                  "type" : "string",
                  "description" : "Specifies the description of the profile Type.",
                  "maxLength" : 35
                },
                "profile" : {
                  "type" : "string",
                  "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                  "maxLength" : 35
                },
                "profileName" : {
                  "type" : "string",
                  "description" : "Specifies the description of the profile.",
                  "maxLength" : 35
                }
              }
            }
          },
          "legalDocuments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "legalId" : {
                  "type" : "string",
                  "description" : "Unique reference number of the legal documents submitted as identification proof",
                  "maxLength" : 35
                },
                "legalDocumentName" : {
                  "type" : "string",
                  "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                  "maxLength" : 35
                },
                "legalHolderName" : {
                  "type" : "string",
                  "description" : "Name of the account holder in the Legal Document",
                  "maxLength" : 100
                },
                "legalIssueAuthorisedDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Authority who issued the legal document"
                },
                "legalIssueDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Date of Issue of the legal document"
                },
                "legalExpiredDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Expiry date of the legal document submitted as proof"
                }
              }
            }
          },
          "otherNationalityIds" : {
            "type" : "array",
            "description" : "Other Nationality of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "otherNationalityId" : {
                  "type" : "string",
                  "description" : "Other Nationality of the Customer",
                  "maxLength" : 9
                }
              }
            }
          },
          "preferredChannels" : {
            "type" : "array",
            "description" : "Preferred method of contact to the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "preferredChannel" : {
                  "type" : "string",
                  "description" : "Preferred method of contact to the customer",
                  "maxLength" : 20
                }
              }
            }
          },
          "taxIds" : {
            "type" : "array",
            "description" : "Holds the Customer's TAX/SSN Id.",
            "items" : {
              "type" : "object",
              "properties" : {
                "taxId" : {
                  "type" : "string",
                  "description" : "Holds the Customer's TAX/SSN Id.",
                  "maxLength" : 35
                }
              }
            }
          },
          "relCust" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "relCustomer" : {
                  "type" : "string",
                  "description" : "Customers linked or related to the arrangement owner",
                  "maxLength" : 10
                },
                "relationshipCode" : {
                  "type" : "string",
                  "description" : "Relationship identifier between the partyType and relatedPartyType",
                  "maxLength" : 3
                },
                "relCustomerFirstName" : {
                  "type" : "string",
                  "description" : "Specifies related customer's first name",
                  "maxLength" : 10
                },
                "relCustomerLastName" : {
                  "type" : "string",
                  "description" : "The last name of the related customer",
                  "maxLength" : 10
                },
                "relCustomerDateOfBirth" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "The date of birth of the related customer"
                },
                "relCustomerTaxId" : {
                  "type" : "string",
                  "description" : "Holds the related Customer's TAX/SSN Id.",
                  "maxLength" : 10
                },
                "relCustomerPhoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the related customer or prospect",
                  "maxLength" : 10
                },
                "relCustomerEmail" : {
                  "type" : "string",
                  "description" : "Email Identifier of the related Customer",
                  "maxLength" : 10
                },
                "relCustomerPostCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code of the related customer.",
                  "maxLength" : 10
                },
                "relCustomerStreet" : {
                  "type" : "string",
                  "description" : "Contains the first line of the related customer's base address, example building number, street number etc.",
                  "maxLength" : 10
                },
                "relCustomerTownCountry" : {
                  "type" : "string",
                  "description" : "Indicates the town and country associated with the address of the related customer",
                  "maxLength" : 10
                },
                "relCustomerSalutation" : {
                  "type" : "string",
                  "description" : "Identifies the greeting used for communicating with the related customer",
                  "maxLength" : 10
                },
                "relCustomerMaritalStatus" : {
                  "type" : "string",
                  "description" : "Indicates the Marital status of the related customer",
                  "maxLength" : 10
                },
                "relCustomerEmploymentStatus" : {
                  "type" : "string",
                  "description" : "Identifies the employment status of the related customer",
                  "maxLength" : 10
                }
              }
            }
          },
          "employmentDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "employmentStatus" : {
                  "type" : "string",
                  "description" : "Identifies the employment status of the customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "faxId" : {
            "type" : "string",
            "description" : "The fax (facsimile) number of the customer",
            "maxLength" : 17
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of birth of an individual customer"
          },
          "customerStatus" : {
            "type" : "string",
            "description" : "The internal bank status of a customer",
            "maxLength" : 4
          },
          "statusName" : {
            "type" : "string",
            "description" : "An institution-defined high level description or segmentation of the customer",
            "maxLength" : 4
          },
          "customerMnemonic" : {
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer",
            "maxLength" : 10
          },
          "nationalityId" : {
            "type" : "string",
            "description" : "The identifier of the nationality of a customer",
            "maxLength" : 2
          },
          "nationalityName" : {
            "type" : "string",
            "description" : "Name of the Nationality of the Customer",
            "maxLength" : 2
          },
          "residenceId" : {
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer",
            "maxLength" : 2
          },
          "accountOfficerId" : {
            "type" : "number",
            "description" : "The identifier of the department head or specific account officer responsible for the customer",
            "maximum" : 4
          },
          "industryId" : {
            "type" : "number",
            "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
            "maximum" : 4
          },
          "sectorId" : {
            "type" : "number",
            "description" : "An institution-defined identifier of the type of customer",
            "maximum" : 4
          },
          "lastName" : {
            "type" : "string",
            "description" : "The last name of an individual customer",
            "maxLength" : 50
          },
          "accountOfficerName" : {
            "type" : "string",
            "description" : "Name of the Account/Relationship Officer attached to the Customer",
            "maxLength" : 4
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
            "maxLength" : 15
          },
          "gender" : {
            "type" : "string",
            "description" : "Gender of the Individual Customer",
            "maxLength" : 10
          },
          "sectorName" : {
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer",
            "maxLength" : 4
          },
          "targetName" : {
            "type" : "string",
            "description" : "Describes the target in an abbreviated form which can be used for reporting when space is limited.This can be expanded to allow the User to enter a short description of the Target code in various languages. ",
            "maxLength" : 4
          },
          "maritalStatus" : {
            "type" : "string",
            "description" : "Marital status of the customer",
            "maxLength" : 15
          },
          "industryName" : {
            "type" : "string",
            "description" : "Industry associated with the Customer",
            "maxLength" : 4
          },
          "residenceName" : {
            "type" : "string",
            "description" : "Name of the residence country.",
            "maxLength" : 2
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date",
            "description" : "The death date of customer."
          },
          "notificationDateOfDeath" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which the bank gets the notification that the customer is dead."
          },
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
            "maxLength" : 11
          },
          "customerLiability" : {
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
            "maxLength" : 10
          },
          "firstName" : {
            "type" : "string",
            "description" : "Specifies customer's first name",
            "maxLength" : 50
          },
          "language" : {
            "type" : "string",
            "description" : "The language that the contents of the field are displayed in.",
            "maxLength" : 2
          },
          "birthIncorpDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which the entity is incorporated"
          },
          "target" : {
            "type" : "string",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
            "maxLength" : 4
          },
          "customerType" : {
            "type" : "string",
            "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
            "maxLength" : 35
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 6
          }
        }
      }
    },
    "CustomerAddressOutputResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerAddressOutputResponseBody"
        }
      },
      "description" : "CustomerAddressOutputResponse"
    },
    "CustomerAddressOutputResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "structuredGroup" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "structuredAddress" : {
                  "type" : "string",
                  "description" : "A list with address related details from Transact in structured format"
                }
              }
            }
          },
          "unstructuredGroup" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "unstructuredAddress" : {
                  "type" : "string",
                  "description" : "Address output displayed as configured in the address output format in Transact"
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerShortNamesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerShortNamesResponseBody"
        }
      },
      "description" : "CustomerShortNamesResponse"
    },
    "CustomerShortNamesResponseBody" : {
      "type" : "object",
      "properties" : {
        "customerName" : {
          "type" : "string",
          "description" : "Name of the customer",
          "minLength" : 0,
          "maxLength" : 50
        }
      }
    },
    "CustomerMandatesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerMandatesResponseBody"
        }
      },
      "description" : "CustomerMandatesResponse"
    },
    "CustomerMandatesResponseBody" : {
      "type" : "object",
      "properties" : {
        "mandateDetails" : {
          "type" : "array",
          "description" : "Holds the Mandate details such as apllication and mandate rules to be followed for transactions done using that specific application",
          "items" : {
            "type" : "object",
            "properties" : {
              "mandateApplication" : {
                "type" : "string",
                "description" : "Contains the application name for which the mandates check need to be followed. Any transaction processed by the application specified in this field will undergo mandate processing",
                "minLength" : 0,
                "maxLength" : 55
              },
              "mandates" : {
                "type" : "string",
                "description" : "It contains the signatory groups required for authorisation of transactions within a given range",
                "minLength" : 0,
                "maxLength" : 35
              },
              "mandateRuleId" : {
                "type" : "string",
                "description" : "Contains the identifier of the rule that needs to executed before applying mandate processing.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        }
      }
    },
    "CustomerLegalDocumentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerLegalDocumentsResponseBody"
        }
      },
      "description" : "CustomerLegalDocumentsResponse"
    },
    "CustomerLegalDocumentsResponseBody" : {
      "type" : "object",
      "properties" : {
        "legalDocuments" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 75
              },
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueDate" : {
                "type" : "string",
                "description" : "Date of Issue of the legal document",
                "minLength" : 0,
                "maxLength" : 14
              },
              "legalExpiredDate" : {
                "type" : "string",
                "description" : "Expiry date of the legal document submitted as proof",
                "minLength" : 0,
                "maxLength" : 16
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 100
              }
            }
          }
        }
      }
    },
    "CustomerProfileResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerProfileResponseBody"
        }
      },
      "description" : "CustomerProfileResponse"
    },
    "CustomerProfileResponseBody" : {
      "type" : "object",
      "properties" : {
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "customerNameAdditionals" : {
          "type" : "array",
          "description" : "Continuation/Extension to the Customer Name.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerNameAdditional" : {
                "type" : "string",
                "description" : "Continuation/Extension to the Customer Name.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "nameAliases" : {
          "type" : "array",
          "description" : "Contains the alias name or additional surname of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "nameAlias" : {
                "type" : "string",
                "description" : "Contains the alias name or additional surname of the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "citizenships" : {
          "type" : "array",
          "description" : "Identifies the citizenship details of Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerCountry" : {
                "type" : "string",
                "description" : "Specifies the country name of the beneficiary customer",
                "minLength" : 0,
                "maxLength" : 15
              }
            }
          }
        },
        "otherOfficerIds" : {
          "type" : "array",
          "description" : "Other officers managing the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherOfficerId" : {
                "type" : "string",
                "description" : "Other officers managing the Customer",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "spokenLanguages" : {
          "type" : "array",
          "description" : "Customers native language or the language that can be used for communication",
          "items" : {
            "type" : "object",
            "properties" : {
              "spokenLanguage" : {
                "type" : "string",
                "description" : "Customers native language or the language that can be used for communication",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "customerRatings" : {
          "type" : "array",
          "description" : "Indicates the rating of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerRating" : {
                "type" : "string",
                "description" : "Indicates the rating of the customer",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "accountOfficer" : {
          "type" : "string",
          "description" : "Identifier of Department Account Officer",
          "minLength" : 0,
          "maxLength" : 14
        },
        "birthIncorpDate" : {
          "type" : "string",
          "description" : "Date on which the entity is incorporated",
          "minLength" : 0,
          "maxLength" : 15
        },
        "companyId" : {
          "type" : "string",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "contactDate" : {
          "type" : "string",
          "description" : "Date that first contact was made with the Customer.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "customerSince" : {
          "type" : "string",
          "description" : "Date Since Customer is held in the system",
          "minLength" : 0,
          "maxLength" : 13
        },
        "customerStatus" : {
          "type" : "string",
          "description" : "The internal bank status of a customer",
          "minLength" : 0,
          "maxLength" : 14
        },
        "customerType" : {
          "type" : "string",
          "description" : "Contains the type of customer, for example ACTIVE, PROSPECT.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "dateofBirth" : {
          "type" : "string",
          "description" : "The date of birth of an individual customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "dateOfDeath" : {
          "type" : "string",
          "description" : "The death date of customer.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "industryName" : {
          "type" : "string",
          "description" : "Industry associated with the Customer",
          "minLength" : 0,
          "maxLength" : 12
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "languageId" : {
          "type" : "string",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 13
        },
        "numberOfDependents" : {
          "type" : "string",
          "description" : "Specifies the number of dependents to the customer",
          "minLength" : 0,
          "maxLength" : 18
        },
        "notificationDateOfDeath" : {
          "type" : "string",
          "description" : "The date on which the bank gets the notification that the customer is dead.",
          "minLength" : 0,
          "maxLength" : 23
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "salutation" : {
          "type" : "string",
          "description" : "Contains the greeting to be used for communications with the customer",
          "minLength" : 0,
          "maxLength" : 70
        },
        "sectorId" : {
          "type" : "string",
          "description" : "An institution-defined identifier of the type of customer",
          "minLength" : 0,
          "maxLength" : 8
        },
        "target" : {
          "type" : "string",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minLength" : 0,
          "maxLength" : 6
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 35
        },
        "residenceType" : {
          "type" : "string",
          "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressVerifier" : {
          "type" : "string",
          "description" : "Contains the party or service which was used for address confirmation purposes",
          "minLength" : 0,
          "maxLength" : 35
        },
        "buildingName" : {
          "type" : "string",
          "description" : "Identifies the name of the building where customer resides",
          "minLength" : 0,
          "maxLength" : 35
        },
        "buildingNumber" : {
          "type" : "string",
          "description" : "Identifies the building number where customer resides",
          "minLength" : 0,
          "maxLength" : 16
        },
        "state" : {
          "type" : "string",
          "description" : "Represents a subdivision of a country such as state, region, country",
          "minLength" : 0,
          "maxLength" : 35
        },
        "apartmentNumber" : {
          "type" : "string",
          "description" : "Identifies the apartment number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "postBoxNumber" : {
          "type" : "string",
          "description" : "Post Office Box (POB) number that relates to financial institution",
          "minLength" : 0,
          "maxLength" : 16
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "Indicates first line of the address of the BIC",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Indicates second line of the address of the BIC",
          "minLength" : 0,
          "maxLength" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "postCode" : {
          "type" : "string",
          "description" : "Identifies the address postal code for the customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "street" : {
          "type" : "string",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "townCountry" : {
          "type" : "string",
          "description" : "The town and country associated with the address",
          "minLength" : 0,
          "maxLength" : 35
        },
        "floorNumber" : {
          "type" : "string",
          "description" : "Contains the floor number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Department identifier.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "subDepartmentId" : {
          "type" : "string",
          "description" : "Contains a sub-division identifier of a large organisation or building",
          "minLength" : 0,
          "maxLength" : 70
        },
        "locationName" : {
          "type" : "string",
          "description" : "Identifies specific location name with in the country or town",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressCity" : {
          "type" : "string",
          "description" : "The town and/or city component of the base address of a customer",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerIdResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerIdResponseBody"
        }
      },
      "description" : "CustomerIdResponse"
    },
    "CustomerIdResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer"
          }
        }
      }
    },
    "CustomerRestrictionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRestrictionsResponseBody"
        }
      },
      "description" : "CustomerRestrictionsResponse"
    },
    "CustomerRestrictionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "postingRestrictIds" : {
          "type" : "array",
          "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "postingRestrictId" : {
                "type" : "string",
                "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        }
      }
    },
    "CustomerContactsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerContactsResponseBody"
        }
      },
      "description" : "CustomerContactsResponse"
    },
    "CustomerContactsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "phoneNumbers" : {
            "type" : "array",
            "description" : "The phone number of the customer or prospect",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect"
                }
              }
            }
          },
          "smsNumbers" : {
            "type" : "array",
            "description" : "The mobile SMS number of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "smsNumber" : {
                  "type" : "string",
                  "description" : "The mobile SMS number of the customer"
                }
              }
            }
          },
          "emailIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "emailId" : {
                  "type" : "string",
                  "description" : "Contains the email identifier of the customer"
                }
              }
            }
          },
          "faxIds" : {
            "type" : "array",
            "description" : "The fax (facsimile) number of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "faxId" : {
                  "type" : "string",
                  "description" : "The fax (facsimile) number of the customer"
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer"
          }
        }
      }
    },
    "CustomerRelationshipsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipsResponseBody"
        }
      },
      "description" : "CustomerRelationshipsResponse"
    },
    "CustomerRelationshipsResponseBody" : {
      "type" : "object",
      "properties" : {
        "relations" : {
          "type" : "array",
          "description" : "Indicates the relations among the customers or parties or entities",
          "items" : {
            "type" : "object",
            "properties" : {
              "relatedCustomerId" : {
                "type" : "string",
                "description" : "Identifies the Customer id details of the Related Customer",
                "minLength" : 0,
                "maxLength" : 17
              },
              "relationship" : {
                "type" : "string",
                "description" : "Details about the Customer Relationships and Party Relationships",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        }
      }
    },
    "PartyBasicDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyBasicDetailsResponseBody"
        }
      },
      "description" : "PartyBasicDetailsResponse"
    },
    "PartyBasicDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "nameAliases" : {
            "type" : "array",
            "description" : "Contains the alias name or additional surname of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "nameAlias" : {
                  "type" : "string",
                  "description" : "Contains the alias name or additional surname of the customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the first line of customer's base address, example building number, street number etc.",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 70
                }
              }
            }
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "type" : "object",
              "properties" : {
                "townCountry" : {
                  "type" : "string",
                  "description" : "The town and country associated with the address",
                  "maxLength" : 35
                }
              }
            }
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
            "maxLength" : 35
          },
          "salutation" : {
            "type" : "string",
            "description" : "Contains the greeting to be used for communications with the customer",
            "maxLength" : 70
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 50
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 100
          },
          "middleName" : {
            "type" : "string",
            "description" : "Indicates the middle name of the customer or prospect",
            "maxLength" : 50
          },
          "lastName" : {
            "type" : "string",
            "description" : "The last name of an individual customer",
            "maxLength" : 50
          },
          "dateOfBirth" : {
            "type" : "string",
            "description" : "The date of birth of an individual customer",
            "maxLength" : 11
          },
          "birthProvince" : {
            "type" : "string",
            "description" : "Indicates the customer birth province",
            "maxLength" : 35
          },
          "birthCity" : {
            "type" : "string",
            "description" : "Indicates the customer's city of birth",
            "maxLength" : 35
          },
          "birthCountry" : {
            "type" : "string",
            "description" : "Indicates the customer's country of birth",
            "maxLength" : 2
          },
          "birthIncorpDate" : {
            "type" : "string",
            "description" : "Date on which the entity is incorporated",
            "maxLength" : 11
          },
          "addressPurpose" : {
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
            "maxLength" : 35
          },
          "residenceType" : {
            "type" : "string",
            "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
            "maxLength" : 35
          },
          "addressVerifier" : {
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes",
            "maxLength" : 35
          },
          "addressCountryId" : {
            "type" : "string",
            "description" : "Identifies the country of customer address",
            "maxLength" : 2
          },
          "departmentId" : {
            "type" : "string",
            "description" : "Department identifier.",
            "maxLength" : 70
          },
          "subDepartmentId" : {
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building",
            "maxLength" : 70
          },
          "apartmentNumber" : {
            "type" : "string",
            "description" : "Identifies the apartment number of the customer address",
            "maxLength" : 70
          },
          "buildingName" : {
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides",
            "maxLength" : 35
          },
          "buildingNumber" : {
            "type" : "string",
            "description" : "Identifies the building number where customer resides",
            "maxLength" : 16
          },
          "floorNumber" : {
            "type" : "string",
            "description" : "Contains the floor number of the customer address",
            "maxLength" : 70
          },
          "locationName" : {
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town",
            "maxLength" : 35
          },
          "addressCity" : {
            "type" : "string",
            "description" : "The town and/or city component of the base address of a customer",
            "maxLength" : 35
          },
          "state" : {
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country",
            "maxLength" : 35
          },
          "postBoxNumber" : {
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution",
            "maxLength" : 16
          },
          "unstructuredAddress" : {
            "type" : "string",
            "description" : "Address output displayed as configured in the address output format in Transact",
            "maxLength" : 100
          },
          "accountOfficer" : {
            "type" : "string",
            "description" : "Identifier of Department Account Officer",
            "maxLength" : 4
          },
          "target" : {
            "type" : "string",
            "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
            "maxLength" : 4
          },
          "sectorId" : {
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer",
            "maxLength" : 4
          },
          "nationalityId" : {
            "type" : "string",
            "description" : "The identifier of the nationality of a customer",
            "maxLength" : 2
          },
          "residenceId" : {
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer",
            "maxLength" : 2
          },
          "languageId" : {
            "type" : "string",
            "description" : "Represents the language code of the underlying Entity/Company/Branch.",
            "maxLength" : 2
          },
          "emailId" : {
            "type" : "string",
            "description" : "Contains the email identifier of the customer",
            "maxLength" : 50
          },
          "smsNumber" : {
            "type" : "string",
            "description" : "The mobile SMS number of the customer",
            "maxLength" : 17
          }
        }
      }
    },
    "CustomerSwiftAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerSwiftAddressResponseBody"
        }
      },
      "description" : "CustomerSwiftAddressResponse"
    },
    "CustomerSwiftAddressResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "BIC" : {
            "type" : "string",
            "description" : "The BIC code of the Beneficiary bank",
            "maxLength" : 18
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 50
          },
          "confidentialityText" : {
            "type" : "string",
            "description" : "Indicates that client name is not used in SWIFT Address for confidential purposes.",
            "maxLength" : 3
          },
          "swiftTag25Indicator" : {
            "type" : "string",
            "description" : "Indicates that BIC Code to be included in the Tag25 or not.",
            "maxLength" : 3
          }
        }
      }
    },
    "PartyRelationshipResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipResponse1Body"
        }
      },
      "description" : "PartyRelationshipResponse1"
    },
    "PartyRelationshipResponse1Body" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "relationshipDetails" : {
            "type" : "array",
            "description" : "Indicates the details of Relationship maintained by the Customer or Entity",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationPartyId" : {
                  "type" : "string",
                  "description" : "Related customers or persons/entities that are part of the relationship.",
                  "maxLength" : 20
                },
                "relatedPartyName" : {
                  "type" : "string",
                  "description" : "Name of the Party related to the Customer",
                  "maxLength" : 20
                },
                "relatedPartyType" : {
                  "type" : "string",
                  "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                  "maxLength" : 10
                },
                "relationshipCode" : {
                  "type" : "string",
                  "description" : "Relationship identifier between the partyType and relatedPartyType",
                  "maxLength" : 20
                },
                "relationship" : {
                  "type" : "string",
                  "description" : "Details about the Customer Relationships and Party Relationships",
                  "maxLength" : 20
                }
              }
            }
          },
          "partyRelationshipId" : {
            "type" : "string",
            "description" : "Party Relationship identifier",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerCharge" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerChargeBody"
        }
      },
      "description" : "CustomerCharge"
    },
    "CustomerChargeBody" : {
      "type" : "object",
      "properties" : {
        "taxGroups" : {
          "type" : "array",
          "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxIdType" : {
                "type" : "string",
                "description" : "Type of Tax identification number, eg, Social Security, Individual Tax Identification Number, etc,.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "defaultTaxGroup" : {
                "type" : "string",
                "description" : "Defines the Default Tax Group which the Customer is calculated to be a member of for the associated tax type.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "taxGroup" : {
                "type" : "string",
                "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type.",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        }
      }
    },
    "CustomerChargeResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerChargeResponseBody"
        }
      },
      "description" : "CustomerChargeResponse"
    },
    "CustomerChargeResponseBody" : {
      "type" : "object",
      "properties" : {
        "taxGroups" : {
          "type" : "array",
          "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxIdType" : {
                "type" : "string",
                "description" : "Type of Tax identification number, eg, Social Security, Individual Tax Identification Number, etc,.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "defaultTaxGroup" : {
                "type" : "string",
                "description" : "Defines the Default Tax Group which the Customer is calculated to be a member of for the associated tax type.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "taxGroup" : {
                "type" : "string",
                "description" : "Defines the Actual Tax Group which the customer is calculated to be a member of for associated tax type.",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        }
      }
    },
    "CustomerPhoneAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPhoneAddressResponseBody"
        }
      },
      "description" : "CustomerPhoneAddressResponse"
    },
    "CustomerPhoneAddressResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "type" : "string",
                  "description" : "Indicates the short name of Customer",
                  "maxLength" : 50
                }
              }
            }
          },
          "customerAddressId" : {
            "type" : "string",
            "description" : "Identifier of the customer address table.",
            "maxLength" : 1000
          },
          "iddPrefixMobile" : {
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the mobile.",
            "maxLength" : 16
          },
          "mobileNumber" : {
            "type" : "string",
            "description" : "Mobile number of the customer",
            "maxLength" : 100
          }
        }
      }
    },
    "CustomerEmailAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerEmailAddressResponseBody"
        }
      },
      "description" : "CustomerEmailAddressResponse"
    },
    "CustomerEmailAddressResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "type" : "string",
                  "description" : "Indicates the short name of Customer",
                  "maxLength" : 50
                }
              }
            }
          },
          "customerAddressId" : {
            "type" : "string",
            "description" : "Identifier of the customer address table.",
            "maxLength" : 1000
          },
          "email" : {
            "type" : "string",
            "description" : "Email Identifier of the Customer",
            "maxLength" : 254
          }
        }
      }
    },
    "CustomerPrintAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPrintAddressResponseBody"
        }
      },
      "description" : "CustomerPrintAddressResponse"
    },
    "CustomerPrintAddressResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerShortNames" : {
            "type" : "array",
            "description" : "Denotes the Short name registered for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerShortName" : {
                  "type" : "string",
                  "description" : "Indicates the short name of Customer"
                }
              }
            }
          },
          "customerNames" : {
            "type" : "array",
            "description" : "Name of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "type" : "string",
                  "description" : "Name of the customer",
                  "maxLength" : 70
                }
              }
            }
          },
          "addresses" : {
            "type" : "array",
            "description" : "Communication Address of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the first line of customer's base address, example building number, street number etc.",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 70
                }
              }
            }
          },
          "towns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "town" : {
                  "type" : "string",
                  "description" : "The town associated with the address of Customer or Party",
                  "maxLength" : 35
                }
              }
            }
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "customerAddressId" : {
            "type" : "string",
            "description" : "Identifier of the customer address table.",
            "maxLength" : 1000
          },
          "addressPurpose" : {
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
            "maxLength" : 35
          },
          "addressLocation" : {
            "type" : "string",
            "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
            "maxLength" : 35
          },
          "addressVerifier" : {
            "type" : "string",
            "description" : "Contains the party or service which was used for address confirmation purposes",
            "maxLength" : 35
          },
          "countryCode" : {
            "type" : "string",
            "description" : "ISO Country code, IBAN number will be generated based on the structure of this country.",
            "maxLength" : 2
          },
          "departmentId" : {
            "type" : "string",
            "description" : "Department identifier.",
            "maxLength" : 70
          },
          "subDepartmentId" : {
            "type" : "string",
            "description" : "Contains a sub-division identifier of a large organisation or building",
            "maxLength" : 70
          },
          "flatNumber" : {
            "type" : "string",
            "description" : "Contains the flat number of the customer",
            "maxLength" : 70
          },
          "buildingName" : {
            "type" : "string",
            "description" : "Identifies the name of the building where customer resides",
            "maxLength" : 35
          },
          "buildingNumber" : {
            "type" : "string",
            "description" : "Identifies the building number where customer resides",
            "maxLength" : 16
          },
          "floorNumber" : {
            "type" : "string",
            "description" : "Contains the floor number of the customer address",
            "maxLength" : 70
          },
          "locationName" : {
            "type" : "string",
            "description" : "Identifies specific location name with in the country or town",
            "maxLength" : 35
          },
          "districtName" : {
            "type" : "string",
            "description" : "Stores the district name of the  Beneficiary Customer.",
            "maxLength" : 35
          },
          "state" : {
            "type" : "string",
            "description" : "Represents a subdivision of a country such as state, region, country",
            "maxLength" : 35
          },
          "postBoxNumber" : {
            "type" : "string",
            "description" : "Post Office Box (POB) number that relates to financial institution",
            "maxLength" : 16
          },
          "iddPrefixPhone" : {
            "type" : "string",
            "description" : "Identifies the international calling prefix code of the phone or mobile number.",
            "maxLength" : 16
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "The phone number of the customer or prospect",
            "maxLength" : 17
          }
        }
      }
    },
    "CustomerPhoneAddress" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPhoneAddressBody"
        }
      },
      "description" : "CustomerPhoneAddress"
    },
    "CustomerPhoneAddressBody" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "iddPrefixMobile" : {
          "type" : "string",
          "description" : "Identifies the international calling prefix code of the mobile.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "mobileNumber" : {
          "type" : "string",
          "description" : "Mobile number of the customer",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "CustomerPhoneAddressResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPhoneAddressResponse1Body"
        }
      },
      "description" : "CustomerPhoneAddressResponse1"
    },
    "CustomerPhoneAddressResponse1Body" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "iddPrefixMobile" : {
          "type" : "string",
          "description" : "Identifies the international calling prefix code of the mobile.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "mobileNumber" : {
          "type" : "string",
          "description" : "Mobile number of the customer",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "CustomerPhoneAddressDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "CustomerPhoneAddressDelete"
    },
    "CustomerEmailAddress" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerEmailAddressBody"
        }
      },
      "description" : "CustomerEmailAddress"
    },
    "CustomerEmailAddressBody" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "email" : {
          "type" : "string",
          "description" : "Email Identifier of the Customer",
          "minLength" : 0,
          "maxLength" : 254
        }
      }
    },
    "CustomerEmailAddressResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerEmailAddressResponse1Body"
        }
      },
      "description" : "CustomerEmailAddressResponse1"
    },
    "CustomerEmailAddressResponse1Body" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "email" : {
          "type" : "string",
          "description" : "Email Identifier of the Customer",
          "minLength" : 0,
          "maxLength" : 254
        }
      }
    },
    "CustomerEmailAddressDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "CustomerEmailAddressDelete"
    },
    "CustomerPrintAddress" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPrintAddressBody"
        }
      },
      "description" : "CustomerPrintAddress"
    },
    "CustomerPrintAddressBody" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "towns" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "town" : {
                "type" : "string",
                "description" : "The town associated with the address of Customer or Party",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postCodes" : {
          "type" : "array",
          "description" : "Identifies the address postal code for the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "postCode" : {
                "type" : "string",
                "description" : "Identifies the address postal code for the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressVerifier" : {
          "type" : "string",
          "description" : "Contains the party or service which was used for address confirmation purposes",
          "minLength" : 0,
          "maxLength" : 35
        },
        "countryCode" : {
          "type" : "string",
          "description" : "ISO Country code, IBAN number will be generated based on the structure of this country.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Department identifier.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "subDepartmentId" : {
          "type" : "string",
          "description" : "Contains a sub-division identifier of a large organisation or building",
          "minLength" : 0,
          "maxLength" : 70
        },
        "flatNumber" : {
          "type" : "string",
          "description" : "Contains the flat number of the customer",
          "minLength" : 0,
          "maxLength" : 70
        },
        "buildingName" : {
          "type" : "string",
          "description" : "Identifies the name of the building where customer resides",
          "minLength" : 0,
          "maxLength" : 35
        },
        "buildingNumber" : {
          "type" : "string",
          "description" : "Identifies the building number where customer resides",
          "minLength" : 0,
          "maxLength" : 16
        },
        "floorNumber" : {
          "type" : "string",
          "description" : "Contains the floor number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "locationName" : {
          "type" : "string",
          "description" : "Identifies specific location name with in the country or town",
          "minLength" : 0,
          "maxLength" : 35
        },
        "districtName" : {
          "type" : "string",
          "description" : "Stores the district name of the  Beneficiary Customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "state" : {
          "type" : "string",
          "description" : "Represents a subdivision of a country such as state, region, country",
          "minLength" : 0,
          "maxLength" : 35
        },
        "postBoxNumber" : {
          "type" : "string",
          "description" : "Post Office Box (POB) number that relates to financial institution",
          "minLength" : 0,
          "maxLength" : 16
        },
        "iddPrefixPhone" : {
          "type" : "string",
          "description" : "Identifies the international calling prefix code of the phone or mobile number.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "The phone number of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "CustomerPrintAddressResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPrintAddressResponse1Body"
        }
      },
      "description" : "CustomerPrintAddressResponse1"
    },
    "CustomerPrintAddressResponse1Body" : {
      "type" : "object",
      "properties" : {
        "customerShortNames" : {
          "type" : "array",
          "description" : "Denotes the Short name registered for a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerShortName" : {
                "type" : "string",
                "description" : "Indicates the short name of Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "towns" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "town" : {
                "type" : "string",
                "description" : "The town associated with the address of Customer or Party",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postCodes" : {
          "type" : "array",
          "description" : "Identifies the address postal code for the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "postCode" : {
                "type" : "string",
                "description" : "Identifies the address postal code for the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressVerifier" : {
          "type" : "string",
          "description" : "Contains the party or service which was used for address confirmation purposes",
          "minLength" : 0,
          "maxLength" : 35
        },
        "countryCode" : {
          "type" : "string",
          "description" : "ISO Country code, IBAN number will be generated based on the structure of this country.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Department identifier.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "subDepartmentId" : {
          "type" : "string",
          "description" : "Contains a sub-division identifier of a large organisation or building",
          "minLength" : 0,
          "maxLength" : 70
        },
        "flatNumber" : {
          "type" : "string",
          "description" : "Contains the flat number of the customer",
          "minLength" : 0,
          "maxLength" : 70
        },
        "buildingName" : {
          "type" : "string",
          "description" : "Identifies the name of the building where customer resides",
          "minLength" : 0,
          "maxLength" : 35
        },
        "buildingNumber" : {
          "type" : "string",
          "description" : "Identifies the building number where customer resides",
          "minLength" : 0,
          "maxLength" : 16
        },
        "floorNumber" : {
          "type" : "string",
          "description" : "Contains the floor number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "locationName" : {
          "type" : "string",
          "description" : "Identifies specific location name with in the country or town",
          "minLength" : 0,
          "maxLength" : 35
        },
        "districtName" : {
          "type" : "string",
          "description" : "Stores the district name of the  Beneficiary Customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "state" : {
          "type" : "string",
          "description" : "Represents a subdivision of a country such as state, region, country",
          "minLength" : 0,
          "maxLength" : 35
        },
        "postBoxNumber" : {
          "type" : "string",
          "description" : "Post Office Box (POB) number that relates to financial institution",
          "minLength" : 0,
          "maxLength" : 16
        },
        "iddPrefixPhone" : {
          "type" : "string",
          "description" : "Identifies the international calling prefix code of the phone or mobile number.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "The phone number of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "CustomerPrintAddressDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "CustomerPrintAddressDelete"
    },
    "CustomerConsentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerConsentsResponseBody"
        }
      },
      "description" : "CustomerConsentsResponse"
    },
    "CustomerConsentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "consentTypes" : {
            "type" : "array",
            "description" : "Consent Type for which the consent is given",
            "items" : {
              "type" : "object",
              "properties" : {
                "consentType" : {
                  "type" : "string",
                  "description" : "Consent Type for which the consent is given"
                },
                "consentGiven" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been given to the customer to perform the transaction"
                },
                "consentBlock" : {
                  "type" : "string",
                  "description" : "Indicates whether consent is blocked or not. No personal data of the Client will be shared by the Bank for any purpose when the consent is blocked."
                },
                "blockNotes" : {
                  "type" : "string",
                  "description" : "Indicates the reason for which the consent is blocked."
                },
                "consentWithdraw" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been withdrawn to the customer to perform the transaction"
                },
                "withdrawNotes" : {
                  "type" : "string",
                  "description" : "Notes to facilitate why the consent has been withdrawn"
                },
                "consentTypeName" : {
                  "type" : "string",
                  "description" : "Contains the name of the type of consent given to the customer"
                },
                "subTypes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "consentSubType" : {
                        "type" : "string",
                        "description" : "Indicates the consent sub type linked to corresponding consent type."
                      },
                      "consentSubTypeGiven" : {
                        "type" : "string",
                        "description" : "Contains the sub type of consent given to the customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          }
        }
      }
    },
    "FatcaCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FatcaCustomerBody"
        }
      },
      "description" : "FatcaCustomer"
    },
    "FatcaCustomerBody" : {
      "type" : "object",
      "properties" : {
        "citizenships" : {
          "type" : "array",
          "description" : "Identifies the citizenship details of Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "citizenship" : {
                "type" : "string",
                "description" : "Identifies the citizenship details of Customer",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "tinDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "tinCountry" : {
                "type" : "string",
                "description" : "Identifies the country that the associated Tax Identification Number relates to",
                "minLength" : 0,
                "maxLength" : 10
              },
              "tinId" : {
                "type" : "string",
                "description" : "Identifies the Tax Identification Number of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "Owner" : {
          "type" : "array",
          "description" : "User who defines the Campaign",
          "items" : {
            "type" : "object",
            "properties" : {
              "formOwner" : {
                "type" : "string",
                "description" : "Identifies the owner of the documents",
                "minLength" : 0,
                "maxLength" : 35
              },
              "formDetails" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "formType" : {
                      "type" : "string",
                      "description" : "Identifies the type of the document that are expected from the customer",
                      "minLength" : 0,
                      "maxLength" : 50
                    },
                    "formId" : {
                      "type" : "string",
                      "description" : "Identifier of the Document reference",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "requestDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Date on which the client's request to be classified as professional has been received."
                    },
                    "receivedDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Identifies the date on which the document was received"
                    },
                    "cutOffDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Specifies the Cutoff date for document submission. Identifies the end date before which the document has to be submitted. "
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
                    }
                  }
                }
              }
            }
          }
        },
        "JointOwner" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "holderReference" : {
                "type" : "string",
                "description" : "Specifies the Unique Identifier for joint, substantial or beneficial owner. Uniquely identifies the owner of the client, must be defined in format <id of the Customer> - <Sequence number>",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holderName" : {
                "type" : "string",
                "description" : "Identifies the Name of the  joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 35
              },
              "surname" : {
                "type" : "string",
                "description" : "Indicates the Surname of the Customers",
                "minLength" : 0,
                "maxLength" : 65
              },
              "firstName" : {
                "type" : "string",
                "description" : "Specifies customer's first name",
                "minLength" : 0,
                "maxLength" : 65
              },
              "ownershipParticipation" : {
                "type" : "string",
                "description" : "Specifies the ownership in percentage terms for the account mentioned",
                "minLength" : 0,
                "maxLength" : 22
              },
              "holderCountry" : {
                "type" : "string",
                "description" : "Identifies the Country of the joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 13
              },
              "holderTinCountry" : {
                "type" : "string",
                "description" : "Identifies the Tax Country of the joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 16
              },
              "legalEntityType" : {
                "type" : "string",
                "description" : "Identifies whether the legal entity is individual or corporate",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "fatcaClientType" : {
          "type" : "string",
          "description" : "Identifies the type of client.E.g Individual, Entity etc",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isPlaceOfBirthUs" : {
          "type" : "string",
          "description" : "Identifies the citizenship details of customer. If blank it defaults to US.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 9
        },
        "greencardDetails" : {
          "type" : "string",
          "description" : "Identifies the greencard details of the client",
          "minLength" : 0,
          "maxLength" : 35
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "isPoa" : {
          "type" : "string",
          "description" : "Specifies whether there is power of attorney(POA) to a person with US Address. Possible values YES/NO",
          "minLength" : 0,
          "maxLength" : 5
        },
        "standingInstructionOnUsAccount" : {
          "type" : "string",
          "description" : "Specifies whether there is any standing instruction to an account in US. Possible values YES/NO",
          "minLength" : 0,
          "maxLength" : 30
        },
        "accountInstructionfromUs" : {
          "type" : "string",
          "description" : "Specifies if account has any instructions from a US address. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 24
        },
        "socialSecurityNumber" : {
          "type" : "string",
          "description" : "Identifies the Social Security number of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "The phone number of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "isDormantAccount" : {
          "type" : "string",
          "description" : "Specifies whether there is no contact that could be established with the client. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 16
        },
        "isKycChecked" : {
          "type" : "string",
          "description" : "Identifies if the KYC check has been done or not. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 12
        },
        "entityStatus" : {
          "type" : "string",
          "description" : "Specifies the self-classification received from entities ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currentStatusExpiry" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date on which the current status got expired"
        },
        "fatcaStatus" : {
          "type" : "string",
          "description" : "Specifies the Fatca status or Account Classification of the client. ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "statusNarrative" : {
          "type" : "string",
          "description" : "Identifies any free format narrative related to FATCA status",
          "minLength" : 0,
          "maxLength" : 35
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of status"
        },
        "changeReason" : {
          "type" : "string",
          "description" : "Specifies the reason (if any) for any status change",
          "minLength" : 0,
          "maxLength" : 35
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "FatcaCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FatcaCustomerResponseBody"
        }
      },
      "description" : "FatcaCustomerResponse"
    },
    "FatcaCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "citizenships" : {
          "type" : "array",
          "description" : "Identifies the citizenship details of Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "citizenship" : {
                "type" : "string",
                "description" : "Identifies the citizenship details of Customer",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "tinDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "tinCountry" : {
                "type" : "string",
                "description" : "Identifies the country that the associated Tax Identification Number relates to",
                "minLength" : 0,
                "maxLength" : 10
              },
              "tinId" : {
                "type" : "string",
                "description" : "Identifies the Tax Identification Number of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "Owner" : {
          "type" : "array",
          "description" : "User who defines the Campaign",
          "items" : {
            "type" : "object",
            "properties" : {
              "formOwner" : {
                "type" : "string",
                "description" : "Identifies the owner of the documents",
                "minLength" : 0,
                "maxLength" : 35
              },
              "formDetails" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "formType" : {
                      "type" : "string",
                      "description" : "Identifies the type of the document that are expected from the customer",
                      "minLength" : 0,
                      "maxLength" : 50
                    },
                    "formId" : {
                      "type" : "string",
                      "description" : "Identifier of the Document reference",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "requestDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Date on which the client's request to be classified as professional has been received."
                    },
                    "receivedDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Identifies the date on which the document was received"
                    },
                    "cutOffDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Specifies the Cutoff date for document submission. Identifies the end date before which the document has to be submitted. "
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
                    }
                  }
                }
              }
            }
          }
        },
        "JointOwner" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "holderReference" : {
                "type" : "string",
                "description" : "Specifies the Unique Identifier for joint, substantial or beneficial owner. Uniquely identifies the owner of the client, must be defined in format <id of the Customer> - <Sequence number>",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holderName" : {
                "type" : "string",
                "description" : "Identifies the Name of the  joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 35
              },
              "surname" : {
                "type" : "string",
                "description" : "Indicates the Surname of the Customers",
                "minLength" : 0,
                "maxLength" : 65
              },
              "firstName" : {
                "type" : "string",
                "description" : "Specifies customer's first name",
                "minLength" : 0,
                "maxLength" : 65
              },
              "ownershipParticipation" : {
                "type" : "string",
                "description" : "Specifies the ownership in percentage terms for the account mentioned",
                "minLength" : 0,
                "maxLength" : 22
              },
              "holderCountry" : {
                "type" : "string",
                "description" : "Identifies the Country of the joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 13
              },
              "holderTinCountry" : {
                "type" : "string",
                "description" : "Identifies the Tax Country of the joint, substantial or beneficial owner",
                "minLength" : 0,
                "maxLength" : 16
              },
              "legalEntityType" : {
                "type" : "string",
                "description" : "Identifies whether the legal entity is individual or corporate",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "fatcaClientType" : {
          "type" : "string",
          "description" : "Identifies the type of client.E.g Individual, Entity etc",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isPlaceOfBirthUs" : {
          "type" : "string",
          "description" : "Identifies the citizenship details of customer. If blank it defaults to US.",
          "minLength" : 0,
          "maxLength" : 16
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 9
        },
        "greencardDetails" : {
          "type" : "string",
          "description" : "Identifies the greencard details of the client",
          "minLength" : 0,
          "maxLength" : 35
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 11
        },
        "isPoa" : {
          "type" : "string",
          "description" : "Specifies whether there is power of attorney(POA) to a person with US Address. Possible values YES/NO",
          "minLength" : 0,
          "maxLength" : 5
        },
        "standingInstructionOnUsAccount" : {
          "type" : "string",
          "description" : "Specifies whether there is any standing instruction to an account in US. Possible values YES/NO",
          "minLength" : 0,
          "maxLength" : 30
        },
        "accountInstructionfromUs" : {
          "type" : "string",
          "description" : "Specifies if account has any instructions from a US address. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 24
        },
        "socialSecurityNumber" : {
          "type" : "string",
          "description" : "Identifies the Social Security number of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "The phone number of the customer or prospect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "isDormantAccount" : {
          "type" : "string",
          "description" : "Specifies whether there is no contact that could be established with the client. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 16
        },
        "isKycChecked" : {
          "type" : "string",
          "description" : "Identifies if the KYC check has been done or not. Possible values YES or NO",
          "minLength" : 0,
          "maxLength" : 12
        },
        "entityStatus" : {
          "type" : "string",
          "description" : "Specifies the self-classification received from entities ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currentStatusExpiry" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date on which the current status got expired"
        },
        "fatcaStatus" : {
          "type" : "string",
          "description" : "Specifies the Fatca status or Account Classification of the client. ",
          "minLength" : 0,
          "maxLength" : 35
        },
        "statusNarrative" : {
          "type" : "string",
          "description" : "Identifies any free format narrative related to FATCA status",
          "minLength" : 0,
          "maxLength" : 35
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of status"
        },
        "changeReason" : {
          "type" : "string",
          "description" : "Specifies the reason (if any) for any status change",
          "minLength" : 0,
          "maxLength" : 35
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "OverdueSettlementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OverdueSettlementsResponseBody"
        }
      },
      "description" : "OverdueSettlementsResponse"
    },
    "OverdueSettlementsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "broker" : {
            "type" : "array",
            "description" : "Broker involved in the transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "brokerId" : {
                  "type" : "string",
                  "description" : "The identifier of the broker",
                  "maxLength" : 10
                },
                "brokerName" : {
                  "type" : "string",
                  "description" : "The name that is displayed for the broker",
                  "maxLength" : 10
                },
                "nostro" : {
                  "type" : "string",
                  "description" : "Nostro account id"
                },
                "nostroCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the nostro account"
                },
                "brokerOutstandingAmount" : {
                  "type" : "number",
                  "description" : "The amount outstanding for the broker",
                  "maximum" : 19
                },
                "brokerOutstandingQuantity" : {
                  "type" : "string",
                  "description" : "The quantity of the instrument outstanding for the broker",
                  "maxLength" : 19
                }
              }
            }
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc.",
            "maxLength" : 97
          },
          "instrumentId" : {
            "type" : "string",
            "description" : "The identifier of the instrument",
            "maxLength" : 12
          },
          "instrumentName" : {
            "type" : "string",
            "description" : "The name that is displayed for the instrument, taken from the Security Master"
          },
          "depository" : {
            "type" : "string",
            "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
            "maxLength" : 10
          },
          "depositoryName" : {
            "type" : "string",
            "description" : "The name that is displayed for the depository"
          },
          "tradeDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Standard date field which records trade date of the account"
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "tradeCurrency" : {
            "type" : "string",
            "description" : "The trade currency is the settlement currency for the trade",
            "maxLength" : 3
          },
          "quantity" : {
            "type" : "string",
            "description" : "The nominal quantity",
            "maxLength" : 19
          },
          "portfolioId" : {
            "type" : "string",
            "description" : "Id of the portfolio or security account",
            "maxLength" : 18
          },
          "portfolioName" : {
            "type" : "string",
            "description" : "The name that is displayed for the portfolio",
            "maxLength" : 10
          },
          "accountCurrency" : {
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP.",
            "maxLength" : 3
          },
          "customerOutstandingAmount" : {
            "type" : "number",
            "description" : "The amount outstanding from/to the customer",
            "maximum" : 19
          },
          "customerOutstandingQuantity" : {
            "type" : "string",
            "description" : "The quantity outstanding from/to the customer",
            "maxLength" : 19
          }
        }
      }
    },
    "OtherBanksToConnectToResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OtherBanksToConnectToResponseBody"
        }
      },
      "description" : "OtherBanksToConnectToResponse"
    },
    "OtherBanksToConnectToResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentTemplates" : {
            "type" : "array",
            "description" : "Contains the templates used for payment transactions",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentTemplate" : {
                  "type" : "string",
                  "description" : "Contains the template used for payment transactions",
                  "maxLength" : 35
                }
              }
            }
          },
          "globalUrn" : {
            "type" : "string",
            "description" : "globalURNSpecifies the GLOBAL.URN reference of the TPP (third party provider). This will be retrieved from the request and should match a GLOBAL.URN from a record within the Open Banking Directory.",
            "maxLength" : 35
          },
          "bankId" : {
            "type" : "string",
            "description" : "Contains the identifier of the bank with which the transaction is performed"
          },
          "bankCode" : {
            "type" : "string",
            "description" : "Contains the code of the bank with which the transaction is performed"
          },
          "bankName" : {
            "type" : "string",
            "description" : "The name of the bank being referred to.",
            "maxLength" : 150
          },
          "logoURL" : {
            "type" : "string",
            "description" : "Contains the uniform resourcelocator of the logo",
            "maxLength" : 200
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 35
          },
          "extSourceProvider" : {
            "type" : "string",
            "description" : "Contains the name of the external source provider for the customer",
            "maxLength" : 35
          }
        }
      }
    },
    "ProspectCustomersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProspectCustomersResponseBody"
        }
      },
      "description" : "ProspectCustomersResponse"
    },
    "ProspectCustomersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerNames" : {
            "type" : "array",
            "description" : "Name of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "type" : "string",
                  "description" : "Name of the customer",
                  "maxLength" : 40
                }
              }
            }
          },
          "streets" : {
            "type" : "array",
            "description" : "Contains the first line of customer's base address, example building number, street number etc.",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 35
                }
              }
            }
          },
          "addresses" : {
            "type" : "array",
            "description" : "Communication Address of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "townCountries" : {
            "type" : "array",
            "description" : "The town and country associated with the address",
            "items" : {
              "type" : "object",
              "properties" : {
                "townCountry" : {
                  "type" : "string",
                  "description" : "The town and country associated with the address",
                  "maxLength" : 35
                }
              }
            }
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "countryNames" : {
            "type" : "array",
            "description" : "This is the country name that the financial institution resides in.",
            "items" : {
              "type" : "object",
              "properties" : {
                "countryName" : {
                  "type" : "string",
                  "description" : "This is the country name that the financial institution resides in.",
                  "maxLength" : 35
                }
              }
            }
          },
          "prospectNetworks" : {
            "type" : "array",
            "description" : "Identifes the prospect customer network details like Phone number, email.",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect",
                  "maxLength" : 17
                },
                "email" : {
                  "type" : "string",
                  "description" : "Email Identifier of the Customer",
                  "maxLength" : 50
                }
              }
            }
          },
          "socialNetworks" : {
            "type" : "array",
            "description" : "Identifies the social networks of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "socialNetworkId" : {
                  "type" : "string",
                  "description" : "Social Network Identification of the person/entity",
                  "maxLength" : 70
                }
              }
            }
          },
          "prospectLegalDetails" : {
            "type" : "array",
            "description" : "Identifies the legal entity details of prospect customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "legalId" : {
                  "type" : "string",
                  "description" : "Unique reference number of the legal documents submitted as identification proof",
                  "maxLength" : 20
                },
                "legalDocumentName" : {
                  "type" : "string",
                  "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                  "maxLength" : 35
                }
              }
            }
          },
          "personEntity" : {
            "type" : "string",
            "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity.",
            "maxLength" : 35
          },
          "gender" : {
            "type" : "string",
            "description" : "Gender of the Individual Customer",
            "maxLength" : 35
          },
          "birthIncorpDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which the entity is incorporated"
          },
          "registeredCountry" : {
            "type" : "string",
            "description" : "Identify which country an entity has been registered.",
            "maxLength" : 2
          }
        }
      }
    },
    "CustomerOpportunitiesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerOpportunitiesResponseBody"
        }
      },
      "description" : "CustomerOpportunitiesResponse"
    },
    "CustomerOpportunitiesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "score" : {
            "type" : "string",
            "description" : "Indicates the sales opportunity score of a product",
            "maxLength" : 5
          }
        }
      }
    },
    "CustomerRequestsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRequestsResponseBody"
        }
      },
      "description" : "CustomerRequestsResponse"
    },
    "CustomerRequestsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "processDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of the current initiated process",
            "maxLength" : 35
          },
          "activityDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of the activity",
            "maxLength" : 35
          },
          "activityStatus" : {
            "type" : "string",
            "description" : "Business Activity Status  POSSIBLE VALUES: 0: Ready  1: Running  2: Completed successfully  3: On hold or in error",
            "maxLength" : 35
          }
        }
      }
    },
    "ProspectCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProspectCustomerBody"
        }
      },
      "description" : "ProspectCustomer"
    },
    "ProspectCustomerBody" : {
      "type" : "object",
      "properties" : {
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 40
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "townCountries" : {
          "type" : "array",
          "description" : "The town and country associated with the address",
          "items" : {
            "type" : "object",
            "properties" : {
              "townCountry" : {
                "type" : "string",
                "description" : "The town and country associated with the address",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postCodes" : {
          "type" : "array",
          "description" : "Identifies the address postal code for the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "postCode" : {
                "type" : "string",
                "description" : "Identifies the address postal code for the customer.",
                "minLength" : 0,
                "maxLength" : 60
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "The phone number of the customer or prospect",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "emails" : {
          "type" : "array",
          "description" : "Email Identifier of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "socialNetworkIds" : {
          "type" : "array",
          "description" : "Social Network Identification of the person/entity",
          "items" : {
            "type" : "object",
            "properties" : {
              "socialNetworkId" : {
                "type" : "string",
                "description" : "Social Network Identification of the person/entity",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "prospectLegalDetails" : {
          "type" : "array",
          "description" : "Identifies the legal entity details of prospect customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 20
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "personEntity" : {
          "type" : "string",
          "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Department identifier.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "subDepartmentId" : {
          "type" : "string",
          "description" : "Contains a sub-division identifier of a large organisation or building",
          "minLength" : 0,
          "maxLength" : 70
        },
        "floorNumber" : {
          "type" : "string",
          "description" : "Contains the floor number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "locationName" : {
          "type" : "string",
          "description" : "Identifies specific location name with in the country or town",
          "minLength" : 0,
          "maxLength" : 35
        },
        "districtName" : {
          "type" : "string",
          "description" : "Stores the district name of the  Beneficiary Customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "registeredCountry" : {
          "type" : "string",
          "description" : "Identify which country an entity has been registered.",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "ProspectCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProspectCustomerResponseBody"
        }
      },
      "description" : "ProspectCustomerResponse"
    },
    "ProspectCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 40
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "townCountries" : {
          "type" : "array",
          "description" : "The town and country associated with the address",
          "items" : {
            "type" : "object",
            "properties" : {
              "townCountry" : {
                "type" : "string",
                "description" : "The town and country associated with the address",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postCodes" : {
          "type" : "array",
          "description" : "Identifies the address postal code for the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "postCode" : {
                "type" : "string",
                "description" : "Identifies the address postal code for the customer.",
                "minLength" : 0,
                "maxLength" : 60
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "The phone number of the customer or prospect",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "emails" : {
          "type" : "array",
          "description" : "Email Identifier of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 50
              }
            }
          }
        },
        "socialNetworkIds" : {
          "type" : "array",
          "description" : "Social Network Identification of the person/entity",
          "items" : {
            "type" : "object",
            "properties" : {
              "socialNetworkId" : {
                "type" : "string",
                "description" : "Social Network Identification of the person/entity",
                "minLength" : 0,
                "maxLength" : 70
              }
            }
          }
        },
        "prospectLegalDetails" : {
          "type" : "array",
          "description" : "Identifies the legal entity details of prospect customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 20
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "personEntity" : {
          "type" : "string",
          "description" : "Identifies if the record is for a real person or a legal entity. Allowed Options: Person or Entity.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "departmentId" : {
          "type" : "string",
          "description" : "Department identifier.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "subDepartmentId" : {
          "type" : "string",
          "description" : "Contains a sub-division identifier of a large organisation or building",
          "minLength" : 0,
          "maxLength" : 70
        },
        "floorNumber" : {
          "type" : "string",
          "description" : "Contains the floor number of the customer address",
          "minLength" : 0,
          "maxLength" : 70
        },
        "locationName" : {
          "type" : "string",
          "description" : "Identifies specific location name with in the country or town",
          "minLength" : 0,
          "maxLength" : 35
        },
        "districtName" : {
          "type" : "string",
          "description" : "Stores the district name of the  Beneficiary Customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "registeredCountry" : {
          "type" : "string",
          "description" : "Identify which country an entity has been registered.",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "AlertRequestsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AlertRequestsResponseBody"
        }
      },
      "description" : "AlertRequestsResponse"
    },
    "AlertRequestsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "description" : "Input is the valid field name for the metrics evaluation of alerts",
            "items" : {
              "type" : "object",
              "properties" : {
                "fieldDisplayName" : {
                  "type" : "string",
                  "description" : "Contains the name of the display for enrichment purposes",
                  "maxLength" : 50
                },
                "operand" : {
                  "type" : "string",
                  "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered.",
                  "maxLength" : 35
                },
                "value" : {
                  "type" : "string",
                  "description" : "The value of the field on which the Alert criteria is based",
                  "maxLength" : 35
                }
              }
            }
          },
          "alertRequestId" : {
            "type" : "string",
            "description" : "The unique identifier of the alert request.",
            "maxLength" : 35
          },
          "contractReference" : {
            "type" : "string",
            "description" : "Contains the contract reference",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "eventId" : {
            "type" : "string",
            "description" : "Event identifier",
            "maxLength" : 35
          },
          "messageGroupId" : {
            "type" : "string",
            "description" : "Contains the starting message id of the conversation",
            "maxLength" : 35
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          }
        }
      }
    }
  }
}