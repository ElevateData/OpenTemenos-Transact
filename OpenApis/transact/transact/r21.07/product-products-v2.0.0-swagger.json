{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create, update and manage the product definition details, interest conditions, repayment calculator, simulate a loan contract and project the schedules",
    "version" : "v2.0.0",
    "title" : "Product Builder"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v2.0.0/",
  "tags" : [ {
    "name" : "RETAIL"
  } ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/product/productLines/{productLineId}/productGroups/{productGroupId}/products" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the details of all the products based on a given Product line and Product group",
        "description" : "Retrieves the details of all the products based on a given Product line and Product group",
        "operationId" : "getProductsPerLineAndGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productLineId",
          "in" : "path",
          "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productGroupId",
          "in" : "path",
          "description" : "The group, as defined by the institution, that the product belongs to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductsPerLineAndGroupResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsPerLineAndGroupResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productLines/{productLineId}/productGroups" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the details of all the products based on a given Product line",
        "description" : "Retrieves the details of all the products based on a given Product line",
        "operationId" : "getProductGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productLineId",
          "in" : "path",
          "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductGroupsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductGroupsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productLines/{productLineId}/activities" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of activities applicable for a given product line",
        "description" : "Retrieves the list of activities applicable for a given product line",
        "operationId" : "getProductLineActivities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productLineId",
          "in" : "path",
          "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductLineActivitiesResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductLineActivitiesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productLines" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of available Product Line",
        "description" : "Retrieves the list of available Product Line",
        "operationId" : "getProductLines",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductLinesResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductLinesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/products" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves all the Product available in the Catalogue",
        "description" : "Retrieves all the Product available in the Catalogue",
        "operationId" : "getAllProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllProductsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsPerLineAndGroupResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/products/{productId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the details of a given Product",
        "description" : "Retrieves the details of a given Product",
        "operationId" : "getProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsPerLineAndGroupResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/propertyClasses" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the product's property class information, which is used for building products",
        "description" : "Retrieves the product's property class information, which is used for building products",
        "operationId" : "getPropertyClasses",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PropertyClassesResponse",
            "schema" : {
              "$ref" : "#/definitions/PropertyClassesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productGroups" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the List of Product Group available with its Product Line",
        "description" : "Retrieves the List of Product Group available with its Product Line",
        "operationId" : "getAllProductGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllProductGroupsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductGroupsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieve the product details for a catalogued product",
        "description" : "Retrieve the product details for a catalogued product",
        "operationId" : "getProductDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productBuilder/interestConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of all the available interest conditions",
        "description" : "Retrieves the list of all the available interest conditions",
        "operationId" : "getAllInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/AllInterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productBuilder/interestConditions/{interestConditionId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the details of the given interest condition",
        "description" : "Retrieves the details of the given interest condition",
        "operationId" : "getInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "interestConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition used to define the interest rate",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "InterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/InterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Creates a new interest condition record",
        "description" : "Creates a new interest condition record",
        "operationId" : "createInterestCondition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "interestConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition used to define the interest rate",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InterestCondition"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "InterestConditionResponse",
            "schema" : {
              "$ref" : "#/definitions/InterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Updates an existing interest condition record",
        "description" : "Updates an existing interest condition record",
        "operationId" : "updateInterestCondition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "interestConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition used to define the interest rate",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InterestCondition"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "InterestConditionResponse",
            "schema" : {
              "$ref" : "#/definitions/InterestConditionsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/product/productBuilder/productConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of Product Conditions available",
        "description" : "Retrieves the list of Product Conditions available",
        "operationId" : "getProductConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productBuilder/properties" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the details of all the available properties",
        "description" : "Retrieves the details of all the available properties",
        "operationId" : "getProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PropertiesResponse",
            "schema" : {
              "$ref" : "#/definitions/PropertiesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productBuilder/projects" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of available projects created to build a product",
        "description" : "Retrieves the list of available projects created to build a product",
        "operationId" : "getProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProjectsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/commitment/{amount}/period/{term}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the Repayment Details for the given Product, Principal amount and Term",
        "description" : "Retrieves the Repayment Details for the given Product, Principal amount and Term",
        "operationId" : "getRepaymentCalculator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "path",
          "description" : "This is the payment amount",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "term",
          "in" : "path",
          "description" : "Indicates the period to which the BID and OFFER rates apply",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "currencyId",
          "in" : "query",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentFrequency",
          "in" : "query",
          "description" : "The frequency at which a payment is required to be generated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "RepaymentCalculatorResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentCalculatorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/loans/simulations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate a Loan Arrangement for the given principal amount, term, payment frequency and interest rates",
        "description" : "API to simulate a Loan Arrangement for the given principal amount, term, payment frequency and interest rates",
        "operationId" : "createSynchronousSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SynchronousSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSynchronousSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/SynchronousSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/loans/simulations/schedules" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate a loan arrangement and retrieve the payment schedule details",
        "description" : "Simulate a loan arrangement for the given Principal amount, Term, Payment frequency and Interest rates. This API allows to retrieve the details of payment schedules for the simulated contract",
        "operationId" : "createSynchronousSimulationSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SynchronousSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSynchronousSimulationSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/SynchronousSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/productTypes" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of product types available in Transact system",
        "description" : "Retrieves the list of product types available in Transact system",
        "operationId" : "getAllProductTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "AllProductTypesResponse",
            "schema" : {
              "$ref" : "#/definitions/AllProductTypesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productTypes/{productType}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the product type details for a given Product Type",
        "description" : "Retrieves the product type details for a given Product Type",
        "operationId" : "getProductType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productType",
          "in" : "path",
          "description" : "Indicates the product type for the deal",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductTypeResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductTypeResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productTypes/products/{productId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the basic details of a given product",
        "description" : "Retrieves the basic details such as product details,status,proof and publish errors if any",
        "operationId" : "getProductStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description": "ProductStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create a product using the conditions available from the product type",
        "description" : "Create a product from a product type",
        "operationId" : "createProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref": "#/definitions/CreateProductsResponse"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update a product such as property conditions and its condition values",
        "description" : "Update a product such as property conditions and its condition values",
        "operationId" : "updateProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
              "$ref": "#/definitions/UpdateProductsResponse"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductsResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/product/productFeatures/{productFeatureId}/attributes" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the attribute and the field structure",
        "description" : "Retrieves the attribute and the field structure for the given product feature",
        "operationId" : "getPropertyFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productFeatureId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productConditionId",
          "in" : "query",
          "description" : "The identifier of the product condition",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PropertyFieldsResponse",
            "schema" : {
              "$ref" : "#/definitions/PropertyFieldsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productGroups/{productGroupId}/productFeatures/productConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the product conditions for the product features",
        "description" : "Retrieves the product conditions for the product features present in the product group",
        "operationId" : "getProductLineFeatureConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productGroupId",
          "in" : "path",
          "description" : "The group, as defined by the institution, that the product belongs to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductLineFeatureConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductLineFeatureConditionsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productConditions/{productConditionId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the base condition details of a product feature",
        "description" : "Retrieves the base condition details of a product feature such as the attributes ,their field name and values,status and validation errors if any",
        "operationId" : "getConditionGenerator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ConditionGeneratorResponse",
            "schema" : {
              "$ref" : "#/definitions/ConditionGeneratorResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ ],
        "summary" : "Create the product condition for the product feature",
        "description" : "Create the product condition for the product feature based on the attributes and their field name and values",
        "operationId" : "createConditionGenerator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConditionGenerator"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ConditionGeneratorResponse",
            "schema" : {
              "$ref" : "#/definitions/ConditionGeneratorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ ],
        "summary" : "Update the product condition for the product feature",
        "description" : "Update the product condition for the product feature based on the attributes and their field name and values",
        "operationId" : "updateConditionGenerator",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productConditionId",
          "in" : "path",
          "description" : "The identifier of the product condition",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConditionGenerator"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ConditionGeneratorResponse",
            "schema" : {
              "$ref" : "#/definitions/ConditionGeneratorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/product/productFeatures" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of features",
        "description" : "Retrieves the list of product features and product line details",
        "operationId" : "getProductLineFeatures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductLineFeaturesResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductLineFeaturesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/{productId}/productConditions" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the catalogued conditions of a given product",
        "description" : "Retrieves the catalogued conditions of a given product",
        "operationId" : "getProductCatalogue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductCatalogueResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductCatalogueResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/productManagers/{productId}" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Update the action for product",
        "description" : "Update the action such as PROOF and PUBLISH for the specific product",
        "operationId" : "updateProductManager",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductManager"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProductManagerResponse",
            "schema" : {
              "$ref" : "#/definitions/ProductManagerResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/product/interestConditions" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves all the available interest conditions",
        "description" : "Retrieves all the available interest conditions",
        "operationId" : "getInterestConditionReference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "InterestConditionReferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/AllInterestConditionReferenceResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "ProductsPerLineAndGroupResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductsPerLineAndGroupResponseBody"
        }
      },
      "description" : "ProductsPerLineAndGroupResponse"
    },
    "ProductsPerLineAndGroupResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "currencies" : {
            "type" : "array",
            "description" : "Identifies the currency. E.g. USD, GBP etc",
            "items" : {
              "type" : "object",
              "properties" : {
                "currencyId" : {
                  "type" : "string",
                  "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
                },
                "currencyName" : {
                  "type" : "string",
                  "description" : "The name that is displayed for the currency"
                }
              }
            }
          },
          "termDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "minimumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the minimum term associated with the loan process."
                },
                "maximumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the maximum term associated with the loan process."
                }
              }
            }
          },
          "productLineId" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products."
          },
          "productLineName" : {
            "type" : "string",
            "description" : "Description of the product line, e.g. Client Consent for product line CONSENT."
          },
          "productGroupId" : {
            "type" : "string",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "maxLength" : 35
          },
          "productGroupName" : {
            "type" : "string",
            "description" : "Description of the product group",
            "maxLength" : 35
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 35
          },
          "availableFromDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the product is available in the catalogue for sale to customers"
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "ProductGroupsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductGroupsResponseBody"
        }
      },
      "description" : "ProductGroupsResponse"
    },
    "ProductGroupsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productGroupId" : {
            "type" : "string",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "maxLength" : 30
          },
          "productLineId" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 20
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          }
        }
      }
    },
    "ProductLineActivitiesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductLineActivitiesResponseBody"
        }
      },
      "description" : "ProductLineActivitiesResponse"
    },
    "ProductLineActivitiesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "activityClassId" : {
            "type" : "string",
            "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
            "maxLength" : 65
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          }
        }
      }
    },
    "ProductLinesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductLinesResponseBody"
        }
      },
      "description" : "ProductLinesResponse"
    },
    "ProductLinesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productLine" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 20
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          }
        }
      }
    },
    "PropertyClassesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PropertyClassesResponseBody"
        }
      },
      "description" : "PropertyClassesResponse"
    },
    "PropertyClassesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "type" : "object",
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes",
                  "maxLength" : 50
                }
              }
            }
          },
          "propertyClassId" : {
            "type" : "string",
            "description" : "The identifier of a condition that is used to build a product",
            "maxLength" : 29
          },
          "propertyClassName" : {
            "type" : "string",
            "description" : "The name of the condition that is used to build a product",
            "maxLength" : 35
          }
        }
      }
    },
    "ProductDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductDetailsResponseBody"
        }
      },
      "description" : "ProductDetailsResponse"
    },
    "ProductDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "ccySpecific" : {
            "type" : "array",
            "description" : "Identifies the fees applicable for a transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "currency" : {
                  "type" : "string",
                  "description" : "Identifies the currency. E.g. USD, GBP etc",
                  "maxLength" : 20
                },
                "creditInterest" : {
                  "type" : "string",
                  "description" : "It is the Interest property which is the part of the Product. It represent the Positive interest accrued for an account.",
                  "maxLength" : 40
                },
                "creditInterestType" : {
                  "type" : "string",
                  "description" : "Indicates the type of calculation selected for credit interest. Types such as Single, Level and Band are available",
                  "maxLength" : 10
                },
                "creditInterestMinimumBalance" : {
                  "type" : "string",
                  "description" : "The minimum tier balance allocated for the credit interest property. This will belong to Level/Band type of properties.",
                  "maxLength" : 25
                },
                "creditInterestMaximumBalance" : {
                  "type" : "string",
                  "description" : "The maximum tier balance allocated for the credit interest property. This will belong to Level/Band type of properties.",
                  "maxLength" : 25
                },
                "creditInterestMarginRate" : {
                  "type" : "string",
                  "description" : "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect the effective rate given for a property.",
                  "maxLength" : 10
                },
                "debitInterest" : {
                  "type" : "string",
                  "description" : "It is the Interest property which is the part of the Product. It represents the interest accrued for an account.",
                  "maxLength" : 40
                },
                "debitInterestType" : {
                  "type" : "string",
                  "description" : "Indicates the type of calculation selected for debit interest. Types such as Single, Level and Band are available",
                  "maxLength" : 20
                },
                "debitInterestMinimumBalance" : {
                  "type" : "string",
                  "description" : "The minimum tier balance allocated for the debit interest property. This will belong to Level/Band type of properties.",
                  "maxLength" : 30
                },
                "debitInterestMaximumBalance" : {
                  "type" : "string",
                  "description" : "The maximum tier balance allocated for the debit interest property. This will belong to Level/Band type of properties.",
                  "maxLength" : 30
                },
                "debitInterestMarginRate" : {
                  "type" : "string",
                  "description" : "A margin rate can be used to adjust the specified rate of interest and to appropriately reflect the effective rate given for a property.",
                  "maxLength" : 10
                },
                "overdraftAmount" : {
                  "type" : "string",
                  "description" : "Represents the Overdrafted amount to an account.",
                  "maxLength" : 30
                },
                "minimumAmount" : {
                  "type" : "string",
                  "description" : "The minimum account balance required.",
                  "maxLength" : 30
                },
                "maximumAmount" : {
                  "type" : "string",
                  "description" : "The maximum account balance allowed.",
                  "maxLength" : 40
                },
                "amount" : {
                  "type" : "string",
                  "description" : "This is the payment amount",
                  "maxLength" : 40
                },
                "noticePeriod" : {
                  "type" : "string",
                  "description" : "The period for which the funds will be available once notice has been given.",
                  "maxLength" : 10
                },
                "term" : {
                  "type" : "string",
                  "description" : "Indicates the period to which the BID and OFFER rates apply",
                  "maxLength" : 10
                },
                "minimumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the minimum term associated with the loan process.",
                  "maxLength" : 10
                },
                "maximumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the maximum term associated with the loan process.",
                  "maxLength" : 10
                },
                "periodicIndex" : {
                  "type" : "string",
                  "description" : "Denotes an index which points to the right period of the securities or holdings."
                },
                "interestRates" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "creditInterestTierAmount" : {
                        "type" : "string",
                        "description" : "The maximum monetary amount that can be specified for the tier. Applicable for Level/Band Types",
                        "maxLength" : 30
                      },
                      "creditInterestTierPercentage" : {
                        "type" : "string",
                        "description" : "Applicable tier percentage (between 0 and 100) for credit interest calculations based on amount specified in Term Amount. Term Amount - The monetary amount applied to the account.",
                        "maxLength" : 5
                      },
                      "creditInterestRate" : {
                        "type" : "string",
                        "description" : "The Effective rate of an interest property applied on an account.",
                        "maxLength" : 20
                      },
                      "debitInterestTierAmount" : {
                        "type" : "string",
                        "description" : "The minimum monetary amount that can be specified for the tier. In Level/Band Type of Interest.",
                        "maxLength" : 30
                      },
                      "debitInterestTierPercentage" : {
                        "type" : "string",
                        "description" : "Applicable tier percentage (between 0 and 100) for debit interest calculations based on amount specified in Term Amount. Term Amount - The monetary amount applied to the account.",
                        "maxLength" : 5
                      },
                      "debitInterestRate" : {
                        "type" : "string",
                        "description" : "The Effective rate of an interest property applied on an account.",
                        "maxLength" : 10
                      }
                    }
                  }
                },
                "fees" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "fee" : {
                        "type" : "string",
                        "description" : "The charge or fee collected for an account.",
                        "maxLength" : 40
                      },
                      "feeAmount" : {
                        "type" : "string",
                        "description" : "Indicates the fee amount which is applied for the payment instruction",
                        "maxLength" : 40
                      },
                      "feeFrequency" : {
                        "type" : "string",
                        "description" : "The frequency/schedule on which the fee is collected.",
                        "maxLength" : 60
                      }
                    }
                  }
                }
              }
            }
          },
          "facilities" : {
            "type" : "array",
            "description" : "Available Facilities",
            "items" : {
              "type" : "object",
              "properties" : {
                "service" : {
                  "type" : "string",
                  "description" : "Unique id of the service"
                },
                "serviceAvailability" : {
                  "type" : "string",
                  "description" : "It will indicate whether the corresponding service is available for arrangement account"
                },
                "defaultOption" : {
                  "type" : "string",
                  "description" : "Indicates whether the option will be selected by default if no instruction is provided by the account owner"
                },
                "customerOptions" : {
                  "type" : "string",
                  "description" : "It will indicate whether user has opted the service or not."
                },
                "serviceAvailabiltyOptions" : {
                  "type" : "string",
                  "description" : "Indicates the service availability options"
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "productGroupId" : {
            "type" : "string",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "maxLength" : 20
          },
          "productLine" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 5
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product",
            "maxLength" : 60
          },
          "productLineDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of product line",
            "maxLength" : 10
          },
          "productGroupDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of product group",
            "maxLength" : 10
          },
          "printingAttributePosition" : {
            "type" : "string",
            "description" : "Indicates the printing attribute position"
          },
          "productCoCode" : {
            "type" : "string",
            "description" : "Indicates the company code of product"
          },
          "availableFromDate" : {
            "type" : "string",
            "description" : "The date the product is available in the catalogue for sale to customers"
          },
          "availableToDate" : {
            "type" : "string",
            "description" : "Indicates the expiry date of the catalogued product"
          }
        }
      }
    },
    "AllInterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AllInterestConditionsResponseBody"
        }
      },
      "description" : "AllInterestConditionsResponse"
    },
    "AllInterestConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interestConditionId" : {
            "type" : "string",
            "description" : "The identifier of the product condition used to define the interest rate",
            "maxLength" : 80
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          }
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "InterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InterestConditionsResponseBody"
        }
      },
      "description" : "InterestConditionsResponse"
    },
    "InterestConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "rates" : {
          "type" : "array",
          "description" : "The rate applied",
          "items" : {
            "type" : "object",
            "properties" : {
              "fixedRate" : {
                "type" : "string",
                "description" : "Numeric value for the interest rate entered manually.",
                "minLength" : 0,
                "maxLength" : 9
              },
              "floatingRate" : {
                "type" : "string",
                "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "linkedRateIndicator" : {
                "type" : "string",
                "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                "minLength" : 0,
                "maxLength" : 19
              },
              "customRateIndicator" : {
                "type" : "string",
                "description" : "A custom rate can be calculated and applied to an account, flag set to Yes for this to be invoked otherwise No.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minimumTierRate" : {
                "type" : "string",
                "description" : "A minimum interest rate can be applied at each tier.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "maximumTierRate" : {
                "type" : "string",
                "description" : "The maximum rate that can be applied at each tier.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "tierAmount" : {
                "type" : "string",
                "description" : "The monetary amount for the tier.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "tierNegativeRate" : {
                "type" : "string",
                "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                "minLength" : 0,
                "maxLength" : 16
              },
              "tierPercent" : {
                "type" : "string",
                "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                "minLength" : 0,
                "maxLength" : 11
              },
              "margins" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "marginType" : {
                      "type" : "string",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "marginOperand" : {
                      "type" : "string",
                      "description" : "This is the operand which determines if a  margin is added or subtracted from the interest rate.  Options are ADD or SUB.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "marginRate" : {
                      "type" : "string",
                      "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            }
          }
        },
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "rateTierType" : {
          "type" : "string",
          "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
          "minLength" : 0,
          "maxLength" : 18
        },
        "linkedArrangement" : {
          "type" : "string",
          "description" : "The account which is linked for calculating interest that should be applied to this account",
          "minLength" : 0,
          "maxLength" : 18
        },
        "defaultNegotiable" : {
          "type" : "string",
          "description" : "Indicates the field values are negotiable or not at arrangement level",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "InterestCondition" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InterestConditionBody"
        }
      },
      "description" : "InterestCondition"
    },
    "InterestConditionBody" : {
      "type" : "object",
      "properties" : {
        "rates" : {
          "type" : "array",
          "description" : "The rate applied",
          "items" : {
            "type" : "object",
            "properties" : {
              "fixedRate" : {
                "type" : "string",
                "description" : "Numeric value for the interest rate entered manually.",
                "minLength" : 0,
                "maxLength" : 9
              },
              "floatingRate" : {
                "type" : "string",
                "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "linkedRateIndicator" : {
                "type" : "string",
                "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                "minLength" : 0,
                "maxLength" : 19
              },
              "customRateIndicator" : {
                "type" : "string",
                "description" : "A custom rate can be calculated and applied to an account, flag set to Yes for this to be invoked otherwise No.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minimumTierRate" : {
                "type" : "string",
                "description" : "A minimum interest rate can be applied at each tier.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "maximumTierRate" : {
                "type" : "string",
                "description" : "The maximum rate that can be applied at each tier.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "tierAmount" : {
                "type" : "string",
                "description" : "The monetary amount for the tier.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "tierNegativeRate" : {
                "type" : "string",
                "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                "minLength" : 0,
                "maxLength" : 16
              },
              "tierPercent" : {
                "type" : "string",
                "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                "minLength" : 0,
                "maxLength" : 11
              },
              "margins" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "marginType" : {
                      "type" : "string",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "marginOperand" : {
                      "type" : "string",
                      "description" : "This is the operand which determines if a  margin is added or subtracted from the interest rate.  Options are ADD or SUB.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "marginRate" : {
                      "type" : "string",
                      "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            }
          }
        },
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "rateTierType" : {
          "type" : "string",
          "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
          "minLength" : 0,
          "maxLength" : 18
        },
        "linkedArrangement" : {
          "type" : "string",
          "description" : "The account which is linked for calculating interest that should be applied to this account",
          "minLength" : 0,
          "maxLength" : 18
        },
        "defaultNegotiable" : {
          "type" : "string",
          "description" : "Indicates the field values are negotiable or not at arrangement level",
          "minLength" : 0,
          "maxLength" : 17
        }
      }
    },
    "ProductConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductConditionsResponseBody"
        }
      },
      "description" : "ProductConditionsResponse"
    },
    "ProductConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productConditionId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 50
          },
          "productConditionName" : {
            "type" : "string",
            "description" : "Free text description of the product condition",
            "maxLength" : 35
          }
        }
      }
    },
    "PropertiesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PropertiesResponseBody"
        }
      },
      "description" : "PropertiesResponse"
    },
    "PropertiesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 50
          },
          "propertyClass" : {
            "type" : "string",
            "description" : "Condition that is used to build a product",
            "maxLength" : 30
          },
          "propertyType" : {
            "type" : "string",
            "description" : "Values selected to determine action on condition e.g. accounting rules only changed at product level. Standard set of values to select from.",
            "maxLength" : 25
          }
        }
      }
    },
    "ProjectsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProjectsResponseBody"
        }
      },
      "description" : "ProjectsResponse"
    },
    "ProjectsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "displayId" : {
            "type" : "string",
            "description" : "Display Id",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "user" : {
            "type" : "string",
            "description" : "The user who created the project",
            "maxLength" : 35
          }
        }
      }
    },
    "RepaymentCalculatorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentCalculatorResponseBody"
        }
      },
      "description" : "RepaymentCalculatorResponse"
    },
    "RepaymentCalculatorResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "payments" : {
            "type" : "array",
            "description" : "Groups the payment currency and country details",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentAmount" : {
                  "type" : "string",
                  "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
                  "maxLength" : 12
                },
                "effectivePeriod" : {
                  "type" : "string",
                  "description" : "Indicates the effective period after which the new product condition comes into effect",
                  "maxLength" : 12
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "period" : {
            "type" : "string",
            "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc.",
            "maxLength" : 30
          },
          "totalInterestAmount" : {
            "type" : "string",
            "description" : "Indicates the sum of interest amounts which was made due over the tenure",
            "maxLength" : 12
          },
          "totalPrincipalAmount" : {
            "type" : "string",
            "description" : "Indicates the sum of principal amounts which was due over the tenure",
            "maxLength" : 12
          },
          "totalFeesAmount" : {
            "type" : "string",
            "description" : "Indicates the sum of charge amounts which was made due over the tenure",
            "maxLength" : 12
          },
          "totalPaymentAmount" : {
            "type" : "string",
            "description" : "Indicates the total payment amount which was made due over the tenure",
            "maxLength" : 12
          }
        }
      }
    },
    "SynchronousSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SynchronousSimulationBody"
        }
      },
      "description" : "SynchronousSimulation"
    },
    "SynchronousSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Input is the valid field name for the metrics evaluation of alerts",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Value of the field",
                      "minLength" : 0,
                      "maxLength" : 100
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 17
         }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "SynchronousSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SynchronousSimulationResponseBody"
        }
      },
      "description" : "SynchronousSimulationResponse"
    },
    "SynchronousSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Input is the valid field name for the metrics evaluation of alerts",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Value of the field",
                          "minLength" : 0,
                          "maxLength" : 100
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 10
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 17
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },

                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"				
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prCurrentBalances" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prAdvanceRepay" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
					  "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"					  
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },					  
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by T24"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the term for which the contract is booked",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
  "AllProductTypesResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/AllProductTypesResponseBody"
        }
      },
      "description": "AllProductTypesResponse"
    },
    "AllProductTypesResponseBody": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productTypes": {
            "type": "string",
            "description": "Indicates the Id(s) of a Blueprint product from which an actual product can be created",
            "maxLength": 30
          },
          "productTypeName" : {
            "type" : "string",
            "description" : "Indicates the description of the Blue print product type. Blueprint product type defines the base product from which an actual product can be created",
            "maxLength" : 50
          },
          "description": {
            "type": "string",
            "description": "Indicates the description of the Blue print product type",
            "maxLength": 30
          }
        }
      }
    },
    "ProductTypeResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductTypeResponseBody"
          }
        }
      }
										   
    },
    "ProductTypeResponseBody": {
      "properties": {
        "productType": {
          "type": "string",
          "description": "Indicates the Id(s) of a Blueprint product from which an actual product can be created",
          "maxLength": 100
        },
        "description": {
          "type": "string"
        },
        "availableCurrency": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/currencyObject"
          }
        },
        "productAttributes": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldsObject"
          }
        },
        "propertyList": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/PropertyList"
          }
        }
      }
    },
    "CreateProductsResponseBody": {
      "properties": {
        "productType": {
          "type": "string",
		  "description": "Indicates the Id of the Blueprint product from which the product is created"
        },
        "productId": {
          "type": "string",
		  "description": "The unique identifier of the product created from the blueprint product"
        },
        "productName": {
          "type": "string",
		  "description": "Indicates the description of the product created from the blueprint product"
        },
        "productDescription": {
          "type": "string",
		  "description": "Indicates the full description of the product created from the blueprint product"
        },
        "availableCurrency": {
          "type": "array",
		  "description": "Indicates the list of currencies available for the product created",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductCurrencyObject"
          }
        },
        "effectiveDate": {
          "type": "string",
		  "description": "Indicates the date on which the product is created or amended in Transact system"
        },
        "version": {
          "type": "string",
		  "description": "Indicates the version of the Product created or ameded"
        },
        "productAttributes": {
          "type": "array",
		  "description": "Indicates the availability of the product created from the blueprint product",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductFieldsObject"
          }
        },
        "propertyList": {
          "type": "array",
		  "description": "Indicates the list of properties exposed in the blueprint product",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductPropertyList"
          }
        }
      }
    },
    "PropertyList": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "currencyDependent": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        },
        "conditionList": {
          "$ref": "#/definitions/conditionList"
        }
      },
      "xml": {
        "name": "propertyList"
      }
    },
    "ProductPropertyList": {
      "type": "object",
      "properties": {
        "property": {
          "type": "string"
        },
        "conditionList": {
          "$ref": "#/definitions/ProductConditionList"
        }
      },
      "xml": {
        "name": "propertyList"
      }
    },
    "conditionList": {
      "type": "array",
      "xml": {
        "name": "tag",
        "wrapped": true
      },
      "items": {
        "$ref": "#/definitions/currencies"
      }
    },
    "ProductConditionList": {
      "type": "array",
      "xml": {
        "name": "tag",
        "wrapped": true
      },
      "items": {
        "$ref": "#/definitions/ProductCurrencies"
      }
    },
    "currencies": {
      "type": "object",
      "properties": {
        "conditionName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contextDescription": {
          "type": "string"
        },
        "baseCondition": {
          "type": "string"
        },
        "currencies": {
          "$ref": "#/definitions/ArrayTag"
        }
      }
    },
    "ProductCurrencies": {
      "type": "object",
      "properties": {
        "conditionName": {
          "type": "string"
        },
        "currencies": {
          "$ref": "#/definitions/ProductArrayTag"
        }
      }
    },
    "ArrayTag": {
      "type": "array",
      "xml": {
        "name": "tag",
        "wrapped": true
      },
      "items": {
        "$ref": "#/definitions/Attributes"
      }
    },
    "ProductArrayTag": {
      "type": "array",
      "xml": {
        "name": "tag",
        "wrapped": true
      },
      "items": {
        "$ref": "#/definitions/ProductAttributes"
      }
    },
    "Attributes": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "currencyName": {
          "type": "string"
        },
        "periodAllowed": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldsObject"
          }
        }
      }
    },
    "ProductAttributes": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "periodAllowed": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductFieldsObject"
          }
        }
      }
    },
    "FieldsObject": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "multipleExclusive": {
          "type": "boolean"
        },
        "attributeRule": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
         "hide": {
          "type": "boolean"
        },
         "inputable": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldArray"
          }
        }
      }
    },
	"ProductFieldsObject": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductFieldArray"
          }
        }
      }
    },
    "ProductFieldArray": {
      "type": "object",
      "properties": {
        "field": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductFieldObject"
          }
        }
      }
    },
    "FieldArray": {
      "type": "object",
      "properties": {
        "field": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldObject"
          }
        }
      }
    },
    "FieldObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "displayOnly": {
          "type": "boolean"
        },
        "maximumLength": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "hidden" : {
          "type" : "boolean"
        },
        "fieldRule" : {
          "type" : "string"
        },
        "fieldEnableRule": {
          "type": "string"
        },
        "multiple" : {
          "type" : "boolean"
        },
         "hide": {
          "type": "boolean"
        },
         "inputable": {
          "type": "boolean"
        },
        "optionList": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/optionsObject"
          }
        },
        "parameterList": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/RuleObject"
          }
        },
        "attribute": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldsObject"
          }
        }
      }
    },
    "RuleObject": {
      "type": "object",
      "properties": {
        "parameter": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "tag",
            "wrapped": true
          }
        }
      }
    },
    "ProductFieldObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "exclude": {
          "type": "boolean"
        },
        "attribute": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ProductFieldsObject"
          }
        }
      }
    },
    "optionsObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desription": {
          "type": "string",
          "xml": {
            "name": "tag",
            "wrapped": true
          }
        }
      }
    },
    "currencyObject": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "currencyName": {
          "type": "string"
        },
        "include": {
          "type": "boolean",
          "xml": {
            "name": "tag",
            "wrapped": true
          }
        }
      }
    },
    "ProductCurrencyObject": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "include": {
          "type": "boolean",
          "xml": {
            "name": "tag",
            "wrapped": true
          }
        }
      }
    },
    "Products": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        },
        "body": {
          "$ref": "#/definitions/ProductsBody"
        }
      },
      "description": "Products"
    },
    "ProductsBody": {
      "type": "object",
      "properties": {
        "productAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productAttribute": {
                "type": "string",
                "description": "Indicates the Attributes available for the Blue Print Product/Product Type such as Product dates,Line of Business, Organization, Channel",
                "minLength": 0,
                "maxLength": 17
              },
              "productFields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "attributeFieldName": {
                      "type": "string",
                      "description": "Indicates the name of the fields attached to the attribute/attribute type",
                      "minLength": 0,
                      "maxLength": 18
                    },
                    "attributeFieldValue": {
                      "type": "string",
                      "description": "Indicates the value of the fields attached to the attribute/attribute type",
                      "minLength": 0,
                      "maxLength": 19
                    }
                  }
                }
              }
            }
          }
        },
        "propertyConditions": {
          "type": "array",
          "description": "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
          "items": {
            "type": "object",
            "properties": {
              "propertyCondition": {
                "type": "string",
                "description": "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
                "minLength": 0,
                "maxLength": 18
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "attribute": {
                      "type": "string",
                      "description": "Indicates an attribute id under which fields and its meta can be defined",
                      "minLength": 0,
                      "maxLength": 9
                    },
                    "fieldName": {
                      "type": "string",
                      "description": "The name of the field",
                      "minLength": 0,
                      "maxLength": 9
                    },
                    "fieldValue": {
                      "type": "string",
                      "description": "Indicates the value of the field ",
                      "minLength": 0,
                      "maxLength": 10
                    }
                  }
                }
              }
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "errorType": {
                "type": "string",
                "description": "Indicates the Type of error raised during product proof and publish",
                "minLength": 0,
                "maxLength": 15
              },
              "errorInfo": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "errorSource": {
                      "type": "string",
                      "description": "Indicates the Source of error message such as Application name and fields",
                      "minLength": 0,
                      "maxLength": 11
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Indicates the error message raised during product proof and publish",
                      "minLength": 0,
                      "maxLength": 12
                    }
                  }
                }
              }
            }
          }
        },
        "productType": {
          "type": "string",
          "description": "Indicates the description of the Blue print product type",
          "minLength": 0,
          "maxLength": 11
        },
        "productId": {
          "type": "string",
          "description": "The identifier of the product",
          "minLength": 0,
          "maxLength": 9
        },
        "productDescription": {
          "type": "string",
          "description": "Indicates the Description of the product",
          "minLength": 0,
          "maxLength": 18
        },
        "availableCurrency": {
          "type": "string",
          "description": "Indicates the list of currencies available under the Blueprint product/product type",
          "minLength": 0,
          "maxLength": 17
        },
        "effectiveDate": {
          "type": "string",
          "description": "Indicates the date on which the product is created in Transact system",
          "minLength": 0,
          "maxLength": 13
        },
        "version": {
          "type": "string",
          "description": "Indicates the version of the Product created from Micro-service",
          "minLength": 0,
          "maxLength": 7
        },
        "importStatus": {
          "type": "string",
          "description": "Indicates the status of the product created,i.e Product Published/Errors if any",
          "minLength": 0,
          "maxLength": 12
        },
        "importHistory": {
          "type": "string",
          "description": "Indicates the Flag to determine the history of the Product created",
          "minLength": 0,
          "maxLength": 13
        },
        "retry": {
          "type": "string",
          "description": "Indicates an option to retry the product creation",
          "minLength": 0,
          "maxLength": 5
        },
        "importType": {
          "type": "string",
          "description": "Indicates the Flag to determine the type of Import,i.e AA",
          "minLength": 0,
          "maxLength": 10
        }
      }
    },
    "ProductsResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ScreenHeader"
        },
        "body": {
          "$ref": "#/definitions/ProductsResponseBody"
        }
      }
    },
    "CreateProductsResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ScreenHeader"
        },
        "body": {
          "$ref": "#/definitions/CreateProductsResponseBody"
        }
      }
    },
    "UpdateProductsResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ScreenHeader"
        },
        "body": {
          "$ref": "#/definitions/CreateProductsResponseBody"
        }
      }
    },
    "ProductsResponseBody": {
      "type": "object",
      "properties": {
        "productAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productAttribute": {
                "type": "string",
                "description": "Indicates the Attributes  available for the Blue Print Product/Product Type such as Product dates,Line of Business, Organization, Channel",
                "minLength": 0,
                "maxLength": 17
              },
              "productFields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "attributeFieldName": {
                      "type": "string",
                      "description": "Indicates the name of the fields attached to the attribute/attribute type",
                      "minLength": 0,
                      "maxLength": 18
                    },
                    "attributeFieldValue": {
                      "type": "string",
                      "description": "Indicates the value of the fields attached to the attribute/attribute type",
                      "minLength": 0,
                      "maxLength": 19
                    }
                  }
                }
              }
            }
          }
        },
        "propertyConditions": {
          "type": "array",
          "description": "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
          "items": {
            "type": "object",
            "properties": {
              "propertyCondition": {
                "type": "string",
                "description": "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
                "minLength": 0,
                "maxLength": 18
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "attribute": {
                      "type": "string",
                      "description": "Indicates the Id of the EbApiAttribute application to which fields and meta defined",
                      "minLength": 0,
                      "maxLength": 9
                    },
                    "fieldName": {
                      "type": "string",
                      "description": "The name of the field",
                      "minLength": 0,
                      "maxLength": 9
                    },
                    "fieldValue": {
                      "type": "string",
                      "description": "Indicates the value of the fields attached to the attribute/attribute type",
                      "minLength": 0,
                      "maxLength": 10
                    }
                  }
                }
              }
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "errorType": {
                "type": "string",
                "description": "Indicates the Type of error raised during product proof and publish",
                "minLength": 0,
                "maxLength": 15
              },
              "errorInfo": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "errorSource": {
                      "type": "string",
                      "description": "Indicates the Source of error message such as Application name and field",
                      "minLength": 0,
                      "maxLength": 11
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Indicates the error message raised during product proof and publish",
                      "minLength": 0,
                      "maxLength": 12
                    }
                  }
                }
              }
            }
          }
        },
        "productType": {
          "type": "string",
          "description": "Indicates the Id(s) of a Blueprint product from which an actual product can be created",
          "minLength": 0,
          "maxLength": 11
        },
        "productId": {
          "type": "string",
          "description": "The identifier of the product",
          "minLength": 0,
          "maxLength": 9
        },
        "productDescription": {
          "type": "string",
          "description": "Indicates the Description of the product",
          "minLength": 0,
          "maxLength": 18
        },
        "availableCurrency": {
          "type": "string",
          "description": "Indicates the list of currencies available under the Blueprint product/product type",
          "minLength": 0,
          "maxLength": 17
        },
        "effectiveDate": {
          "type": "string",
          "description": "Indicates the date on which the product is created in Transact system",
          "minLength": 0,
          "maxLength": 13
        },
        "version": {
          "type": "string",
          "description": "Indicates the version of the Product created from Microservice",
          "minLength": 0,
          "maxLength": 7
        },
        "importStatus": {
          "type": "string",
          "description": "Indicates the status of the product created,i.e Product Published/Errors if any",
          "minLength": 0,
          "maxLength": 12
        },
        "importHistory": {
          "type": "string",
          "description": "Indicates the Flag to determine the history of the Product created",
          "minLength": 0,
          "maxLength": 13
        },
        "retry": {
          "type": "string",
          "description": "Indicates an option to retry the product creation",
          "minLength": 0,
          "maxLength": 5
        },
        "importType": {
          "type": "string",
          "description": "Indicates the Flag to determine the type of Import,i.e AA",
          "minLength": 0,
          "maxLength": 10
        }
      }
    },
    "PropertyFieldsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PropertyFieldsResponseBody"
        }
      },
      "description" : "PropertyFieldsResponse"
    },
    "PropertyFieldsResponseBody" : {
      "properties": {
        "propertyId": {
          "type": "string",
          "description": "Contains the virtual business feature which contains one or more functional conditions. For example, Activity Charges feature abstracts the Activity Charges, Activity Restriction and Fees classes",
          "maxLength": 100
        },
        "conditionName": {
          "type": "string",
          "description": "The identifier of the product condition",
          "maxLength": 100
        },
        "effectiveDate": {
          "type": "string"
        },
        "currencies":{
        "type" : "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items" : {
            "$ref": "#/definitions/FeaturecurrencyObject"
          }
        }
      }
    },
    "FeaturecurrencyObject": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "currencyName": {
          "type": "string"
        },
        "inputable": {
          "type": "boolean"
        },
          "attributes": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FeatureFieldsObject"
          }
        }
      }
    },
    "FeatureFieldsObject": {
        "type" : "object",
        "properties" : {
        "attribute": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "attributeRule": {
          "type": "string"
        },
        "multipleExclusive": {
          "type": "boolean"
        },
        "hide": {
          "type" :"boolean"
        },
        "inputable" :{
       	  "type":"boolean"
        },
        "fields": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldArray"
          }
        }
      }
    },
    
    "FeatureFieldArray": {
      "type": "object",
      "properties": {
        "field": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FeatureFieldObject"
          }
        }
      }
    },
    "FeatureFieldObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "displayOnly": {
          "type": "boolean"
        },
        "maximumLength": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "fieldRule": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "multiple": {
          "type": "boolean"
        },
        "optionList": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/optionsObject"
          }
        },
        "attribute": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/FieldsObject"
          }
        }
      }
    },
    "ProductLineFeatureConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductLineFeatureConditionsResponseBody"
        }
      },
      "description" : "ProductLineFeatureConditionsResponse"
    },
    "ProductLineFeatureConditionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "featureProperty" : {
            "type" : "string",
            "description" : "Contains the virtual business feature which contains one or more functional conditions. For example, Activity Charges feature abstracts the Activity Charges, Activity Restriction and Fees classes",
            "maxLength" : 30
          },
          "productConditionId" : {
            "type" : "string",
            "description" : "The identifier of the product condition",
            "maxLength" : 30
          },
          "description" : {
            "type" : "string",
            "description" : "Contains the description of purpose of the payment.",
            "maxLength" : 30
          },
          "fullDescription" : {
            "type" : "string",
            "description" : "Contains the detailed description of the condition or rule definition",
            "maxLength" : 30
          }
        }
      }
    },
    "ConditionGenerator" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConditionGeneratorBody"
        }
      },
      "description" : "ConditionGenerator"
    },
    "ConditionGeneratorBody": {
      "properties": {
        "propertyId": {
          "type": "string",
          "description": "Contains the virtual business feature which contains one or more functional conditions. For example, Activity Charges feature abstracts the Activity Charges, Activity Restriction and Fees classes",
          "maxLength": 100
        },
        "conditionName": {
          "type": "string",
          "description": "The identifier of the product condition",
          "maxLength": 100
        },
        "effectiveDate": {
          "type": "string"
        },
        "currencies": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },								 
          "items": {
            "$ref": "#/definitions/ConditioncurrencyObject"
          }
        }
      }
    },
     "ConditioncurrencyObject": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "currencyName": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ConditionFieldsObject"
          }
        }
      }
    },
    "ConditionFieldsObject": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "repeatable": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ConditionFieldArray"
          }
        }
      }
    },
    "ConditionFieldArray": {
      "type": "object",
      "properties": {
        "field": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ConditionFieldObject"
          }
        }
      }
    },
    "ConditionFieldObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "attribute": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/ConditionFieldsObject"
          }
        }
      }
    },
   "ConditionGeneratorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConditionGeneratorResponseBody"
        }
      },
      "description" : "ConditionGeneratorResponse"
    },
    "ConditionGeneratorResponseBody" : {
      "type" : "object",
      "properties" : {
        "propertyConditions" : {
          "type" : "array",
          "description" : "Input is the valid field name for the metrics evaluation of alerts",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyCondition" : {
                "type" : "string",
                "description" : "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
                "minLength" : 0,
                "maxLength" : 18
              },
              "fields" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attribute" : {
                      "type" : "string",
                      "description" : "Retrieves the meta data of the fields associated with the attribute",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Value of the field",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            }
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Contains the description of purpose of the payment.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "longDescription" : {
          "type" : "string",
          "description" : "Contains the detailed description of the condition or rule definition",
          "minLength" : 0,
          "maxLength" : 15
        },
        "propertyId" : {
          "type" : "string",
          "description" : "The identifier of the product condition",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
          "minLength" : 0,
          "maxLength" : 13
        }
      }
    },
    "ConditionGeneratorResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConditionGeneratorResponse1Body"
        }
      },
      "description" : "ConditionGeneratorResponse1"
    },
    "ConditionGeneratorResponse1Body" : {
      "type" : "object",
      "properties" : {
        "propertyConditions" : {
          "type" : "array",
          "description" : "Input is the valid field name for the metrics evaluation of alerts",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyCondition" : {
                "type" : "string",
                "description" : "Indicates the Id of the condition in the format 'Property-ConditionName-Currency-Period'",
                "minLength" : 0,
                "maxLength" : 18
              },
              "fields" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attribute" : {
                      "type" : "string",
                      "description" : "Identifies the details of the conditions or properties used as criterias",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Value of the field",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            }
          }
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "errorType" : {
                "type" : "string",
                "description" : "Indicates the type of error raised during base condition validation",
                "minLength" : 0,
                "maxLength" : 9
              },
              "errorInfo" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "errorSource" : {
                      "type" : "string",
                      "description" : "Indicates the source of error message such as application name and fields",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "errorMessage" : {
                      "type" : "string",
                      "description" : "Contains the description of the error.",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              }
            }
          }
        },
        "description" : {
          "type" : "string",
          "description" : "Contains the description of purpose of the payment.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "longDescription" : {
          "type" : "string",
          "description" : "Contains the detailed description of the condition or rule definition",
          "minLength" : 0,
          "maxLength" : 15
        },
        "propertyId" : {
          "type" : "string",
          "description" : "The identifier of the product condition",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
          "minLength" : 0,
          "maxLength" : 13
        },
        "importStatus" : {
          "type" : "string",
          "description" : "Indicates the status of the base condition created,i.e condition validation completed or errors if any",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "ProductLineFeaturesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductLineFeaturesResponseBody"
        }
      },
      "description" : "ProductLineFeaturesResponse"
    },
    "ProductLineFeaturesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "featureClassTypes" : {
            "type" : "array",
            "description" : "Indicates the what are the supporting characteristicts of property class. For example, CCY - These type of feature classess supports currency(FC.InterestRates), OPT.CCY - These are currency optional feature classess(FC.PeriodicCharges, FC.ActivityCharges), NO.CCY - These are non currency feature classess(FC.PackageProducts,FC.Eligibility)",
            "items" : {
              "type" : "object",
              "properties" : {
                "featureClassType" : {
                  "type" : "string",
                  "description" : "Indicates the what are the supporting characteristicts of property class. For example, CCY - These type of feature classess supports currency(FC.InterestRates), OPT.CCY - These are currency optional feature classess(FC.PeriodicCharges, FC.ActivityCharges), NO.CCY - These are non currency feature classess(FC.PackageProducts,FC.Eligibility)",
                  "maxLength" : 30
                }
              }
            }
          },
          "productLines" : {
            "type" : "array",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "items" : {
              "type" : "object",
              "properties" : {
                "productLine" : {
                  "type" : "string",
                  "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                  "maxLength" : 30
                },
                "mandatory" : {
                  "type" : "string",
                  "description" : "Indicates whether the feature is mandatory or not",
                  "maxLength" : 30
                }
              }
            }
          },
          "featureId" : {
            "type" : "string",
            "description" : "Indicates the virtual business feature id which contains one or more functional conditions. Basically, it is an instance of Feature class. For example,the features of FC.ActivityCharges are  F.ActivityCharges,F.CashBack and features of FC.PeriodicCharges are F.PeriodicCharges,F.PeriodicCashBack,F.PackagePeriodicCharges, F.PackagePeriodicCashBack",
            "maxLength" : 30
          },
          "featureName" : {
            "type" : "string",
            "description" : "Indicates the name/ description of Feature .For example, Activity Charges, Periodic Charges,Cash Back,Interest rates",
            "maxLength" : 35
          },
          "featureClassId" : {
            "type" : "string",
            "description" : "Indicates the virtual business feature class id which contains one or more functional conditions. For example, FC.ActivityCharges, FC.PeriodicCharges,FC.InterestRates.  The feature class FC.ActivityCharges, the end user configures a single set of parameters (i.e. a feature condition) and the definition will deconstruct the parameters into the constituent Fees, Activity Charges and Activity Restriction product conditions.",
            "maxLength" : 30
          },
          "featureClassName" : {
            "type" : "string",
            "description" : "Indicates the name/ description of Feature class. For example, Activity Charges Feature Class, Periodic Charges Feature Class, Interest feature Class",
            "maxLength" : 30
          }
        }
      }
    },
    "ProductCatalogueResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductCatalogueResponseBody"
        }
      },
      "description" : "ProductCatalogueResponse"
    },
    "ProductCatalogueResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "ccySpecific" : {
            "type" : "array",
            "description" : "Defines the charges collected for a transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "currency" : {
                  "type" : "string",
                  "description" : "Identifies the currency. E.g. USD, GBP etc",
                  "maxLength" : 20
                },
                "overdraftAmount" : {
                  "type" : "string",
                  "description" : "Represents the Overdrafted amount to an account.",
                  "maxLength" : 30
                },
                "minimumAmount" : {
                  "type" : "string",
                  "description" : "The minimum account balance required.",
                  "maxLength" : 30
                },
                "maximumAmount" : {
                  "type" : "string",
                  "description" : "The maximum account balance allowed.",
                  "maxLength" : 40
                },
                "amount" : {
                  "type" : "string",
                  "description" : "This is the payment amount",
                  "maxLength" : 40
                },
                "noticePeriod" : {
                  "type" : "string",
                  "description" : "The period for which the funds will be available once notice has been given.",
                  "maxLength" : 10
                },
                "term" : {
                  "type" : "string",
                  "description" : "Indicates the period to which the BID and OFFER rates apply",
                  "maxLength" : 10
                },
                "minimumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the minimum term associated with the loan process.",
                  "maxLength" : 10
                },
                "maximumTerm" : {
                  "type" : "string",
                  "description" : "Refers to the maximum term associated with the loan process.",
                  "maxLength" : 10
                },
                "availableToDate" : {
                  "type" : "string",
                  "description" : "Indicates the expiry date of the catalogued product"
                },
                "reportingId" : {
                  "type" : "string",
                  "description" : "Identifier of the Reporting component. Id component consists of Product/Arrangement Id,Property,Currency(Optional),Effective date"
                },
                "paymentSchedule" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "scheduleId" : {
                        "type" : "string",
                        "description" : "Identifier of the Schedule component. Id component consists of Product/Arrangement Id,Property,Currency,Period,Variation,Effective date"
                      },
                      "paymentTypes" : {
                        "type" : "string",
                        "description" : "Indicates if the payment is Customer (C) type or Bank (B) type"
                      },
                      "paymentMethod" : {
                        "type" : "string",
                        "description" : "Method chosen to make the payment"
                      },
                      "paymentFrequency" : {
                        "type" : "string",
                        "description" : "The frequency at which a payment is required to be generated"
                      },
                      "property" : {
                        "type" : "string",
                        "description" : "Id of the product property"
                      },
                      "startDate" : {
                        "type" : "string",
                        "description" : "Contains the date on which the transaction or payment gets initiated."
                      },
                      "endDate" : {
                        "type" : "string",
                        "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                      }
                    }
                  }
                },
                "interests" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "interestId" : {
                        "type" : "string",
                        "description" : "Identifier of the Interest component. Id component consists of Product/Arrangement Id,Property,Currency,Period,Variation,Effective date"
                      },
                      "interestDayBasis" : {
                        "type" : "string",
                        "description" : "Defines the method of calculation for accrued interest on a Security"
                      },
                      "description" : {
                        "type" : "string",
                        "description" : "Contains the description of purpose of the payment.",
                        "maxLength" : 60
                      },
                      "fixedRate" : {
                        "type" : "string",
                        "description" : "Numeric value for the interest rate entered manually."
                      },
                      "floatingIndex" : {
                        "type" : "string",
                        "description" : "Indicates the type of interest which is tied to a variable base rate"
                      },
                      "periodicIndex" : {
                        "type" : "string",
                        "description" : "Denotes an index which points to the right period of the securities or holdings."
                      },
                      "periodicType" : {
                        "type" : "string",
                        "description" : "Indicates the period used to fetch interest rate from the Periodic Interest definition"
                      },
                      "periodicMethod" : {
                        "type" : "string",
                        "description" : "Indicates the method used to calculate the interest rate for period interest setup"
                      },
                      "periodicReset" : {
                        "type" : "string",
                        "description" : "Indicates the reset period of the periodic index defined"
                      },
                      "marginRate" : {
                        "type" : "string",
                        "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate."
                      },
                      "marginOperand" : {
                        "type" : "string",
                        "description" : "This is the operand which determines if a  margin is added or subtracted from the interest rate.  Options are ADD or SUB."
                      },
                      "tierAmount" : {
                        "type" : "string",
                        "description" : "The monetary amount for the tier."
                      },
                      "interestType" : {
                        "type" : "string",
                        "description" : "Indicates the type of Interest component attached to a Product. Options are Debit/Credit"
                      },
                      "compoundType" : {
                        "type" : "string",
                        "description" : "Contains the frequency type of compound in loan. For example, annually or monthly."
                      },
                      "compoundYieldMethod" : {
                        "type" : "string",
                        "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate"
                      }
                    }
                  }
                },
                "charges" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "chargeId" : {
                        "type" : "string",
                        "description" : "This indicates the charge code which will be triggered for payment stop instruction. Applicable when financial institutions would like to charge for stop payment of cheque etc. "
                      },
                      "chargeType" : {
                        "type" : "string",
                        "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG"
                      },
                      "fixedAmount" : {
                        "type" : "string",
                        "description" : "Indicates the monetary amount that is fixed during the associated account's effective period"
                      },
                      "tierType" : {
                        "type" : "string",
                        "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level"
                      },
                      "calcType" : {
                        "type" : "string",
                        "description" : "Denotes the type of calculation selected for the Interest/Charge component"
                      },
                      "chargeRate" : {
                        "type" : "string",
                        "description" : "Indicates the rate applied to the Charge component"
                      },
                      "chargeAmount" : {
                        "type" : "string",
                        "description" : "Retrieves the Charge Amount after redeem"
                      },
                      "tierMinCharge" : {
                        "type" : "string",
                        "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types"
                      },
                      "tierMaxCharge" : {
                        "type" : "string",
                        "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types"
                      },
                      "chargeTierAmount" : {
                        "type" : "string",
                        "description" : "Indicates the monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types"
                      },
                      "feeType" : {
                        "type" : "string",
                        "description" : "Indicates the type of fee which is applied for payment instruction"
                      },
                      "chargeCurrency" : {
                        "type" : "string",
                        "description" : "Indicates the currency code of the charge account from where the fee is deducted"
                      }
                    }
                  }
                },
                "aprTypes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "aprType" : {
                        "type" : "string",
                        "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest"
                      },
                      "excludeProperty" : {
                        "type" : "string",
                        "description" : "Indicates the list of properties excluded for Annual Percentage Rate calculation"
                      }
                    }
                  }
                }
              }
            }
          },
          "facilities" : {
            "type" : "array",
            "description" : "Available Facilities",
            "items" : {
              "type" : "object",
              "properties" : {
                "service" : {
                  "type" : "string",
                  "description" : "Unique id of the service"
                },
                "serviceAvailability" : {
                  "type" : "string",
                  "description" : "It will indicate whether the corresponding service is available for arrangement account"
                },
                "defaultOption" : {
                  "type" : "string",
                  "description" : "Indicates whether the option will be selected by default if no instruction is provided by the account owner"
                },
                "customerOptions" : {
                  "type" : "string",
                  "description" : "It will indicate whether user has opted the service or not."
                },
                "serviceAvailabiltyOptions" : {
                  "type" : "string",
                  "description" : "Indicates the service availability options"
                }
              }
            }
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "productGroupId" : {
            "type" : "string",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "maxLength" : 20
          },
          "productLine" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 5
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product",
            "maxLength" : 60
          },
          "productLineDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of product line",
            "maxLength" : 10
          },
          "productGroupDisplayName" : {
            "type" : "string",
            "description" : "Indicates the display name of product group",
            "maxLength" : 10
          },
          "productCoCode" : {
            "type" : "string",
            "description" : "Indicates the company code of product"
          },
          "availableFromDate" : {
            "type" : "string",
            "description" : "The date the product is available in the catalogue for sale to customers"
          },
          "printOption" : {
            "type" : "string",
            "description" : "Flag to indicate whether Printing option is applicable to an account"
          },
          "printingAttributePosition" : {
            "type" : "string",
            "description" : "Indicates the printing attribute position"
          }
        }
      }
    },
    "ProductManager" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductManagerBody"
        }
      },
      "description" : "ProductManager"
    },
    "ProductManagerBody" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options."
        },
        "availableDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date after which the contract or amount is available for use."
        },
        "processMethod" : {
          "type" : "string",
          "description" : "Suggesting the processing method actions Proof/Publish"
        }
      }
    },
    "ProductManagerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProductManagerResponseBody"
        }
      },
      "description" : "ProductManagerResponse"
    },
    "ProductManagerResponseBody" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "action" : {
          "type" : "string",
          "description" : "Refers to view or cancel options."
        },
        "availableDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date after which the contract or amount is available for use."
        },
        "processMethod" : {
          "type" : "string",
          "description" : "Suggesting the processing method actions Proof/Publish"
        }
      }
    },
	"AllInterestConditionReferenceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AllInterestConditionReferenceResponseBody"
        }
      },
      "description" : "AllInterestConditionReferenceResponse"
    },
    "AllInterestConditionReferenceResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interestConditionId" : {
            "type" : "string",
            "description" : "The identifier of the product condition used to define the interest rate",
            "maxLength" : 80
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          }
        }
      }
	}
  }
}