{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create and Manage various types of loans such as Personal, Commercial, Mortgage, Line of Credit, etc",
    "version" : "v3.0.0",
    "title" : "Loan creation"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v3.0.0/",
  "tags" : [ {
    "name" : "RETAIL"
  } ],
  "schemes" : [ "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/holdings/loans/personalLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Personal Loan Account",
        "description" : "Create a Personal Loan Account",
        "operationId" : "createPersonalLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createPersonalLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/PersonalLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/linkedRateLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Personal Loan account with Linked rate",
        "description" : "Create a Personal Loan account with Linked rate",
        "operationId" : "createLinkedRateLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LinkedRateLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLinkedRateLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/LinkedRateLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/commercialLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Commercial or Business Account",
        "description" : "Create a Commercial or Business Account",
        "operationId" : "createCommercialLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CommercialLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCommercialLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/CommercialLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/mortgages" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Mortgage Loan",
        "description" : "Create a Mortgage Loan",
        "operationId" : "createMortgage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Mortgage"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createMortgageResponse",
            "schema" : {
              "$ref" : "#/definitions/MortgageResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/creditLines" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Lines of Credit Account",
        "description" : "Create a Lines of Credit Account",
        "operationId" : "createCreditLine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreditLine"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCreditLineResponse",
            "schema" : {
              "$ref" : "#/definitions/CreditLineResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/facilities/createInstallmentLoan" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a Installment Loan for the given product",
        "description" : "Create a Installment Loan for the given product",
        "operationId" : "createInstallmentLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstallmentLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createInstallmentLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/InstallmentLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/fundsTransfer" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a account transfer between AA Accounts",
        "description" : "Create a account transfer between AA Accounts",
        "operationId" : "createFundsTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FundsTransfer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "FundsTransferResponse",
            "schema" : {
              "$ref" : "#/definitions/FundsTransferResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/consumerLoans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the creation of consumer loan for the given product",
        "description" : "creates a consumer loan for the given product",
        "operationId" : "createConsumerLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createConsumerLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/disbursements" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the disbursement of the given consumer loan contracts commitment amount",
        "description" : "Disburses the consumer loan commitment amount",
        "operationId" : "createConsumerLoanDisbursement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanDisbursement"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createConsumerLoanDisbursementResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanDisbursementResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/commitmentIncreases" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Increases the commitment amount of the given consumer loan contract",
        "description" : "Increases the commitment amount of the consumer loan",
        "operationId" : "updateConsumerLoanTopupAmount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanTopupAmount"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoanTopupAmountResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanTopupAmountResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/commitmentDecreases" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Decreases the commitment amount of the given consumer loan contract",
        "description" : "Decreases the commitment amount of the consumer loan",
        "operationId" : "updateConsumerLoanDecreaseAmount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanDecreaseAmount"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoanDecreaseAmountResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanDecreaseAmountResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/repayments" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the repayment of the given consumer loan amount",
        "description" : "Repays the consumer loan amount",
        "operationId" : "createConsumerLoanRepayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanRepayment"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createConsumerLoanRepaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanRepaymentResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/principalDecreases" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the advance repayment of the given consumer loan amount",
        "description" : "Prepays the consumer loan amount ",
        "operationId" : "createConsumerLoanPrepayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanRepayment"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createConsumerLoanPrepaymentResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanRepaymentResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/schedules" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the change of payment schedule for the given consumer loan contract",
        "description" : "Change payment schedule of the consumer loan",
        "operationId" : "updateConsumerLoanSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanSchedule"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoanScheduleResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanScheduleResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/paymentHolidays" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the update of payment holiday for the given consumer loan contract ",
        "description" : "Update payment holiday for the consumer loan ",
        "operationId" : "updateConsumerLoanHoliday",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanHoliday"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoanHolidayResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanHolidayResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/outstandingBills" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the Outstanding amount to be paid for the given loan",
        "description" : "Retrieves the Outstanding amount to be paid for an loan",
        "operationId" : "getLoanOutstandingBills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileVersion",
          "in" : "query",
          "description" : "Indicates if the file is of type simulation or live",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "simulationReference",
          "in" : "query",
          "description" : "Indicates the Reference ID for simulation activity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentDate",
          "in" : "query",
          "description" : "The date on which a payment is due",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deferDate",
          "in" : "query",
          "description" : "Date that the payment has been deferred to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billedAmount",
          "in" : "query",
          "description" : "Indicates the bill amount",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "outstandingAmount",
          "in" : "query",
          "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "delinquentAmount",
          "in" : "query",
          "description" : "Indicates the bill amount during the ageing status(Bill which crossed the due date)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Id of the product property",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billStatus",
          "in" : "query",
          "description" : "Indicates the status of a bill(Issued,Due,Ageing,Settled)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementStatus",
          "in" : "query",
          "description" : "Defines the status of the settlement for the incoming MT548 swift message.The values allowed are: Waiting : pending to receive settlement status update meaning pending to receive MT548 swift message,  Action required : awaiting action to be performed to get the final update on settlement status.Matched : transactions whose nominals have matched with the depository position",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agingStatus",
          "in" : "query",
          "description" : "Indicates the ageing status of a bill",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settled",
          "in" : "query",
          "description" : "Flag to indicate whether a bill is settled or not",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentType",
          "in" : "query",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billDate",
          "in" : "query",
          "description" : "Indicates a date on which a bill has been raised",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentMethod",
          "in" : "query",
          "description" : "Method chosen to make the payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "infoPayType",
          "in" : "query",
          "description" : "Indicates a bill which is raised when a loan is paid off",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "advancePayment",
          "in" : "query",
          "description" : "Indicates whether advance payment made is set on an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentIndicator",
          "in" : "query",
          "description" : "Indicates whether its a credit/debit type of bill",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanOutstandingBillsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanOutstandingBillsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/payoffCalculations" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the Payoff Details of the given loan",
        "description" : "Retrieves the Payoff Details of an loan",
        "operationId" : "getLoanPayoffDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanPayoffDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanPayoffDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/customers" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the change of customers for the given consumer loan contract",
        "description" : "Changes the customers of the consumer loan ",
        "operationId" : "updateConsumerLoansCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoansCustomer"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoansCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoansCustomerResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/payoffs" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the payoff of the given consumer loan contract amount",
        "description" : "Payoffs the consumer loan amount",
        "operationId" : "createPayoffConsumerLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayoffConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createPayoffConsumerLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/PayoffConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/renegotiations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates the renegotiation of the given consumer loan contract details",
        "description" : "Renegotiates the consumer loan contract details",
        "operationId" : "updateConsumerLoanConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoanConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateConsumerLoanConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/status" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the status of the given Loan",
        "description" : "Retrieves the status of a Loan",
        "operationId" : "getArrangementDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ArrangementDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/arrangements/activities/{arrangementActivityId}/status" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the status of the given activity ",
        "description" : "Retrieves the status of the given activity ",
        "operationId" : "getExternalEventStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementActivityId",
          "in" : "path",
          "description" : "The unique identifier of an arrangement activity",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ExternalEventStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/ExternalEventStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/consumerLoans/{consumerLoanId}/payoffCalculations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Initiates Calculate Payoff activity to calculate consumer loan payment amount to close the given loan",
        "description" : "Calculates consumer loan payment amount to close an loan",
        "operationId" : "calculatePayoffConsumerLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PayoffConsumerLoans"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "calculatePayoffConsumerLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/PayoffConsumerLoansResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "consumerLoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/schedules" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the schedule payment information for paid and upcoming installment details",
        "description" : "Retrieves payment schedules details",
        "operationId" : "getPaymentSchedulesProjection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSchedulesProjectionResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSchedulesProjectionResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/loanDetails" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the details of the given loan ",
        "description" : "Retrieves loan details",
        "operationId" : "getLoanOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanOverviewResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanOverviewResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/bills" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the simulation details of the contract based on the selection criteria. It returns the bill details of the loan",
        "description" : "Retrieves loan bills details",
        "operationId" : "getLoanBills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "billType",
          "in" : "query",
          "description" : "The type of payment obligation generated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentDate",
          "in" : "query",
          "description" : "The date on which a payment is due",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanBillsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanBillsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/collaterals" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the collateral details linked to the loan arrangement. The collateral right and status have to be passed within the api",
        "description" : "Retrieves loan collateral details",
        "operationId" : "getLoanCollaterals",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusNE",
          "in" : "query",
          "description" : "Status not equal to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanCollateralsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanCollateralsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the loan account details",
        "description" : "Retrieves loan details",
        "operationId" : "getLoanDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "balanceTypes",
          "in" : "query",
          "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/schedulePaymentFrequencies" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the schedule payment information for paid and upcoming installments details",
        "description" : "Retrieves payment schedules details",
        "operationId" : "getPaymentSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSchedulesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/simulationCapture/{arrangementId}" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate payoff calculate activity for a loan arrangement",
        "description" : "Simulate payoff calculate activity for a loan arrangement",
        "operationId" : "createSimulationCapture",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SimulationCapture"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSimulationCaptureResponse",
            "schema" : {
              "$ref" : "#/definitions/SimulationCaptureResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "arrangementId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "PersonalLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PersonalLoanBody"
        }
      },
      "description" : "PersonalLoan"
    },
    "PersonalLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 45
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 45
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Standard date field which records trade date of the account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 6
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 9,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 16,
                "enum" : [ "YES", "NO" ]
              }
            }
          }
        }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "PersonalLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PersonalLoanResponseBody"
        }
      },
      "description" : "PersonalLoanResponse"
    },
    "PersonalLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 45
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 45
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Standard date field which records trade date of the account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prCurrentBalances" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prAdvanceRepay" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "originationAttribs" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "LinkedRateLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LinkedRateLoanBody"
        }
      },
      "description" : "LinkedRateLoan"
    },
    "LinkedRateLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 45
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 45
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Standard date field which records trade date of the account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "interest" : {
                "type" : "array",
                "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixed" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "spread" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "minMaxRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "maxRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 7
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "upTo" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "negativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "orPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "margins" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "margin" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "marginOperation" : {
                            "type" : "string",
                            "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attributes" : {
                "type" : "array",
                "description" : "Identifies the details of the conditions or properties used as criterias",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attributes" : {
                      "type" : "string",
                      "description" : "Identifies the details of the conditions or properties used as criterias",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "The value of the field on which the Alert criteria is based",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "attribute" : {
                      "type" : "string",
                      "description" : "Identifies the details of the conditions or properties used as criterias",
                      "minLength" : 0,
                      "maxLength" : 9
                    }
                  }
                }
              },
              "periodicInterest" : {
                "type" : "array",
                "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "negativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "margins" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "marginOperation" : {
                            "type" : "string",
                            "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    }
                  }
                }
              },
              "activites" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 23
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              },
              "tiers" : {
                "type" : "string",
                "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                "minLength" : 0,
                "maxLength" : 5
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 25
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 23
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 25
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 25
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 23
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 25
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 23
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 25
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 6
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 9,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 16,
                "enum" : [ "YES", "NO" ]
              }
            }
          }
        }
      }
    },
    "LinkedRateLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LinkedRateLoanResponseBody"
        }
      },
      "description" : "LinkedRateLoanResponse"
    },
    "LinkedRateLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 45
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 45
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Standard date field which records trade date of the account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
	    
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "spread" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "maxRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "upTo" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "orPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 6
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "description" : "Identifies the details of the conditions or properties used as criterias",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "description" : "Identifies the details of the conditions or properties used as criterias",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The account which is linked for calculating interest that should be applied to this account",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "attribute" : {
                            "type" : "string",
                            "description" : "Identifies the details of the conditions or properties used as criterias",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "periodicInterest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activites" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 23
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 18
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prCurrentBalances" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prAdvanceRepay" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "originationAttribs" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CommercialLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CommercialLoanBody"
        }
      },
      "description" : "CommercialLoan"
    },
    "CommercialLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 45
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 45
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Standard date field which records trade date of the account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 6
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 9,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 16,
                "enum" : [ "YES", "NO" ]
              }
            }
          }
        }
      }
    },
    "CommercialLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CommercialLoanResponseBody"
        }
      },
      "description" : "CommercialLoanResponse"
    },
    "CommercialLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 45
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 45
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Standard date field which records trade date of the account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prCurrentBalances" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Mortgage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MortgageBody"
        }
      },
      "description" : "Mortgage",
      "example": {
	      "body": {
		      "partyIds": [
			    {
				  "partyId": "100400"
			    }
		      ],
		      "currency": "USD",
		      "productId": "MORTGAGE",
		      "commitment": [
			    {
			    	"amount": "25000",
				    "term": "1Y"
			    }
		    ]
	    }
    }
    },
    "MortgageBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 45
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 45
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Standard date field which records trade date of the account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 6
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 9,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 16,
                "enum" : [ "YES", "NO" ]
              }
            }
          }
        }
      }
    },
    "MortgageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MortgageResponseBody"
        }
      },
      "description" : "MortgageResponse"
    },
    "MortgageResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 45
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 45
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Standard date field which records trade date of the account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prCurrentBalances" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prAdvanceRepay" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "originationAttribs" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CreditLine" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CreditLineBody"
        }
      },
      "description" : "CreditLine"
    },
    "CreditLineBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 45
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 45
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Standard date field which records trade date of the account",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "limit" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitReference" : {
                "type" : "string",
                "description" : "Identifies the credit limit reference for the underlying account.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 6
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 9,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 16,
                "enum" : [ "YES", "NO" ]
              }
            }
          }
        }
      }
    },
    "CreditLineResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CreditLineResponseBody"
        }
      },
      "description" : "CreditLineResponse"
    },
    "CreditLineResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 45
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 45
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Standard date field which records trade date of the account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancyfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "latefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "limitReference" : {
                      "type" : "string",
                      "description" : "Identifies the credit limit reference for the underlying account.",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poWithdrawal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 9,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 16,
                      "enum" : [ "YES", "NO" ]
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "InstallmentLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstallmentLoanBody"
        }
      },
      "description" : "InstallmentLoan"
    },
    "InstallmentLoanBody" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
		"maxLength" : 8
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
		"maxLength" : 12
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "maxLength" : 12
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 8
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
          "minLength" : 0,
	  "maxLength" : 13
        },
        "activity" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
	  "maxLength" : 8
        },

        "product" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
	  "maxLength" : 7
        },

        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 9
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 11
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "The percentage of holdings redeemed/subscribed",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments a year",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 17
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 17
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 17
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Id of the product property",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 24
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 11
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                "minLength" : 0,
                "maxLength" : 26
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number",
                "description" : "This is the payment amount",
                "minimum" : 0,
                "maximum" : 6
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 4
              }
            }
          }
        }
      }
    },
    "InstallmentLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstallmentLoanResponseBody"
        }
      },
      "description" : "InstallmentLoanResponse"
    },
    "InstallmentLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
		    "maxLength" : 8
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
		    "maxLength" : 12
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
	      "maxLength" : 12
            },
	    "currency" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
	      "maxLength" : 8
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "maxLength" : 10
            },
	    "effectiveDate" : {
              "type" : "string",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
              "minLength" : 0,
	      "maxLength" : 13
            },
            "activity" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
	      "maxLength" : 8
            },           
            "product" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
	      "maxLength" : 7
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "cashback" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prRepayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPrincipalDecrease" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prPayoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "payMerchant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poCashback" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                      "minLength" : 0,
                      "maxLength" : 26
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "number",
                      "description" : "This is the payment amount",
                      "minimum" : 0,
                      "maximum" : 6
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 4
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "FundsTransfer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FundsTransferBody"
        }
      },
      "description" : "FundsTransfer"
    },
    "FundsTransferBody" : {
      "type" : "object",
      "required" : [ "creditAccountId", "debitAccountId", "debitAmount", "debitCurrency", "transactionType" ],
      "properties" : {
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitAmount" : {
          "type" : "number",
          "description" : "Amount to be debited in a payment transaction",
          "minimum" : 1,
          "maximum" : 45
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 1,
          "maxLength" : 45
        },
        "creditCurrencyId" : {
          "type" : "string",
          "description" : "Specifies the credit currency. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditAmount" : {
          "type" : "number",
          "description" : "Amount to be credited in a payment transaction",
          "minimum" : 0,
          "maximum" : 45
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "commissionCode" : {
          "type" : "string",
          "description" : "These field control the allocation of Periodic commission where the field COMM.CODE is the trigger for periodic commission and the field CSN.CODE is a system maintained field and hold the commission amount relating to the period band",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commissionType" : {
          "type" : "string",
          "description" : "Identifies the Commission Types which are applicable to the transaction",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commissionAmount" : {
          "type" : "number",
          "description" : "Amount of commission charged for the payment created with respect to the commission type used.",
          "minimum" : 0,
          "maximum" : 45
        },
        "paymentDetails" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 45
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "FundsTransferResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FundsTransferResponseBody"
        }
      },
      "description" : "FundsTransferResponse"
    },
    "FundsTransferResponseBody" : {
      "type" : "object",
      "properties" : {
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 1,
          "maxLength" : 45
        },
        "debitAmount" : {
          "type" : "number",
          "description" : "Amount to be debited in a payment transaction",
          "minimum" : 1,
          "maximum" : 45
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 1,
          "maxLength" : 45
        },
        "creditCurrencyId" : {
          "type" : "string",
          "description" : "Specifies the credit currency. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "creditAmount" : {
          "type" : "number",
          "description" : "Amount to be credited in a payment transaction",
          "minimum" : 0,
          "maximum" : 45
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "commissionCode" : {
          "type" : "string",
          "description" : "These field control the allocation of Periodic commission where the field COMM.CODE is the trigger for periodic commission and the field CSN.CODE is a system maintained field and hold the commission amount relating to the period band",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commissionType" : {
          "type" : "string",
          "description" : "Identifies the Commission Types which are applicable to the transaction",
          "minLength" : 0,
          "maxLength" : 45
        },
        "commissionAmount" : {
          "type" : "number",
          "description" : "Amount of commission charged for the payment created with respect to the commission type used.",
          "minimum" : 0,
          "maximum" : 45
        },
        "paymentDetails" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 45
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "ConsumerLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanBody"
        }
      },
      "description" : "ConsumerLoan"
    },
    "ConsumerLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 45
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 45
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 26
                    },
                    "glAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 23
                    }
                  }
                }
              },
              "includeInCRAOfCustomers" : {
                "type" : "array",
                "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "includeInCRAOfCustomer" : {
                      "type" : "string",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "officers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "primaryOfficer" : {
                "type" : "string",
                "description" : "Specify the primary officer responsible for the arrangement",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payInRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "payInSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payOutRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "payOutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 24
                    },
                    "propertyClass" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                "minLength" : 0,
                "maxLength" : 24
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 18
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        }
      }
    },
    "ConsumerLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanResponseBody"
        }
      },
      "description" : "ConsumerLoanResponse"
    },
    "ConsumerLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 45
                  },
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 45
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 45
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Specifies the charges which has incurred with processing of the cheque",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "charges" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "appplicationPeriod" : {
                                  "type" : "string",
                                  "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "applicationMethod" : {
                                  "type" : "string",
                                  "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                                  "minLength" : 0,
                                  "maxLength" : 17,
                                  "enum" : [ "DUE", "CAPITALISE", "DEFER" ]
                                },
                                "chargeAutoSettle" : {
                                  "type" : "string",
                                  "description" : "This field aids turning off the automatic settlement for the corresponding charge. If set to yes settlement processing for the associated chage will be done based on the settlement configuration for the charge",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "A rule is assigned to a product and the rule determines whether a customer can buy that product or hold it after changes in circumstance.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "alHoliday" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "activities" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "activityClassId" : {
                                  "type" : "string",
                                  "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "activityId" : {
                                  "type" : "string",
                                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activityClass" : {
                      "type" : "string",
                      "description" : "The identifier of the activity class",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "activity" : {
                      "type" : "string",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "restriction" : {
                      "type" : "string",
                      "description" : "The user can flag this field to indicate that the activity is to be restricted and can further specify whether the transaction is completely blocked or allowed with a warning. If yes then restriction type has to be specified as error or warning",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "ruleId" : {
                      "type" : "string",
                      "description" : "Used to provide the rule for non-financial transaction, for identified related signatory groups and Minimum number of signatories",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "restrictType" : {
                      "type" : "string",
                      "description" : "The type of restriction that need to be applied on the activity. Allowed values are ERROR, OVERRIDE. If it is set to ERROR then the transaction triggering this activity would be completely blocked. If it is set to OVERRIDE then the transaction triggering this activity would be allowed after displaying a warning",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "override" : {
                      "type" : "string",
                      "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "errorCode" : {
                      "type" : "string",
                      "description" : "Specifies the error code expected in the system which indicates the resrtiction reason for blocking the  transaction completely",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "property" : {
                      "type" : "string",
                      "description" : "Id of the product property",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "appplicationPeriod" : {
                      "type" : "string",
                      "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "applicationMethod" : {
                      "type" : "string",
                      "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "propertyId" : {
                      "type" : "string",
                      "description" : "The identifier of the product condition",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "runTheRule" : {
                      "type" : "string",
                      "description" : "Specify the rule which has to be used for evaluation",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "evaluation" : {
                      "type" : "string",
                      "description" : "This attribute defines the decision that need to be taken when a rule is passed or failed. Options available for this attribute is BREAK and SATISFY. BREAK - A defined rule has failed. SATISFY - A defined rule has passed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "result" : {
                      "type" : "string",
                      "description" : "Status to determine requirements of the agents for scaling of services",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "alternateProperty" : {
                      "type" : "string",
                      "description" : "A property defined here will act as an alternate property if the original property is defined to be waived in evaluation result",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "alOverpayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "activities" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "activityClassId" : {
                                  "type" : "string",
                                  "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "activityId" : {
                                  "type" : "string",
                                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activityClass" : {
                      "type" : "string",
                      "description" : "The identifier of the activity class",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "activity" : {
                      "type" : "string",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "restriction" : {
                      "type" : "string",
                      "description" : "The user can flag this field to indicate that the activity is to be restricted and can further specify whether the transaction is completely blocked or allowed with a warning. If yes then restriction type has to be specified as error or warning",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "ruleId" : {
                      "type" : "string",
                      "description" : "Used to provide the rule for non-financial transaction, for identified related signatory groups and Minimum number of signatories",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "restrictType" : {
                      "type" : "string",
                      "description" : "The type of restriction that need to be applied on the activity. Allowed values are ERROR, OVERRIDE. If it is set to ERROR then the transaction triggering this activity would be completely blocked. If it is set to OVERRIDE then the transaction triggering this activity would be allowed after displaying a warning",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "override" : {
                      "type" : "string",
                      "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "errorCode" : {
                      "type" : "string",
                      "description" : "Specifies the error code expected in the system which indicates the resrtiction reason for blocking the  transaction completely",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "property" : {
                      "type" : "string",
                      "description" : "Id of the product property",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "appplicationPeriod" : {
                      "type" : "string",
                      "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "applicationMethod" : {
                      "type" : "string",
                      "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "propertyId" : {
                      "type" : "string",
                      "description" : "The identifier of the product condition",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "runTheRule" : {
                      "type" : "string",
                      "description" : "Specify the rule which has to be used for evaluation",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "evaluation" : {
                      "type" : "string",
                      "description" : "This attribute defines the decision that need to be taken when a rule is passed or failed. Options available for this attribute is BREAK and SATISFY. BREAK - A defined rule has failed. SATISFY - A defined rule has passed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "result" : {
                      "type" : "string",
                      "description" : "Status to determine requirements of the agents for scaling of services",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "alternateProperty" : {
                      "type" : "string",
                      "description" : "A property defined here will act as an alternate property if the original property is defined to be waived in evaluation result",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "uncfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 26
                          },
                          "glAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 23
                          }
                        }
                      }
                    },
                    "includeInCRAOfCustomers" : {
                      "type" : "array",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "includeInCRAOfCustomer" : {
                            "type" : "string",
                            "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 14
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "marginTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "marginTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "officrers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "otherOfficerId" : {
                            "type" : "string",
                            "description" : "Other officers managing the Customer",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "role" : {
                            "type" : "string",
                            "description" : "Indicates the Role of the Customer",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "primaryOfficer" : {
                      "type" : "string",
                      "description" : "Specify the primary officer responsible for the arrangement",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "calculatedPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount.",
                                  "minLength" : 0,
                                  "maxLength" : 23
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "progPercentage" : {
                      "type" : "string",
                      "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "baseDay" : {
                      "type" : "string",
                      "description" : "Indicates the base day which will be used to cycle the Payment date",
                      "minLength" : 0,
                      "maxLength" : 7
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "issueBill" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "deferPeriod" : {
                      "type" : "string",
                      "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "holidayRestrictItem" : {
                      "type" : "string",
                      "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "periodicAttribute" : {
                      "type" : "string",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "repaymentHolidayLimit" : {
                      "type" : "string",
                      "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "minimumPaymentProperty" : {
                      "type" : "string",
                      "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedAmount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Defines the expiry date for the payoff bill. The number of days defined would be taken as working days and expiry date for the payoff bill would be calculated as payoff date plus the number of working days defined in this field. When the expiry date is reached the payoff bill would be deleted",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "The percentage of holdings redeemed/subscribed",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 6
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payInRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payOutRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payOutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          },
                          "propertyClass" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "updatePendingRetry" : {
                      "type" : "string",
                      "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills",
                      "minLength" : 0,
                      "maxLength" : 18
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tranche" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "trancheStartDate" : {
                            "type" : "string",
                            "description" : "Start date after which the tracheAmount can be withdrawn from the loan as per the withdrawal agreement.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "trancheEndDate" : {
                            "type" : "string",
                            "description" : "End date by when the tracheAmount can be withdrawn from the loan as per the withdrawal agreement made",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "trancheAmount" : {
                            "type" : "string",
                            "description" : "Amount agreed for withdrawal from the loan on within the trancheStateDates and trancheEndDates",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    },
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "coolingPeriod" : {
                      "type" : "string",
                      "description" : "Indicates the number of days to be considered for closure of account after renewal or rollover date",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "cancellationPeriod" : {
                      "type" : "string",
                      "description" : "Indicates the Period beyond which a contract is cancelled if it not fully funded in case of deposit or fully disbursed in case of the loan",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "onMaturity" : {
                      "type" : "string",
                      "description" : "If set to due residual amount will be due on the payment end date",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "hasTranches" : {
                      "type" : "string",
                      "description" : "Indicates if the loan is disbursed through a withdrawal agreement where the agreed loan amount is available for withdrawal upon the agreed schedule or based on user request.",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConsumerLoanDisbursement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanDisbursementBody"
        }
      },
      "description" : "ConsumerLoanDisbursement"
    },
    "ConsumerLoanDisbursementBody" : {
      "type" : "object",
      "properties" : {
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 17
        },
        "contractId" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "minLength" : 0,
          "maxLength" : 21
        },
        "systemId" : {
          "type" : "string",
          "description" : "System ID of the originating transaction",
          "minLength" : 0,
          "maxLength" : 19
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "ConsumerLoanDisbursementResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanDisbursementResponseBody"
        }
      },
      "description" : "ConsumerLoanDisbursementResponse"
    },
    "ConsumerLoanDisbursementResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 10
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 17
            },
            "contractId" : {
              "type" : "string",
              "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
              "minLength" : 0,
              "maxLength" : 21
            },
            "systemId" : {
              "type" : "string",
              "description" : "System ID of the originating transaction",
              "minLength" : 0,
              "maxLength" : 19
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "ConsumerLoanTopupAmount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanTopupAmountBody"
        }
      },
      "description" : "ConsumerLoanTopupAmount"
    },
    "ConsumerLoanTopupAmountBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payInRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "payInSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payOutRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "payOutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 24
                    },
                    "propertyClass" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                "minLength" : 0,
                "maxLength" : 24
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 15
              }
            }
          }
        }
      }
    },
    "ConsumerLoanTopupAmountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanTopupAmountResponseBody"
        }
      },
      "description" : "ConsumerLoanTopupAmountResponse"
    },
    "ConsumerLoanTopupAmountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "calculatedPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount.",
                                  "minLength" : 0,
                                  "maxLength" : 23
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "progPercentage" : {
                      "type" : "string",
                      "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "baseDay" : {
                      "type" : "string",
                      "description" : "Indicates the base day which will be used to cycle the Payment date",
                      "minLength" : 0,
                      "maxLength" : 7
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "issueBill" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "deferPeriod" : {
                      "type" : "string",
                      "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "holidayRestrictItem" : {
                      "type" : "string",
                      "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "periodicAttribute" : {
                      "type" : "string",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "repaymentHolidayLimit" : {
                      "type" : "string",
                      "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "minimumPaymentProperty" : {
                      "type" : "string",
                      "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payInRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payOutRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payOutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          },
                          "propertyClass" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "updatePendingRetry" : {
                      "type" : "string",
                      "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills",
                      "minLength" : 0,
                      "maxLength" : 18
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConsumerLoanDecreaseAmount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanDecreaseAmountBody"
        }
      },
      "description" : "ConsumerLoanDecreaseAmount"
    },
    "ConsumerLoanDecreaseAmountBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 15
              }
            }
          }
        }
      }
    },
    "ConsumerLoanDecreaseAmountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanDecreaseAmountResponseBody"
        }
      },
      "description" : "ConsumerLoanDecreaseAmountResponse"
    },
    "ConsumerLoanDecreaseAmountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "calculatedPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount.",
                                  "minLength" : 0,
                                  "maxLength" : 23
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "baseDay" : {
                                  "type" : "string",
                                  "description" : "Indicates the base day which will be used to cycle the Payment date",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "periodicAttributes" : {
                      "type" : "array",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "repaymentHolidayLimit" : {
                            "type" : "string",
                            "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                            "minLength" : 0,
                            "maxLength" : 21
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "properties" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 22
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "progPercentage" : {
                      "type" : "string",
                      "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "issueBill" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "deferPeriod" : {
                      "type" : "string",
                      "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConsumerLoanRepayment" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanRepaymentBody"
        }
      },
      "description" : "ConsumerLoanRepayment"
    },
    "ConsumerLoanRepaymentBody" : {
      "type" : "object",
      "properties" : {
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 17
        },
        "contractId" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "minLength" : 0,
          "maxLength" : 21
        },
        "systemId" : {
          "type" : "string",
          "description" : "System ID of the originating transaction",
          "minLength" : 0,
          "maxLength" : 19
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "ConsumerLoanRepaymentResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanRepaymentResponseBody"
        }
      },
      "description" : "ConsumerLoanRepaymentResponse"
    },
    "ConsumerLoanRepaymentResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 10
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 17
            },
            "contractId" : {
              "type" : "string",
              "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
              "minLength" : 0,
              "maxLength" : 21
            },
            "systemId" : {
              "type" : "string",
              "description" : "System ID of the originating transaction",
              "minLength" : 0,
              "maxLength" : 19
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "ConsumerLoanSchedule" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanScheduleBody"
        }
      },
      "description" : "ConsumerLoanSchedule"
    },
    "ConsumerLoanScheduleBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payInRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "payInSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payOutRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "payOutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 24
                    },
                    "propertyClass" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                "minLength" : 0,
                "maxLength" : 24
              }
            }
          }
        }
      }
    },
    "ConsumerLoanScheduleResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanScheduleResponseBody"
        }
      },
      "description" : "ConsumerLoanScheduleResponse"
    },
    "ConsumerLoanScheduleResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "calculatedPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount.",
                                  "minLength" : 0,
                                  "maxLength" : 23
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "baseDay" : {
                                  "type" : "string",
                                  "description" : "Indicates the base day which will be used to cycle the Payment date",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "periodicAttributes" : {
                      "type" : "array",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "repaymentHolidayLimit" : {
                            "type" : "string",
                            "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                            "minLength" : 0,
                            "maxLength" : 21
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "properties" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 22
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "progPercentage" : {
                      "type" : "string",
                      "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "issueBill" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "deferPeriod" : {
                      "type" : "string",
                      "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payInRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payOutRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payOutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          },
                          "propertyClass" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "updatePendingRetry" : {
                      "type" : "string",
                      "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills",
                      "minLength" : 0,
                      "maxLength" : 18
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConsumerLoanHoliday" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanHolidayBody"
        }
      },
      "description" : "ConsumerLoanHoliday"
    },
    "ConsumerLoanHolidayBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "paymentHoliday" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payments" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "holidayPayAmount" : {
                      "type" : "string",
                      "description" : "New payment amount that is applicable for the corresponding holiday date",
                      "minLength" : 0,
                      "maxLength" : 16
                    }
                  }
                }
              },
              "paymentDate" : {
                "type" : "string",
                "description" : "The date on which a payment is due",
                "minLength" : 0,
                "maxLength" : 20
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 20
              },
              "billType" : {
                "type" : "string",
                "description" : "The type of payment obligation generated",
                "minLength" : 0,
                "maxLength" : 25
              },
              "newPaymentAmount" : {
                "type" : "string",
                "description" : "Indicates the new schedule amount which will be processed during the payment holiday period",
                "minLength" : 0,
                "maxLength" : 20
              },
              "numberOfInstallments" : {
                "type" : "string",
                "description" : "Indicates the number of payments in sequence for which the payment holiday applies",
                "minLength" : 0,
                "maxLength" : 25
              },
              "recalculationMethod" : {
                "type" : "string",
                "description" : "This indicates which payment parameter to change when changes occur to payment schedule or when any specific activity is triggered.The recalculation types are: Payment – the payment amount will be changed. Progressive Payment – the payment amount will be incremented/decremented from the calculated amount based on the percentage mentioned in progressive percentage. Term – the term of the arrangement will be altered.Residual – the residual amount will be changed.Nothing – the payments, term, and residual will be unchanged, in this case a recalculation frequency should be specified. Maturity then Payment – Calculation of Term happens first and then if the term exceeds the actual term, recalculation of payment amount is done",
                "minLength" : 0,
                "maxLength" : 25
              }
            }
          }
        }
      }
    },
    "ConsumerLoanHolidayResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanHolidayResponseBody"
        }
      },
      "description" : "ConsumerLoanHolidayResponse"
    },
    "ConsumerLoanHolidayResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "paymentHoliday" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "date" : {
                            "type" : "string",
                            "description" : "Indicates the date on which activity was performed",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "originalAmount" : {
                            "type" : "string",
                            "description" : "Indicates the original amount of the bill",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "holidayPayAmount" : {
                            "type" : "string",
                            "description" : "New payment amount that is applicable for the corresponding holiday date",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "cancel" : {
                            "type" : "string",
                            "description" : "Indicate if the holiday definition for a given holiday date has to be cancelled",
                            "minLength" : 0,
                            "maxLength" : 6
                          }
                        }
                      }
                    },
                    "paymentDate" : {
                      "type" : "string",
                      "description" : "The date on which a payment is due",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "newPaymentAmount" : {
                      "type" : "string",
                      "description" : "Indicates the new schedule amount which will be processed during the payment holiday period",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "numberOfInstallments" : {
                      "type" : "string",
                      "description" : "Indicates the number of payments in sequence for which the payment holiday applies",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "recalculationMethod" : {
                      "type" : "string",
                      "description" : "This indicates which payment parameter to change when changes occur to payment schedule or when any specific activity is triggered.The recalculation types are: Payment – the payment amount will be changed. Progressive Payment – the payment amount will be incremented/decremented from the calculated amount based on the percentage mentioned in progressive percentage. Term – the term of the arrangement will be altered.Residual – the residual amount will be changed.Nothing – the payments, term, and residual will be unchanged, in this case a recalculation frequency should be specified. Maturity then Payment – Calculation of Term happens first and then if the term exceeds the actual term, recalculation of payment amount is done",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "LoanOutstandingBillsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanOutstandingBillsResponseBody"
        }
      },
      "description" : "LoanOutstandingBillsResponse"
    },
    "LoanOutstandingBillsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "billDate" : {
            "type" : "string",
            "description" : "Indicates a date on which a bill has been raised"
          },
          "billType" : {
            "type" : "string",
            "description" : "The type of payment obligation generated"
          },
          "billed" : {
            "type" : "string",
            "description" : "Indicates the total billed amount of a bill",
            "maxLength" : 19
          },
          "outstanding" : {
            "type" : "string",
            "description" : "The remaining monetary amount on a loan",
            "maxLength" : 19
          },
          "status" : {
            "type" : "string",
            "description" : "Contains status of the data rights request.Allowed values are INITIATED, INPROGESS, EXTENDED, COMPLETED, REJECTED."
          },
          "billStatus" : {
            "type" : "string",
            "description" : "Indicates the status of a bill(Issued,Due,Ageing,Settled)",
            "maxLength" : 15
          },
          "billId" : {
            "type" : "string",
            "description" : "Indicates the bill reference or Id",
            "maxLength" : 35
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "LoanPayoffDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffDetailsResponseBody"
        }
      },
      "description" : "LoanPayoffDetailsResponse"
    },
    "LoanPayoffDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "payoffs" : {
            "type" : "array",
            "description" : "Indicates the settlement of the loan amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "payoffDate" : {
                  "type" : "string",
                  "description" : "Indicates a date on which payoff bill has been raised"
                },
                "totPayoffAmount" : {
                  "type" : "string",
                  "description" : "Indicates the original amount of the bill",
                  "maxLength" : 19
                },
                "interestAmount" : {
                  "type" : "string",
                  "description" : "The accrued Interest due or accrued.",
                  "maxLength" : 19
                }
              }
            }
          },
          "infoPayments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "infoPayDate" : {
                  "type" : "string",
                  "description" : "Indicates the bill date of payoff bill for the perdiem amounts calculated"
                },
                "totPayAmount" : {
                  "type" : "string",
                  "description" : "Indicates the total payment amount which was made due over the tenure",
                  "maxLength" : 19
                },
                "totInterestAmount" : {
                  "type" : "string",
                  "description" : "Indicates the sum of interest amounts which was made due over the tenure",
                  "maxLength" : 19
                }
              }
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "type" : "object",
              "properties" : {
                "propertyName" : {
                  "type" : "string",
                  "description" : "Indicates the  property description to which benefit has been applied"
                },
                "propertyAmount" : {
                  "type" : "string",
                  "description" : "Indicates the payment amount which is corresponding to the product property",
                  "maxLength" : 19
                },
                "unallocatedAmount" : {
                  "type" : "string",
                  "description" : "Indicates an unallocated credit amount to an account",
                  "maxLength" : 19
                }
              }
            }
          },
          "payments" : {
            "type" : "array",
            "description" : "Groups the payment currency and country details",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentType" : {
                  "type" : "string",
                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                  "maxLength" : 19
                },
                "paymentAmount" : {
                  "type" : "string",
                  "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
                  "maxLength" : 19
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          }
        }
      }
    },
    "ConsumerLoansCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoansCustomerBody"
        }
      },
      "description" : "ConsumerLoansCustomer"
    },
    "ConsumerLoansCustomerBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 7
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 9
              }
            }
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 26
                    },
                    "glAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 23
                    }
                  }
                }
              },
              "includeInCRAOfCustomers" : {
                "type" : "array",
                "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "includeInCRAOfCustomer" : {
                      "type" : "string",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        }
      }
    },
    "ConsumerLoansCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoansCustomerResponseBody"
        }
      },
      "description" : "ConsumerLoansCustomerResponse"
    },
    "ConsumerLoansCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 26
                          },
                          "glAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 23
                          }
                        }
                      }
                    },
                    "includeInCRAOfCustomers" : {
                      "type" : "array",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "includeInCRAOfCustomer" : {
                            "type" : "string",
                            "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 14
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PayoffConsumerLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PayoffConsumerLoanBody"
        }
      },
      "description" : "PayoffConsumerLoan"
    },
    "PayoffConsumerLoanBody" : {
      "type" : "object",
      "properties" : {
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 17
        },
        "contractId" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "minLength" : 0,
          "maxLength" : 21
        },
        "systemId" : {
          "type" : "string",
          "description" : "System ID of the originating transaction",
          "minLength" : 0,
          "maxLength" : 19
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "PayoffConsumerLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PayoffConsumerLoanResponseBody"
        }
      },
      "description" : "PayoffConsumerLoanResponse"
    },
    "PayoffConsumerLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 10
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 17
            },
            "contractId" : {
              "type" : "string",
              "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
              "minLength" : 0,
              "maxLength" : 21
            },
            "systemId" : {
              "type" : "string",
              "description" : "System ID of the originating transaction",
              "minLength" : 0,
              "maxLength" : 19
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "ConsumerLoanConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanConditionsBody"
        }
      },
      "description" : "ConsumerLoanConditions"
    },
    "ConsumerLoanConditionsBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 19
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 26
                    },
                    "glAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 23
                    }
                  }
                }
              },
              "includeInCRAOfCustomers" : {
                "type" : "array",
                "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "includeInCRAOfCustomer" : {
                      "type" : "string",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "officers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "primaryOfficer" : {
                "type" : "string",
                "description" : "Specify the primary officer responsible for the arrangement",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Groups the payment currency and country details",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payments" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "payInRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 21
                    },
                    "payInSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "payOutRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                      "minLength" : 0,
                      "maxLength" : 23
                    },
                    "payOutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 24
                    },
                    "propertyClass" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "property" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 14
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                "minLength" : 0,
                "maxLength" : 24
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 18
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        }
      }
    },
    "ConsumerLoanConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanConditionsResponseBody"
        }
      },
      "description" : "ConsumerLoanConditionsResponse"
    },
    "ConsumerLoanConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 22
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 22
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Specifies the charges which has incurred with processing of the cheque",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "charges" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "appplicationPeriod" : {
                                  "type" : "string",
                                  "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "applicationMethod" : {
                                  "type" : "string",
                                  "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                                  "minLength" : 0,
                                  "maxLength" : 17,
                                  "enum" : [ "DUE", "CAPITALISE", "DEFER" ]
                                },
                                "chargeAutoSettle" : {
                                  "type" : "string",
                                  "description" : "This field aids turning off the automatic settlement for the corresponding charge. If set to yes settlement processing for the associated chage will be done based on the settlement configuration for the charge",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "activities" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "activityClassId" : {
                                  "type" : "string",
                                  "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "activityId" : {
                                  "type" : "string",
                                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activityClass" : {
                      "type" : "string",
                      "description" : "The identifier of the activity class",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "activity" : {
                      "type" : "string",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "restriction" : {
                      "type" : "string",
                      "description" : "The user can flag this field to indicate that the activity is to be restricted and can further specify whether the transaction is completely blocked or allowed with a warning. If yes then restriction type has to be specified as error or warning",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "ruleId" : {
                      "type" : "string",
                      "description" : "Used to provide the rule for non-financial transaction, for identified related signatory groups and Minimum number of signatories",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "restrictType" : {
                      "type" : "string",
                      "description" : "The type of restriction that need to be applied on the activity. Allowed values are ERROR, OVERRIDE. If it is set to ERROR then the transaction triggering this activity would be completely blocked. If it is set to OVERRIDE then the transaction triggering this activity would be allowed after displaying a warning",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "override" : {
                      "type" : "string",
                      "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "errorCode" : {
                      "type" : "string",
                      "description" : "Specifies the error code expected in the system which indicates the resrtiction reason for blocking the  transaction completely",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "property" : {
                      "type" : "string",
                      "description" : "Id of the product property",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "appplicationPeriod" : {
                      "type" : "string",
                      "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "applicationMethod" : {
                      "type" : "string",
                      "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "propertyId" : {
                      "type" : "string",
                      "description" : "The identifier of the product condition",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "runTheRule" : {
                      "type" : "string",
                      "description" : "Specify the rule which has to be used for evaluation",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "evaluation" : {
                      "type" : "string",
                      "description" : "This attribute defines the decision that need to be taken when a rule is passed or failed. Options available for this attribute is BREAK and SATISFY. BREAK - A defined rule has failed. SATISFY - A defined rule has passed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "result" : {
                      "type" : "string",
                      "description" : "Status to determine requirements of the agents for scaling of services",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "alternateProperty" : {
                      "type" : "string",
                      "description" : "A property defined here will act as an alternate property if the original property is defined to be waived in evaluation result",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "alHoliday" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "activities" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "activityClassId" : {
                                  "type" : "string",
                                  "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "activityId" : {
                                  "type" : "string",
                                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activityClass" : {
                      "type" : "string",
                      "description" : "The identifier of the activity class",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "activity" : {
                      "type" : "string",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "restriction" : {
                      "type" : "string",
                      "description" : "The user can flag this field to indicate that the activity is to be restricted and can further specify whether the transaction is completely blocked or allowed with a warning. If yes then restriction type has to be specified as error or warning",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "ruleId" : {
                      "type" : "string",
                      "description" : "Used to provide the rule for non-financial transaction, for identified related signatory groups and Minimum number of signatories",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "restrictType" : {
                      "type" : "string",
                      "description" : "The type of restriction that need to be applied on the activity. Allowed values are ERROR, OVERRIDE. If it is set to ERROR then the transaction triggering this activity would be completely blocked. If it is set to OVERRIDE then the transaction triggering this activity would be allowed after displaying a warning",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "override" : {
                      "type" : "string",
                      "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "errorCode" : {
                      "type" : "string",
                      "description" : "Specifies the error code expected in the system which indicates the resrtiction reason for blocking the  transaction completely",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "property" : {
                      "type" : "string",
                      "description" : "Id of the product property",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "appplicationPeriod" : {
                      "type" : "string",
                      "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "applicationMethod" : {
                      "type" : "string",
                      "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "propertyId" : {
                      "type" : "string",
                      "description" : "The identifier of the product condition",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "runTheRule" : {
                      "type" : "string",
                      "description" : "Specify the rule which has to be used for evaluation",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "evaluation" : {
                      "type" : "string",
                      "description" : "This attribute defines the decision that need to be taken when a rule is passed or failed. Options available for this attribute is BREAK and SATISFY. BREAK - A defined rule has failed. SATISFY - A defined rule has passed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "result" : {
                      "type" : "string",
                      "description" : "Status to determine requirements of the agents for scaling of services",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "alternateProperty" : {
                      "type" : "string",
                      "description" : "A property defined here will act as an alternate property if the original property is defined to be waived in evaluation result",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "alOverpayment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "activities" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "activityClassId" : {
                                  "type" : "string",
                                  "description" : "Id of an activity class, e.g. ACCOUNTS-ACCRUE-CHARGE or LENDING-CAPITALISE-INTEREST.",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "activityId" : {
                                  "type" : "string",
                                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activityClass" : {
                      "type" : "string",
                      "description" : "The identifier of the activity class",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "activity" : {
                      "type" : "string",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "restriction" : {
                      "type" : "string",
                      "description" : "The user can flag this field to indicate that the activity is to be restricted and can further specify whether the transaction is completely blocked or allowed with a warning. If yes then restriction type has to be specified as error or warning",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "ruleId" : {
                      "type" : "string",
                      "description" : "Used to provide the rule for non-financial transaction, for identified related signatory groups and Minimum number of signatories",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "restrictType" : {
                      "type" : "string",
                      "description" : "The type of restriction that need to be applied on the activity. Allowed values are ERROR, OVERRIDE. If it is set to ERROR then the transaction triggering this activity would be completely blocked. If it is set to OVERRIDE then the transaction triggering this activity would be allowed after displaying a warning",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "override" : {
                      "type" : "string",
                      "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "errorCode" : {
                      "type" : "string",
                      "description" : "Specifies the error code expected in the system which indicates the resrtiction reason for blocking the  transaction completely",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "property" : {
                      "type" : "string",
                      "description" : "Id of the product property",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "appplicationPeriod" : {
                      "type" : "string",
                      "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "applicationMethod" : {
                      "type" : "string",
                      "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "propertyId" : {
                      "type" : "string",
                      "description" : "The identifier of the product condition",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "runTheRule" : {
                      "type" : "string",
                      "description" : "Specify the rule which has to be used for evaluation",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "evaluation" : {
                      "type" : "string",
                      "description" : "This attribute defines the decision that need to be taken when a rule is passed or failed. Options available for this attribute is BREAK and SATISFY. BREAK - A defined rule has failed. SATISFY - A defined rule has passed",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "result" : {
                      "type" : "string",
                      "description" : "Status to determine requirements of the agents for scaling of services",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "alternateProperty" : {
                      "type" : "string",
                      "description" : "A property defined here will act as an alternate property if the original property is defined to be waived in evaluation result",
                      "minLength" : 0,
                      "maxLength" : 17
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "uncfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tiers" : {
                      "type" : "array",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts. Standard selection to choose from - Single, Level, Banded",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "tierType" : {
                            "type" : "string",
                            "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "calculationType" : {
                            "type" : "string",
                            "description" : "Indicates calculation type for the given source balance",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "charge" : {
                            "type" : "string",
                            "description" : "Indicates the charge property.",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "chargeAmount" : {
                            "type" : "string",
                            "description" : "Retrieves the Charge Amount after redeem",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierMinCharge" : {
                            "type" : "string",
                            "description" : "Indicates the minimum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierMaxCharge" : {
                            "type" : "string",
                            "description" : "Indicates the maximum monetary amount that can be specified for the tier. Applies for Charge with Level/Band Types",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierCount" : {
                            "type" : "string",
                            "description" : "When charges are to be calculated based on activity count, this attribute acts as threshold for the number of times an activity is performed",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "chargeType" : {
                      "type" : "string",
                      "description" : "Indicates the charge types which are applicable for the transaction. Example: CORRBKCHG",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Identifies the currency. E.g. USD, GBP etc",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "chargeRoutine" : {
                      "type" : "string",
                      "description" : "This field enables the user to define a routine to apply complex conditions to calculate the charge amount as required by the user",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "tierGroups" : {
                      "type" : "string",
                      "description" : "This field defines the method of calculation of charge amount for the currency.This field will accept two values BANDS or LEVELS. If BANDS then separate calculations are to be made for each band till the base amount is reached.If LEVELS then only one is calculated and this is dependent on the level of the base Amount",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 26
                          },
                          "glAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 23
                          }
                        }
                      }
                    },
                    "includeInCRAOfCustomers" : {
                      "type" : "array",
                      "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "includeInCRAOfCustomer" : {
                            "type" : "string",
                            "description" : "Denotes that the contracts created for the customers specified in this field should be included in the current customers related contracts",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 14
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "dayBasis" : {
                            "type" : "string",
                            "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "marginTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The product condition has an activity type associated that drives an action.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "period" : {
                      "type" : "string",
                      "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc.",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "method" : {
                      "type" : "string",
                      "description" : "A pricing plan can be applied to an account, the selection is automatic or manual",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "initialDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset. If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "reset" : {
                      "type" : "string",
                      "description" : "This indicates the reset period of the index stated. System would automatically reset the periodic rate at the frequency stated here",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "operand" : {
                      "type" : "string",
                      "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered.",
                      "minLength" : 0,
                      "maxLength" : 7
                    },
                    "marginRate" : {
                      "type" : "string",
                      "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-Mar-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will uses only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will uses only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "dayBasis" : {
                            "type" : "string",
                            "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "marginTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "The product condition has an activity type associated that drives an action.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "period" : {
                      "type" : "string",
                      "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc.",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "method" : {
                      "type" : "string",
                      "description" : "A pricing plan can be applied to an account, the selection is automatic or manual",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "initialDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset. If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "reset" : {
                      "type" : "string",
                      "description" : "This indicates the reset period of the index stated. System would automatically reset the periodic rate at the frequency stated here",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "operand" : {
                      "type" : "string",
                      "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered.",
                      "minLength" : 0,
                      "maxLength" : 7
                    },
                    "marginRate" : {
                      "type" : "string",
                      "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-Mar-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will uses only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will uses only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "officrers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "otherOfficerId" : {
                            "type" : "string",
                            "description" : "Other officers managing the Customer",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "role" : {
                            "type" : "string",
                            "description" : "Indicates the Role of the Customer",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "primaryOfficer" : {
                      "type" : "string",
                      "description" : "Specify the primary officer responsible for the arrangement",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Groups the payment currency and country details",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 8
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "The percentage of holdings redeemed/subscribed",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "calculatedPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount.",
                                  "minLength" : 0,
                                  "maxLength" : 23
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "baseDay" : {
                                  "type" : "string",
                                  "description" : "Indicates the base day which will be used to cycle the Payment date",
                                  "minLength" : 0,
                                  "maxLength" : 7
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "periodicAttributes" : {
                      "type" : "array",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "periodicAttribute" : {
                            "type" : "string",
                            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "repaymentHolidayLimit" : {
                            "type" : "string",
                            "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                            "minLength" : 0,
                            "maxLength" : 21
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "properties" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 22
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "progPercentage" : {
                      "type" : "string",
                      "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "issueBill" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "deferPeriod" : {
                      "type" : "string",
                      "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedAmount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 22
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Defines the expiry date for the payoff bill. The number of days defined would be taken as working days and expiry date for the payoff bill would be calculated as payoff date plus the number of working days defined in this field. When the expiry date is reached the payoff bill would be deleted",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "The percentage of holdings redeemed/subscribed",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 6
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "payInRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 21
                          },
                          "payInSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "payOutRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                            "minLength" : 0,
                            "maxLength" : 23
                          },
                          "payOutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 24
                          },
                          "propertyClass" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          },
                          "property" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 16
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 14
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
                      "minLength" : 0,
                      "maxLength" : 24
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to response by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "tranche" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "trancheStartDate" : {
                            "type" : "string",
                            "description" : "Start date after which the tracheAmount can be withdrawn from the loan as per the withdrawal agreement.",
                            "minLength" : 0,
                            "maxLength" : 16
                          },
                          "trancheEndDate" : {
                            "type" : "string",
                            "description" : "End date by when the tracheAmount can be withdrawn from the loan as per the withdrawal agreement made",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "trancheAmount" : {
                            "type" : "string",
                            "description" : "Amount agreed for withdrawal from the loan on within the trancheStateDates and trancheEndDates",
                            "minLength" : 0,
                            "maxLength" : 13
                          }
                        }
                      }
                    },
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "coolingPeriod" : {
                      "type" : "string",
                      "description" : "Indicates the number of days to be considered for closure of account after renewal or rollover date",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "cancellationPeriod" : {
                      "type" : "string",
                      "description" : "Indicates the Period beyond which a contract is cancelled if it not fully funded in case of deposit or fully disbursed in case of the loan",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "onMaturity" : {
                      "type" : "string",
                      "description" : "If set to due residual amount will be due on the payment end date",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "hasTranches" : {
                      "type" : "string",
                      "description" : "Indicates if the loan is disbursed through a withdrawal agreement where the agreed loan amount is available for withdrawal upon the agreed schedule or based on user request.",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ArrangementDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ArrangementDetailsResponseBody"
        }
      },
      "description" : "ArrangementDetailsResponse"
    },
    "ArrangementDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 17
          },
          "beneficialOwner" : {
            "type" : "string",
            "description" : "Indicates the customer who is the legal owner of the arrangement and is the responsible customer of the contract with bank.",
            "maxLength" : 35
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          },
          "arrangementStartDate" : {
            "type" : "string",
            "description" : "Indicates the date on which the arrangement was created"
          },
          "originalContractDate" : {
            "type" : "string",
            "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
            "maxLength" : 11
          },
          "arrangementStatus" : {
            "type" : "string",
            "description" : "Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc.",
            "maxLength" : 15
          }
        }
      }
    },
    "ExternalEventStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalEventStatusResponseBody"
        }
      },
      "description" : "ExternalEventStatusResponse"
    },
    "ExternalEventStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementActivityId" : {
            "type" : "string",
            "description" : "The unique identifier of an arrangement activity",
            "maxLength" : 40
          },
          "externalEventStatus" : {
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "adjustmentActivityReference" : {
            "type" : "string",
            "description" : "The unique identifier of an compensatory activity triggered for the given activity"
          }
        }
      }
    },
    "PayoffConsumerLoans" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PayoffConsumerLoansBody"
        }
      },
      "description" : "PayoffConsumerLoans"
    },
    "PayoffConsumerLoansBody" : {
      "type" : "object",
      "properties" : {
        "closureNotes" : {
          "type" : "array",
          "description" : "This field is used to hold the notes for the reason of account closure",
          "items" : {
            "type" : "object",
            "properties" : {
              "closureNote" : {
                "type" : "string",
                "description" : "This field is used to hold the notes for the reason of account closure",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "closureReason" : {
          "type" : "string",
          "description" : "This field contains the reason for closing the account",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "PayoffConsumerLoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PayoffConsumerLoansResponseBody"
        }
      },
      "description" : "PayoffConsumerLoansResponse"
    },
    "PayoffConsumerLoansResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "closureNotes" : {
              "type" : "array",
              "description" : "This field is used to hold the notes for the reason of account closure",
              "items" : {
                "type" : "object",
                "properties" : {
                  "closureNote" : {
                    "type" : "string",
                    "description" : "This field is used to hold the notes for the reason of account closure",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 25
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 10
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "closureReason" : {
              "type" : "string",
              "description" : "This field contains the reason for closing the account",
              "minLength" : 0,
              "maxLength" : 35
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
          }
        }
      }
    },
    "PaymentSchedulesProjectionResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSchedulesProjectionResponseBody"
        }
      },
      "description" : "PaymentSchedulesProjectionResponse"
    },
    "PaymentSchedulesProjectionResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which a payment is due"
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          },
          "chargeAmount" : {
            "type" : "number",
            "description" : "Retrieves the Charge Amount after redeem",
            "maximum" : 19
          },
          "interestAmount" : {
            "type" : "number",
            "description" : "The accrued Interest due or accrued.",
            "maximum" : 19
          },
          "principalAmount" : {
            "type" : "number",
            "description" : "Indicates the Principal Amount of the loan or a deposit",
            "maximum" : 19
          },
          "outstandingAmount" : {
            "type" : "number",
            "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
            "maximum" : 19
          },
          "scheduleType" : {
            "type" : "string",
            "description" : "The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR)."
          },
          "taxAmount" : {
            "type" : "string",
            "description" : "Total amount of taxes applicable on all commission or charges calculated for the transaction/payment.",
            "maxLength" : 20
          }
        }
      }
    },
    "LoanOverviewResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanOverviewResponseBody"
        }
      },
      "description" : "LoanOverviewResponse"
    },
    "LoanOverviewResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interests" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "interestRate" : {
                  "type" : "string",
                  "description" : "Identifies the bid rate of the related currency for the defined time period"
                },
                "interestProperty" : {
                  "type" : "string",
                  "description" : "Indicates the interest property name"
                },
                "interestPropertyName" : {
                  "type" : "string",
                  "description" : "Contains the property name of loan interest such as penalty Interest and principal interest."
                },
                "compoundType" : {
                  "type" : "string",
                  "description" : "Contains the frequency type of compound in loan. For example, annually or monthly."
                },
                "rateType" : {
                  "type" : "string",
                  "description" : "Fixed or floating rate."
                },
                "effectiveRate" : {
                  "type" : "string",
                  "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value"
                },
                "tierType" : {
                  "type" : "string",
                  "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level"
                },
                "balanceTypes" : {
                  "type" : "string",
                  "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas."
                },
                "balanceAmount" : {
                  "type" : "number",
                  "description" : "Amount of the balance"
                }
              }
            }
          },
          "schedules" : {
            "type" : "array",
            "description" : "Indicates where this pool may be run either online or End of the day.",
            "items" : {
              "type" : "object",
              "properties" : {
                "schedulePaymentType" : {
                  "type" : "string",
                  "description" : "Indicates payment schedule type"
                },
                "schedulePaymentMethod" : {
                  "type" : "string",
                  "description" : "Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain."
                },
                "scheduleProperty" : {
                  "type" : "string",
                  "description" : "Denotes the property of the loans schedule"
                },
                "schedulePaymentAmount" : {
                  "type" : "number",
                  "description" : "Contains the amount payable in the schedule"
                },
                "schedulePaymentFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the frequency associated - Eg. Pay to customer or paid by bank"
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "maturityDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates maturity date of the contract"
          },
          "maturesIn" : {
            "type" : "string",
            "description" : "Indicates a date or period within which an account gets matured"
          },
          "coolingOffDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges."
          },
          "nextPaymentAmount" : {
            "type" : "number",
            "description" : "Indicates the payment amount to be settled in the next schedule"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "virtualBalance" : {
            "type" : "string",
            "description" : "Contains the virtual balance of the collateral"
          },
          "paidScheduleCount" : {
            "type" : "string",
            "description" : "Count of the paid dates for repayment."
          },
          "dueScheduleCount" : {
            "type" : "string",
            "description" : "Count of the due dates for repayment."
          },
          "futureScheduleCount" : {
            "type" : "string",
            "description" : "Count of the future scheduled payments involving the principal and interest for a given loan"
          },
          "lastPayment" : {
            "type" : "string",
            "format" : "date",
            "description" : "Last committed transaction"
          },
          "term" : {
            "type" : "string",
            "description" : "Indicates the period to which the BID and OFFER rates apply"
          },
          "payoffRequest" : {
            "type" : "string",
            "description" : "Request for loans settlement"
          }
        }
      }
    },
    "LoanBillsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanBillsResponseBody"
        }
      },
      "description" : "LoanBillsResponse"
    },
    "LoanBillsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "type" : "object",
              "properties" : {
                "propertyName" : {
                  "type" : "string",
                  "description" : "Indicates the  property description to which benefit has been applied",
                  "maxLength" : 15
                },
                "interestAmount" : {
                  "type" : "number",
                  "description" : "The accrued Interest due or accrued."
                }
              }
            }
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          }
        }
      }
    },
    "LoanCollateralsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanCollateralsResponseBody"
        }
      },
      "description" : "LoanCollateralsResponse"
    },
    "LoanCollateralsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "collateralName" : {
            "type" : "string",
            "description" : "Contains the name of the collateral",
            "maxLength" : 3
          },
          "executionValue" : {
            "type" : "number",
            "description" : "Denotes the value for signing the document at what is commonly referred to as the closing of the sale",
            "maximum" : 19
          },
          "thirdPartyValue" : {
            "type" : "number",
            "description" : "Denotes the value given by any individual who does not have a direct connection with a legal transaction but might be affected by it",
            "maximum" : 19
          },
          "netAmount" : {
            "type" : "number",
            "description" : "Holds the total amount"
          },
          "netNominal" : {
            "type" : "number",
            "description" : "Denotes the sum of the Quantity",
            "maximum" : 19
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          }
        }
      }
    },
    "LoanDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDetailsResponseBody"
        }
      },
      "description" : "LoanDetailsResponse"
    },
    "LoanDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interests" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "interestRate" : {
                  "type" : "string",
                  "description" : "Identifies the bid rate of the related currency for the defined time period"
                },
                "interestProperty" : {
                  "type" : "string",
                  "description" : "Indicates the interest property name"
                },
                "interestPropertyName" : {
                  "type" : "string",
                  "description" : "Contains the property name of loan interest such as penalty Interest and principal interest."
                },
                "compoundType" : {
                  "type" : "string",
                  "description" : "Contains the frequency type of compound in loan. For example, annually or monthly."
                },
                "rateType" : {
                  "type" : "string",
                  "description" : "Fixed or floating rate."
                },
                "effectiveRate" : {
                  "type" : "string",
                  "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value"
                },
                "tierType" : {
                  "type" : "string",
                  "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level"
                },
                "balanceTypes" : {
                  "type" : "string",
                  "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas."
                },
                "balanceAmount" : {
                  "type" : "number",
                  "description" : "Amount of the balance"
                },
                "interestPaidYtd" : {
                  "type" : "number",
                  "description" : "Interest paid from the start of current year till current date"
                },
                "lastPaidInterestAmount" : {
                  "type" : "number",
                  "description" : "Indicates the interest received last"
                },
                "paymentDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "The date on which a payment is due"
                }
              }
            }
          },
          "schedules" : {
            "type" : "array",
            "description" : "Indicates where this pool may be run either online or End of the day.",
            "items" : {
              "type" : "object",
              "properties" : {
                "paidScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the paid dates for repayment."
                },
                "dueScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the due dates for repayment."
                },
                "futureScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the future scheduled payments involving the principal and interest for a given loan"
                },
                "schedulePaymentType" : {
                  "type" : "string",
                  "description" : "Indicates payment schedule type"
                },
                "schedulePaymentMethod" : {
                  "type" : "string",
                  "description" : "Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain."
                },
                "scheduleProperty" : {
                  "type" : "string",
                  "description" : "Denotes the property of the loans schedule"
                },
                "schedulePaymentAmount" : {
                  "type" : "number",
                  "description" : "Contains the amount payable in the schedule"
                },
                "schedulePaymentFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the frequency associated - Eg. Pay to customer or paid by bank"
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "maturityDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates maturity date of the contract"
          },
          "maturesIn" : {
            "type" : "string",
            "description" : "Indicates a date or period within which an account gets matured"
          },
          "coolingOffDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges."
          },
          "nextPaymentAmount" : {
            "type" : "number",
            "description" : "Indicates the payment amount to be settled in the next schedule"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "virtualBalance" : {
            "type" : "string",
            "description" : "Contains the virtual balance of the collateral"
          },
          "lastPayment" : {
            "type" : "string",
            "format" : "date",
            "description" : "Last committed transaction"
          },
          "term" : {
            "type" : "string",
            "description" : "Indicates the period to which the BID and OFFER rates apply"
          },
          "payoffRequest" : {
            "type" : "string",
            "description" : "Request for loans settlement"
          },
          "accountWithBankBIC" : {
            "type" : "string",
            "description" : "This is the BIC code of the institution where beneficiary holds an account"
          },
          "totalPendingDepositAmount" : {
            "type" : "number",
            "description" : "Contains the total of the deposit amounts which may be available for use in near future"
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer"
          },
          "totalCredits" : {
            "type" : "string",
            "description" : "Contains the total number of credits"
          },
          "totalDebits" : {
            "type" : "string",
            "description" : "Contains the total number of debits"
          },
          "jointCustomerName" : {
            "type" : "string",
            "description" : "Name of Joint Customer"
          },
          "commitmentAmount" : {
            "type" : "number",
            "description" : "Indicates the total amount which will be lent or deposited for the term"
          },
          "lastPaymentAmount" : {
            "type" : "number",
            "description" : "last transaction amount"
          },
          "lastPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date last payment was made"
          },
          "totalDue" : {
            "type" : "string",
            "description" : "This amount represents the total due amount for that period."
          },
          "totalPendingWithdrawalAmount" : {
            "type" : "number",
            "description" : "Contains the total withdrawal amount on hold until payment execution date"
          }
        }
      }
    },
    "PaymentSchedulesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSchedulesResponseBody"
        }
      },
      "description" : "PaymentSchedulesResponse"
    },
    "PaymentSchedulesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which a payment is due"
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          },
          "chargeAmount" : {
            "type" : "number",
            "description" : "Retrieves the Charge Amount after redeem",
            "maximum" : 19
          },
          "interestAmount" : {
            "type" : "number",
            "description" : "The accrued Interest due or accrued.",
            "maximum" : 19
          },
          "principalAmount" : {
            "type" : "number",
            "description" : "Indicates the Principal Amount of the loan or a deposit",
            "maximum" : 19
          },
          "outstandingAmount" : {
            "type" : "number",
            "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
            "maximum" : 19
          },
          "scheduleType" : {
            "type" : "string",
            "description" : "The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR)."
          },
          "taxAmount" : {
            "type" : "string",
            "description" : "Total amount of taxes applicable on all commission or charges calculated for the transaction/payment.",
            "maxLength" : 20
          }
        }
      }
	},
    "SimulationCapture": {
	  "properties": {
		"header": {
		   "$ref": "#/definitions/PayloadHeader"
		},
		"body": {
		  "$ref": "#/definitions/SimulationCaptureBody"
		}
	  },
	  "description": "SimulationCapture"
	},
    "SimulationCaptureBody": {
      "type": "object",
      "properties": {
        "closureNotes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "closureNote": {
                "type": "string",
                "description": "This field is used to hold the notes for the reason of account closure"
              }
            }
          }
        },
        "activityId": {
          "type": "string",
          "description": "The identifier of the activity"
        },
        "automaticRun": {
          "type": "string",
          "description": "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
        },
        "simulationRunReference": {
          "type": "string",
          "description": "Indicates the runner Reference ID for simulation activity"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date",
          "description": "The date on which the principal movement is effected"
        },
        "currencyId": {
          "type": "string",
          "description": "The identifier of the curreny. The is the 3 letter ISO 4217 code of the currency."
        },
        "transactionAmount": {
          "type": "number",
          "description": "The transaction amount"
        },
        "closureReason": {
          "type": "string",
          "description": "This field contains the reason for closing the account"
        },
        "payoff": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "array",
              "description": "This is the payment amount",
              "items": {
                "type": "object",
                "properties": {
                  "fixedamount": {
                    "type": "number",
                    "description": "Indicates the monetary amount that is fixed during the associated account's effective period"
                  }
                }
              }
            },
            "expiryDays": {
              "type": "string",
              "description": "Defines the expiry date for the payoff bill. The number of days defined would be taken as working days and expiry date for the payoff bill would be calculated as payoff date plus the number of working days defined in this field. When the expiry date is reached the payoff bill would be deleted"
            },
            "settleDues": {
              "type": "string",
              "description": "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically"
            },
            "percentage": {
              "type": "number",
              "description": "The percentage of holdings redeemed/subscribed"
            },
            "action": {
              "type": "string",
              "description": "view or cancel options"
            }
          }
        },
        "settlement": {
          "type": "object",
          "properties": {
            "settlement": {
              "type": "array",
              "description": "Indicates settlement conditions associated with the account",
              "items": {
                "type": "object",
                "properties": {
                  "payinSettlement": {
                    "type": "string",
                    "description": "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                  },
                  "payoutSettlement": {
                    "type": "string",
                    "description": "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                  },
                  "reference": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ddMandateReference": {
                          "type": "string",
                          "format": "date",
                          "description": "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1"
                        },
                        "payinAccount": {
                          "type": "string",
                          "description": "Contains the account from which funds are to be debited against the payment type"
                        },
                        "payinBeneficiary": {
                          "type": "string",
                          "description": "Contains the beneficiary Id used for settlement of the bills due"
                        },
                        "payinPercentage": {
                          "type": "number",
                          "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                        },
                        "payinAmount": {
                          "type": "number",
                          "description": "Contains the finite amount of the payment used for settlement of the bills due"
                        },
                        "payoutAccount": {
                          "type": "string",
                          "description": "The account to which a settlement amount is transferred."
                        },
                        "payoutBeneficiary": {
                          "type": "string",
                          "description": "The beneficiary that payment should be made to ."
                        },
                        "payoutPercentage": {
                          "type": "number",
                          "description": "Contains the percentage of the payment amount used for settlement of the payables"
                        },
                        "payoutAmount": {
                          "type": "number",
                          "description": "Contains the finite amount of the payment used for settlement of the payables"
                        }
                      }
                    }
                  }
                }
              }
            },
            "assocSettlement": {
              "type": "array",
              "description": "Indicates the association settlement",
              "items": {
                "type": "object",
                "properties": {
                  "payinSettlement": {
                    "type": "string",
                    "description": "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                  },
                  "payinRule": {
                    "type": "string",
                    "description": "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None"
                  },
                  "payinSettlementActivity": {
                    "type": "string",
                    "description": "Contains the transaction type used for settlement of the bills due"
                  },
                  "payinRCType": {
                    "type": "string",
                    "description": "Contains the transaction type used by the transaction recycler for retrying the debits"
                  },
                  "payinRCCondition": {
                    "type": "string",
                    "description": "Contains the transaction recycling rules which define the set of retry conditions"
                  },
                  "reference": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ddMandateReference": {
                          "type": "string",
                          "format": "date",
                          "description": "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1"
                        },
                        "payinAccount": {
                          "type": "string",
                          "description": "Contains the account from which funds are to be debited against the payment type"
                        },
                        "payinBeneficiary": {
                          "type": "string",
                          "description": "Contains the beneficiary Id used for settlement of the bills due"
                        },
                        "payinPOProduct": {
                          "type": "string",
                          "description": "Contains the payment order product Id for which the payment is initiated"
                        },
                        "payinPercentage": {
                          "type": "number",
                          "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                        },
                        "payinAmount": {
                          "type": "number",
                          "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                        },
                        "payinActivity": {
                          "type": "string",
                          "description": "Contains the transaction type used to debit the customer account for settlement of the bills due"
                        }
                      }
                    }
                  }
                }
              }
            },
            "payout": {
              "type": "array",
              "description": "Indicates the payout details",
              "items": {
                "type": "object",
                "properties": {
                  "payoutSettlement": {
                    "type": "string",
                    "description": "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes"
                  },
                  "payoutSettlementActivity": {
                    "type": "string",
                    "description": "Contains the transaction type used for settlement of the payables"
                  },
                  "property": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "payoutPropertyClass": {
                          "type": "string",
                          "description": "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed"
                        },
                        "payoutProperty": {
                          "type": "string",
                          "description": "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed"
                        },
                        "payoutAccount": {
                          "type": "string",
                          "description": "The account to which a settlement amount is transferred."
                        },
                        "payoutBeneficiary": {
                          "type": "string",
                          "description": "The beneficiary that payment should be made to ."
                        },
                        "payoutPOProduct": {
                          "type": "string",
                          "description": "Contains the payout payment order product for which payment is initiated"
                        },
                        "payoutPercentage": {
                          "type": "number",
                          "description": "Contains the percentage of the payment amount used for settlement of the payables"
                        },
                        "payoutAmount": {
                          "type": "number",
                          "description": "Contains the finite amount of the payment used for settlement of the payables"
                        },
                        "payoutActivity": {
                          "type": "string",
                          "description": "Contains the transaction type used to credit the customer account for settlement of the payables"
                        }
                      }
                    }
                  }
                }
              }
            },
            "paymentType": {
              "type": "string",
              "description": "The payment type identifier"
            },
            "defaultSettlementAccount": {
              "type": "string",
              "description": "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type."
            }
          }
        }
      }
    },
    "SimulationCaptureResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ArrangementHeader"
        },
        "body": {
          "$ref": "#/definitions/SimulationCaptureResponseBody"
        }
      },
      "description": "SimulationCaptureResponse"
    },
    "SimulationCaptureResponseBody": {
      "type": "object",
      "properties": {
        "arrangementActivity": {
          "type": "object",
          "properties": {
            "closureNotes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "closureNote": {
                    "type": "string",
                    "description": "This field is used to hold the notes for the reason of account closure"
                  }
                }
              }
            },
            "arrangementId": {
              "type": "string",
              "description": "The unique identifiier of an arrangement contract. The format of the ID is YYDDDXXXXX prefixed with AA. YYDDD is the year and date of input in julian date format, XXXXX - is a random generated string."
            },
            "activityId": {
              "type": "string",
              "description": "The identifier of the activity"
            },
            "automaticRun": {
              "type": "string",
              "description": "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
            },
            "simulationRunReference": {
              "type": "string",
              "description": "Indicates the runner Reference ID for simulation activity"
            },
            "effectiveDate": {
              "type": "string",
              "format": "date",
              "description": "The date on which the principal movement is effected"
            },
            "currencyId": {
              "type": "string",
              "description": "The identifier of the curreny. The is the 3 letter ISO 4217 code of the currency."
            },
            "transactionAmount": {
              "type": "number",
              "description": "The transaction amount"
            },
            "closureReason": {
              "type": "string",
              "description": "This field contains the reason for closing the account"
            }
          }
        },
        "activities": {
          "type": "object",
          "properties": {
            "{activityName}": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "string"
                },
                "transactionStatus": {
                  "type": "string",
                  "description": "The status of the transaction"
                },
                "id": {
                  "type": "string",
                  "description": "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "payoff": {
              "type": "object",
              "properties": {
                "header": {
                  "type": "object",
                  "properties": {
                    "transactionStatus": {
                      "type": "string",
                      "description": "The status of the transaction"
                    },
                    "audit": {
                      "type": "object",
                      "properties": {
                        "parseTime": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "The Identifier of the record created"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the record"
                    }
                  }
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "array",
                      "description": "This is the payment amount",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fixedamount": {
                            "type": "number",
                            "description": "Indicates the monetary amount that is fixed during the associated account's effective period"
                          }
                        }
                      }
                    },
                    "expiryDays": {
                      "type": "string",
                      "description": "Defines the expiry date for the payoff bill. The number of days defined would be taken as working days and expiry date for the payoff bill would be calculated as payoff date plus the number of working days defined in this field. When the expiry date is reached the payoff bill would be deleted"
                    },
                    "settleDues": {
                      "type": "string",
                      "description": "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically"
                    },
                    "percentage": {
                      "type": "number",
                      "description": "The percentage of holdings redeemed/subscribed"
                    },
                    "action": {
                      "type": "string",
                      "description": "view or cancel options"
                    }
                  }
                }
              }
            },
            "settlement": {
              "type": "object",
              "properties": {
                "header": {
                  "type": "object",
                  "properties": {
                    "transactionStatus": {
                      "type": "string",
                      "description": "The status of the transaction"
                    },
                    "audit": {
                      "type": "object",
                      "properties": {
                        "parseTime": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "The Identifier of the record created"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the record"
                    }
                  }
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "settlement": {
                      "type": "array",
                      "description": "Indicates settlement conditions associated with the account",
                      "items": {
                        "type": "object",
                        "properties": {
                          "payinSettlement": {
                            "type": "string",
                            "description": "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                          },
                          "payoutSettlement": {
                            "type": "string",
                            "description": "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                          },
                          "reference": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ddMandateReference": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1"
                                },
                                "payinAccount": {
                                  "type": "string",
                                  "description": "Contains the account from which funds are to be debited against the payment type"
                                },
                                "payinBeneficiary": {
                                  "type": "string",
                                  "description": "Contains the beneficiary Id used for settlement of the bills due"
                                },
                                "payinPercentage": {
                                  "type": "number",
                                  "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                                },
                                "payinAmount": {
                                  "type": "number",
                                  "description": "Contains the finite amount of the payment used for settlement of the bills due"
                                },
                                "payoutAccount": {
                                  "type": "string",
                                  "description": "The account to which a settlement amount is transferred."
                                },
                                "payoutBeneficiary": {
                                  "type": "string",
                                  "description": "The beneficiary that payment should be made to ."
                                },
                                "payoutPercentage": {
                                  "type": "number",
                                  "description": "Contains the percentage of the payment amount used for settlement of the payables"
                                },
                                "payoutAmount": {
                                  "type": "number",
                                  "description": "Contains the finite amount of the payment used for settlement of the payables"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assocSettlement": {
                      "type": "array",
                      "description": "Indicates the association settlement",
                      "items": {
                        "type": "object",
                        "properties": {
                          "payinSettlement": {
                            "type": "string",
                            "description": "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
                          },
                          "payinRule": {
                            "type": "string",
                            "description": "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None"
                          },
                          "payinSettlementActivity": {
                            "type": "string",
                            "description": "Contains the transaction type used for settlement of the bills due"
                          },
                          "payinRCType": {
                            "type": "string",
                            "description": "Contains the transaction type used by the transaction recycler for retrying the debits"
                          },
                          "payinRCCondition": {
                            "type": "string",
                            "description": "Contains the transaction recycling rules which define the set of retry conditions"
                          },
                          "reference": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ddMandateReference": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1"
                                },
                                "payinAccount": {
                                  "type": "string",
                                  "description": "Contains the account from which funds are to be debited against the payment type"
                                },
                                "payinBeneficiary": {
                                  "type": "string",
                                  "description": "Contains the beneficiary Id used for settlement of the bills due"
                                },
                                "payinPOProduct": {
                                  "type": "string",
                                  "description": "Contains the payment order product Id for which the payment is initiated"
                                },
                                "payinPercentage": {
                                  "type": "number",
                                  "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                                },
                                "payinAmount": {
                                  "type": "number",
                                  "description": "Contains the percentage of the payment amount used for settlement of the bills due"
                                },
                                "payinActivity": {
                                  "type": "string",
                                  "description": "Contains the transaction type used to debit the customer account for settlement of the bills due"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout": {
                      "type": "array",
                      "description": "Indicates the payout details",
                      "items": {
                        "type": "object",
                        "properties": {
                          "payoutSettlement": {
                            "type": "string",
                            "description": "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes"
                          },
                          "payoutSettlementActivity": {
                            "type": "string",
                            "description": "Contains the transaction type used for settlement of the payables"
                          },
                          "property": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "payoutPropertyClass": {
                                  "type": "string",
                                  "description": "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed"
                                },
                                "payoutProperty": {
                                  "type": "string",
                                  "description": "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed"
                                },
                                "payoutAccount": {
                                  "type": "string",
                                  "description": "The account to which a settlement amount is transferred."
                                },
                                "payoutBeneficiary": {
                                  "type": "string",
                                  "description": "The beneficiary that payment should be made to ."
                                },
                                "payoutPOProduct": {
                                  "type": "string",
                                  "description": "Contains the payout payment order product for which payment is initiated"
                                },
                                "payoutPercentage": {
                                  "type": "number",
                                  "description": "Contains the percentage of the payment amount used for settlement of the payables"
                                },
                                "payoutAmount": {
                                  "type": "number",
                                  "description": "Contains the finite amount of the payment used for settlement of the payables"
                                },
                                "payoutActivity": {
                                  "type": "string",
                                  "description": "Contains the transaction type used to credit the customer account for settlement of the payables"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType": {
                      "type": "string",
                      "description": "The payment type identifier"
                    },
                    "defaultSettlementAccount": {
                      "type": "string",
                      "description": "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}