{
  "swagger" : "2.0",
  "info" : {
    "description" : "Retrieves the list of arrangement accounts associated with a customer",
    "version" : "v1.0.0",
    "title" : "Retrieve Customer Arrangements"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "tags" : [ ],
  "schemes" : ["https" ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/holdings/customers/{customerId}/loans" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the List of Loans associated with a customer",
        "description" : "Retrieves the List of Loans associated with a customer",
        "operationId" : "getCustomerLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerLoansResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/customers/loans" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the Loan Details of an account",
        "description" : "Retrieves the Loan Details of an account",
        "operationId" : "getLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoansResponse",
            "schema" : {
              "$ref" : "#/definitions/LoansResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/customers/{customerId}/deposits" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the List of Deposit account for a given customer",
        "description" : "Retrieves the List of Deposit account for a given customer",
        "operationId" : "getCustomerDeposits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDepositsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDepositsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/customers/deposits" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the deposit details for a given account or a customer",
        "description" : "Retrieves the deposit details for a given account or a customer",
        "operationId" : "getDeposits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "DepositsResponse",
            "schema" : {
              "$ref" : "#/definitions/DepositsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/customerArrangements/{customerId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the list of Arrangement Ids for a given Customer",
        "description" : "Retrieves the list of Arrangement Ids for a given Customer -This API is deprecated and going forward the following URL has to be used.URL:/holdings/customers/{customerId}/arrangements",
        "operationId" : "getCustomerArrangementDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerArrangementDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerArrangementDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/holdings/externalProducts/{customerId}/externalAccounts" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the List of available external accounts for a given customer",
        "description" : "Retrieves the List of available external accounts for a given customer",
        "operationId" : "getCustomerExternal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerExternalResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerExternalResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/externalProducts/{customerId}/closedAccounts" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the List of closed external accounts for a given customer",
        "description" : "Retrieves the List of closed external accounts for a given customer",
        "operationId" : "getCustomerClosedExternal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productLine",
          "in" : "query",
          "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productGroup",
          "in" : "query",
          "description" : "Indicates a group under which the products exists",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product",
          "in" : "query",
          "description" : "Specifies the list of products licensed for the institution. This will be used to set the products field in the SPF (System Parameter) table and the master company. The products in the company can only be subset of the products in the SPF table.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerClosedExternalResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerClosedExternalResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    },
    "apiKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "CustomerLoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerLoansResponseBody"
        }
      },
      "description" : "CustomerLoansResponse"
    },
    "CustomerLoansResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "loanAccountId" : {
            "type" : "string",
            "description" : "The identifier of the loan account",
            "maxLength" : 35
          },
          "loanProduct" : {
            "type" : "string",
            "description" : "The loan account product",
            "maxLength" : 30
          },
          "loanCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the loan",
            "maxLength" : 3
          },
          "loanAmount" : {
            "type" : "number",
            "description" : "Indicates loan amount"
          },
          "loanBalance" : {
            "type" : "number",
            "description" : "Indicates the outstanding balance of the loan"
          },
          "loanInterestRate" : {
            "type" : "string",
            "description" : "Indicates the interest rate of the loan"
          },
          "loanInterestType" : {
            "type" : "string",
            "description" : "Indicates the interest rate type - Eg. Fixed, floating, periodic"
          },
          "loanStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan commencement date"
          },
          "loanNextPayDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the next payment date for the loan"
          },
          "loanEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan maturity date"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 10
          },
          "roleDisplayName" : {
            "type" : "string",
            "description" : "Indicates the type of role of a customer"
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "LoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoansResponseBody"
        }
      },
      "description" : "LoansResponse"
    },
    "LoansResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 17
          },
          "loanAccountId" : {
            "type" : "string",
            "description" : "The identifier of the loan account",
            "maxLength" : 35
          },
          "loanProduct" : {
            "type" : "string",
            "description" : "The loan account product",
            "maxLength" : 30
          },
          "loanCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the loan",
            "maxLength" : 3
          },
          "loanAmount" : {
            "type" : "number",
            "description" : "Indicates loan amount"
          },
          "loanBalance" : {
            "type" : "number",
            "description" : "Indicates the outstanding balance of the loan"
          },
          "loanInterestRate" : {
            "type" : "string",
            "description" : "Indicates the interest rate of the loan"
          },
          "loanInterestType" : {
            "type" : "string",
            "description" : "Indicates the interest rate type - Eg. Fixed, floating, periodic"
          },
          "loanStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan commencement date"
          },
          "loanNextPayDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the next payment date for the loan"
          },
          "loanEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan maturity date"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 10
          },
          "roleDisplayName" : {
            "type" : "string",
            "description" : "Indicates the type of role of a customer"
          }
        }
      }
    },
    "CustomerDepositsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDepositsResponseBody"
        }
      },
      "description" : "CustomerDepositsResponse"
    },
    "CustomerDepositsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "depInterestRates" : {
            "type" : "array",
            "description" : "The interest rate applied on the deposit account.",
            "items" : {
              "type" : "object",
              "properties" : {
                "depInterestRate" : {
                  "type" : "array",
                  "description" : "The interest rate applied on the deposit account.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "depAccountId" : {
            "type" : "string",
            "description" : "The identifier of the deposit account",
            "maxLength" : 35
          },
          "depProduct" : {
            "type" : "string",
            "description" : "The deposit account product ",
            "maxLength" : 30
          },
          "depCurrency" : {
            "type" : "string",
            "description" : "Currency of the deposit account, 3-letter ISO 4217 code.",
            "maxLength" : 3
          },
          "depAmount" : {
            "type" : "string",
            "description" : "Indicates the total deposit amount"
          },
          "depInterestType" : {
            "type" : "string",
            "description" : "The type of interest - fixed, floating, periodic"
          },
          "depStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The start date for the deposit account"
          },
          "depEndDate" : {
            "type" : "string",
            "description" : "The maturity date of the deposit agreement."
          },
          "depBalance" : {
            "type" : "string",
            "description" : "Indicates the current outstanding balance"
          },
          "depNextPayDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the next payment date for the deposit"
          }
        }
      }
    },
    "DepositsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DepositsResponseBody"
        }
      },
      "description" : "DepositsResponse"
    },
    "DepositsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "depInterestRates" : {
            "type" : "array",
            "description" : "The interest rate applied on the deposit account.",
            "items" : {
              "type" : "object",
              "properties" : {
                "depInterestRate" : {
                  "type" : "array",
                  "description" : "The interest rate applied on the deposit account.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "depAccountId" : {
            "type" : "string",
            "description" : "The identifier of the deposit account",
            "maxLength" : 35
          },
          "depProduct" : {
            "type" : "string",
            "description" : "The deposit account product ",
            "maxLength" : 30
          },
          "depCurrency" : {
            "type" : "string",
            "description" : "Currency of the deposit account, 3-letter ISO 4217 code.",
            "maxLength" : 3
          },
          "depAmount" : {
            "type" : "string",
            "description" : "Indicates the total deposit amount"
          },
          "depInterestType" : {
            "type" : "string",
            "description" : "The type of interest - fixed, floating, periodic"
          },
          "depStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The start date for the deposit account"
          },
          "depEndDate" : {
            "type" : "string",
            "description" : "The maturity date of the deposit agreement."
          },
          "depBalance" : {
            "type" : "string",
            "description" : "Indicates the current outstanding balance"
          },
          "depNextPayDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the next payment date for the deposit"
          },
          "depProductDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the deposit account product"
          }
        }
      }
    },
    "CustomerArrangementDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerArrangementDetailsResponseBody"
        }
      },
      "description" : "CustomerArrangementDetailsResponse"
    },
    "CustomerArrangementDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productLines" : {
            "type" : "array",
            "description" : "The group, as defined by the institution, that the product belongs to.",
            "items" : {
              "type" : "object",
              "properties" : {
                "productLine" : {
                  "type" : "string",
                  "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                  "maxLength" : 35
                },
                "productGroupIds" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "productGroupId" : {
                        "type" : "string",
                        "description" : "The group, as defined by the institution, that the product belongs to.",
                        "maxLength" : 30
                      },
                      "arrangementId" : {
                        "type" : "string",
                        "description" : "Indicates an unique identifier of an account",
                        "maxLength" : 30
                      },
                      "customerRole" : {
                        "type" : "string",
                        "description" : "Indicates role of a customer for an arrangement.",
                        "maxLength" : 30
                      }
                    }
                  }
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 17
          }
        }
      }
    },
    "CustomerExternalResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerExternalResponseBody"
        }
      },
      "description" : "CustomerExternalResponse"
    },
    "CustomerExternalResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 17
          },
          "customer" : {
            "type" : "string",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed."
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 35
          },
          "customerRole" : {
            "type" : "string",
            "description" : "Indicates role of a customer for an arrangement.",
            "maxLength" : 30
          },
          "productLine" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 10
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          }
        }
      }
    },
    "CustomerClosedExternalResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerClosedExternalResponseBody"
        }
      },
      "description" : "CustomerClosedExternalResponse"
    },
    "CustomerClosedExternalResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 17
          },
          "customer" : {
            "type" : "string",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed."
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 35
          },
          "customerRole" : {
            "type" : "string",
            "description" : "Indicates role of a customer for an arrangement.",
            "maxLength" : 30
          },
          "productLine" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
            "maxLength" : 10
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          },
          "productCode" : {
            "type" : "string",
            "description" : "Specifies the code required to install a new product."
          }
        }
      }
    }
  }
}